
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPER AMPERAMPER AMPEREQUAL BANG BINARYNUM BOOL BREAK CASE CATCH CHAR CHARLITERAL CIRCUMEQUAL CIRCUMFLEX CLASS COLON COMMA CONST CONTINUE DECIMAL DECIMALNUM DEFAULT DO DOT DOUBLE DOUBLENUM ELSE ENUM EQEQUAL EQUAL FALSE FINALLY FLOAT FLOATNUM FOR FOREACH GEQ GT HEXADECIMALNUM HOOK HOOKHOOK HOOKHOOKEQUAL ID IF IN INT INTERFACE INTNUM IS LBRACE LEQ LONG LPAREN LSB LSHIFT LSHIFTEQUAL LT MINUS MINUSEQUAL MINUSMINUS NAMESPACE NEW NOTEQUAL NULL OBJECT OUT OVERRIDE PARAMS PERCENT PERCENTEQUAL PIPE PIPEEQUAL PIPEPIPE PLUS PLUSEQUAL PLUSPLUS PRIVATE PROTECTED PUBLIC RBRACE READONLY REF RETURN RPAREN RSB RSHIFT RSHIFTEQUAL SEMI SHORT SIZEOF SLASH SLASHEQUAL STAR STAREQUAL STATIC STRING STRINGLITERAL STRUCT SWITCH THIS THROW TILDE TRUE TRY TYPEOF UINT ULONG USHORT VOID WHILEprogram : func_declaration\n               | func_declaration programtype : class_type\n            | value_typeclass_type : OBJECT\n                  | STRINGvalue_type : integral_type\n                  | floating_point_type\n                  | BOOL\n                  | VOIDintegral_type : INTintegral_type : LONGintegral_type : CHARfloating_point_type : FLOATfloating_point_type : DOUBLEfloating_point_type : DECIMALfunc_declaration : signature blocksignature : type ID LPAREN param_list RPAREN\n                 | type ID LPAREN RPARENparam_list : type ID\n                  | type ID COMMA param_liststatement_list : statement\n                      | statement statement_liststatement : declaration_statement\n                 | embedded_statementdeclaration_statement : const_declaration SEMI\n                             | var_declaration SEMIconst_declaration : CONST type const_declaratorsconst_declarators : const_declarator\n                         | const_declarator COMMA const_declaratorsconst_declarator : ID EQUAL expvar_declaration : type var_declaratorsvar_declarators : var_declarator\n                       | var_declarator COMMA var_declaratorsvar_declarator : ID\n                      | ID EQUAL expembedded_statement : block\n                          | empty_statement\n                          | exp_statement\n                          | selection_statement\n                          | iteration_statement\n                          | jump_statementblock : LBRACE statement_list RBRACE\n             | LBRACE RBRACEempty_statement : SEMIexp_statement : statement_exp SEMIstatement_exp : invocation_exp\n                     | object_creation_exp\n                     | assignment\n                     | post_increment_exp\n                     | post_decrement_exp\n                     | pre_increment_exp\n                     | pre_decrement_expobject_creation_exp : NEW type LPAREN RPAREN\n                           | NEW type LPAREN RPAREN object_initializer\n                           | NEW type LPAREN arg_list RPAREN\n                           | NEW type LPAREN arg_list RPAREN object_initializerobject_initializer : LBRACE RBRACE\n                          | LBRACE member_initializer_list RBRACEmember_initializer_list : member_initializer\n                               | member_initializer COMMA member_initializer_listmember_initializer : ID EQUAL exppost_increment_exp : primary_exp PLUSPLUSpost_decrement_exp : primary_exp MINUSMINUSpre_increment_exp : PLUSPLUS unary_exppre_decrement_exp : MINUSMINUS unary_expselection_statement : if_statement\n                           | switch_statementif_statement : IF LPAREN exp RPAREN block\n                    | IF LPAREN exp RPAREN block ELSE blockswitch_statement : SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACEswitch_body : switch_section\n                   | switch_section switch_bodyswitch_section : switch_label statement_listswitch_section : switch_label switch_sectionswitch_label : CASE pattern COLON\n                    | DEFAULT COLONpattern : expiteration_statement : while_statement\n                           | do_statement\n                           | for_statement\n                           | foreach_statementwhile_statement : WHILE LPAREN exp RPAREN embedded_statementdo_statement : DO embedded_statement WHILE LPAREN exp RPAREN SEMIfor_statement : FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statementfor_statement : FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statementfor_statement : FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statementfor_statement : FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statementfor_statement : FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statementfor_statement : FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statementfor_statement : FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statementfor_statement : FOR LPAREN SEMI SEMI RPAREN embedded_statementfor_initializer : var_declarationfor_condition : expfor_iterator : statement_exp_liststatement_exp_list : statement_exp\n                          | statement_exp COMMA statement_exp_listforeach_statement : FOREACH LPAREN type ID IN exp RPAREN embedded_statementjump_statement : break_statement\n                      | continue_statement\n                      | return_statementbreak_statement : BREAK SEMIcontinue_statement : CONTINUE SEMIreturn_statement : RETURN SEMI\n                        | RETURN exp SEMIarg_list : exp\n                | exp COMMA arg_listprimary_exp : primary_no_array_creation_expprimary_no_array_creation_exp : TRUE\n                                     | FALSEprimary_no_array_creation_exp : NULLprimary_no_array_creation_exp : INTNUMprimary_no_array_creation_exp : HEXADECIMALNUMprimary_no_array_creation_exp : BINARYNUMprimary_no_array_creation_exp : FLOATNUMprimary_no_array_creation_exp : DOUBLENUMprimary_no_array_creation_exp : DECIMALNUMprimary_no_array_creation_exp : CHARLITERALprimary_no_array_creation_exp : STRINGLITERALprimary_no_array_creation_exp : IDprimary_no_array_creation_exp : parenthesized_expparenthesized_exp : LPAREN exp RPARENprimary_no_array_creation_exp : member_accessmember_access : primary_exp DOT IDprimary_no_array_creation_exp : invocation_expinvocation_exp : primary_exp LPAREN RPAREN\n                      | primary_exp LPAREN arg_list RPARENprimary_no_array_creation_exp : element_accesselement_access : primary_no_array_creation_exp LSB exp RSBprimary_no_array_creation_exp : THISprimary_no_array_creation_exp : post_increment_expprimary_no_array_creation_exp : post_decrement_expprimary_no_array_creation_exp : object_creation_expprimary_no_array_creation_exp : typeof_exptypeof_exp : TYPEOF LPAREN type RPARENprimary_no_array_creation_exp : sizeof_expsizeof_exp : SIZEOF LPAREN value_type RPARENexp_list : exp\n                | exp_list COMMA expunary_exp : primary_expunary_exp : pre_increment_expunary_exp : pre_decrement_expunary_exp : cast_expcast_exp : LPAREN type RPAREN unary_expunary_exp : minus_expminus_exp : MINUS unary_expunary_exp : plus_expplus_exp : PLUS unary_expexp : non_assignment_expexp : assignmentnon_assignment_exp : conditional_expconditional_exp : conditional_or_exp HOOK exp COLON exp\n                       | conditional_or_expconditional_or_exp : conditional_or_exp PIPEPIPE conditional_and_exp\n                          | conditional_and_expconditional_and_exp : conditional_and_exp AMPERAMPER inclusive_or_exp\n                           | inclusive_or_expinclusive_or_exp : inclusive_or_exp PIPE exclusive_or_exp\n                        | exclusive_or_expexclusive_or_exp : exclusive_or_exp CIRCUMFLEX and_exp\n                        | and_expand_exp : and_exp AMPER equality_exp\n               | equality_expequality_exp : equality_exp EQEQUAL relational_exp\n                    | equality_exp NOTEQUAL relational_exp\n                    | relational_exprelational_exp : relational_exp LT shift_exp\n                      | relational_exp GT shift_exp\n                      | relational_exp LEQ shift_exp\n                      | relational_exp GEQ shift_exp\n                      | relational_exp IS type\n                      | shift_expshift_exp : shift_exp LSHIFT additive_exp\n                 | shift_exp RSHIFT additive_exp\n                 | additive_expadditive_exp : additive_exp PLUS multiplicative_exp\n                    | additive_exp MINUS multiplicative_exp\n                    | multiplicative_expmultiplicative_exp : multiplicative_exp STAR unary_exp\n                          | multiplicative_exp SLASH unary_exp\n                          | multiplicative_exp PERCENT unary_exp\n                          | unary_expassignment : unary_exp EQUAL exp'
    
_lr_action_items = {'OBJECT':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,97,98,100,101,106,134,135,136,137,138,151,176,191,245,248,251,270,278,288,289,295,296,298,301,304,309,310,312,313,314,317,],[7,7,-17,7,-44,7,-24,-25,-45,-37,-38,-39,-40,-41,-42,7,-67,-68,-79,-80,-81,-82,-99,-100,-101,7,7,7,-43,-26,-27,-46,7,7,-102,-103,-104,7,7,-105,7,-69,-83,7,-92,-70,-71,-77,-84,-88,-91,-90,-76,-87,-86,-89,-98,-85,]),'STRING':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,97,98,100,101,106,134,135,136,137,138,151,176,191,245,248,251,270,278,288,289,295,296,298,301,304,309,310,312,313,314,317,],[8,8,-17,8,-44,8,-24,-25,-45,-37,-38,-39,-40,-41,-42,8,-67,-68,-79,-80,-81,-82,-99,-100,-101,8,8,8,-43,-26,-27,-46,8,8,-102,-103,-104,8,8,-105,8,-69,-83,8,-92,-70,-71,-77,-84,-88,-91,-90,-76,-87,-86,-89,-98,-85,]),'BOOL':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,97,98,100,101,106,134,135,136,137,138,151,152,176,191,245,248,251,270,278,288,289,295,296,298,301,304,309,310,312,313,314,317,],[11,11,-17,11,-44,11,-24,-25,-45,-37,-38,-39,-40,-41,-42,11,-67,-68,-79,-80,-81,-82,-99,-100,-101,11,11,11,-43,-26,-27,-46,11,11,-102,-103,-104,11,11,11,-105,11,-69,-83,11,-92,-70,-71,-77,-84,-88,-91,-90,-76,-87,-86,-89,-98,-85,]),'VOID':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,97,98,100,101,106,134,135,136,137,138,151,152,176,191,245,248,251,270,278,288,289,295,296,298,301,304,309,310,312,313,314,317,],[12,12,-17,12,-44,12,-24,-25,-45,-37,-38,-39,-40,-41,-42,12,-67,-68,-79,-80,-81,-82,-99,-100,-101,12,12,12,-43,-26,-27,-46,12,12,-102,-103,-104,12,12,12,-105,12,-69,-83,12,-92,-70,-71,-77,-84,-88,-91,-90,-76,-87,-86,-89,-98,-85,]),'INT':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,97,98,100,101,106,134,135,136,137,138,151,152,176,191,245,248,251,270,278,288,289,295,296,298,301,304,309,310,312,313,314,317,],[13,13,-17,13,-44,13,-24,-25,-45,-37,-38,-39,-40,-41,-42,13,-67,-68,-79,-80,-81,-82,-99,-100,-101,13,13,13,-43,-26,-27,-46,13,13,-102,-103,-104,13,13,13,-105,13,-69,-83,13,-92,-70,-71,-77,-84,-88,-91,-90,-76,-87,-86,-89,-98,-85,]),'LONG':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,97,98,100,101,106,134,135,136,137,138,151,152,176,191,245,248,251,270,278,288,289,295,296,298,301,304,309,310,312,313,314,317,],[14,14,-17,14,-44,14,-24,-25,-45,-37,-38,-39,-40,-41,-42,14,-67,-68,-79,-80,-81,-82,-99,-100,-101,14,14,14,-43,-26,-27,-46,14,14,-102,-103,-104,14,14,14,-105,14,-69,-83,14,-92,-70,-71,-77,-84,-88,-91,-90,-76,-87,-86,-89,-98,-85,]),'CHAR':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,97,98,100,101,106,134,135,136,137,138,151,152,176,191,245,248,251,270,278,288,289,295,296,298,301,304,309,310,312,313,314,317,],[15,15,-17,15,-44,15,-24,-25,-45,-37,-38,-39,-40,-41,-42,15,-67,-68,-79,-80,-81,-82,-99,-100,-101,15,15,15,-43,-26,-27,-46,15,15,-102,-103,-104,15,15,15,-105,15,-69,-83,15,-92,-70,-71,-77,-84,-88,-91,-90,-76,-87,-86,-89,-98,-85,]),'FLOAT':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,97,98,100,101,106,134,135,136,137,138,151,152,176,191,245,248,251,270,278,288,289,295,296,298,301,304,309,310,312,313,314,317,],[16,16,-17,16,-44,16,-24,-25,-45,-37,-38,-39,-40,-41,-42,16,-67,-68,-79,-80,-81,-82,-99,-100,-101,16,16,16,-43,-26,-27,-46,16,16,-102,-103,-104,16,16,16,-105,16,-69,-83,16,-92,-70,-71,-77,-84,-88,-91,-90,-76,-87,-86,-89,-98,-85,]),'DOUBLE':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,97,98,100,101,106,134,135,136,137,138,151,152,176,191,245,248,251,270,278,288,289,295,296,298,301,304,309,310,312,313,314,317,],[17,17,-17,17,-44,17,-24,-25,-45,-37,-38,-39,-40,-41,-42,17,-67,-68,-79,-80,-81,-82,-99,-100,-101,17,17,17,-43,-26,-27,-46,17,17,-102,-103,-104,17,17,17,-105,17,-69,-83,17,-92,-70,-71,-77,-84,-88,-91,-90,-76,-87,-86,-89,-98,-85,]),'DECIMAL':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,97,98,100,101,106,134,135,136,137,138,151,152,176,191,245,248,251,270,278,288,289,295,296,298,301,304,309,310,312,313,314,317,],[18,18,-17,18,-44,18,-24,-25,-45,-37,-38,-39,-40,-41,-42,18,-67,-68,-79,-80,-81,-82,-99,-100,-101,18,18,18,-43,-26,-27,-46,18,18,-102,-103,-104,18,18,18,-105,18,-69,-83,18,-92,-70,-71,-77,-84,-88,-91,-90,-76,-87,-86,-89,-98,-85,]),'$end':([1,2,19,20,24,98,],[0,-1,-2,-17,-44,-43,]),'LBRACE':([3,21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,60,98,100,101,106,136,137,138,155,191,202,207,230,231,240,248,251,256,264,266,270,275,277,278,281,288,289,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[21,21,-44,21,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,21,-43,-26,-27,-46,-102,-103,-104,-19,-105,-18,21,250,21,263,-69,-83,21,263,21,21,21,21,-92,21,-70,-71,-77,-84,21,-88,21,-91,21,-90,21,-76,-87,21,-86,-89,-98,-85,]),'ID':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,24,25,26,27,29,31,32,33,34,35,36,38,40,41,42,43,44,45,46,47,48,57,60,66,70,71,93,94,98,100,101,102,106,107,131,132,136,137,138,140,143,145,148,153,159,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,190,191,196,203,204,231,232,233,234,239,248,249,251,253,256,259,260,263,270,271,275,276,277,278,279,281,288,289,295,296,297,298,300,301,303,304,305,307,308,309,310,311,312,313,314,317,],[22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,63,-44,63,-24,-25,-45,-37,-38,-39,-40,-41,-42,105,-67,-68,-79,-80,-81,-82,-99,-100,-101,63,63,63,63,63,63,63,-43,-26,-27,158,-46,63,63,63,-102,-103,-104,63,195,63,63,201,105,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,237,-105,63,158,63,63,63,63,63,63,-69,63,-83,63,63,63,63,286,63,63,63,63,63,-92,63,63,-70,-71,-77,-84,63,-88,63,-91,63,-90,63,286,63,-76,-87,63,-86,-89,-98,-85,]),'RPAREN':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,49,50,51,52,53,54,55,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,97,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,140,141,142,146,147,149,150,154,161,163,184,185,192,193,194,195,196,197,199,200,201,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,234,238,240,241,242,243,244,252,253,255,257,258,259,261,262,264,265,267,274,276,280,282,283,287,299,302,306,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-47,-48,-49,-50,-51,-52,-53,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,155,162,-182,163,-149,-150,-151,-153,-140,-141,-142,-155,-157,-125,-131,-132,-133,-159,-161,-163,-166,-172,-175,-178,192,-63,-64,-65,-66,-146,-148,202,207,-122,230,231,-126,238,-106,-124,240,-183,243,244,-20,-144,-154,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,256,-127,-54,264,-129,-135,-137,273,275,277,-95,-96,281,-107,-55,-56,-21,-152,297,300,303,305,-58,-57,311,-97,-59,]),'LPAREN':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,52,53,56,57,58,59,60,61,62,63,66,67,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,100,101,106,107,115,120,121,122,123,131,132,136,137,138,140,141,142,144,145,148,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,186,188,191,192,195,196,204,231,232,233,234,238,239,240,242,243,244,248,249,251,253,256,259,260,262,264,270,271,275,276,277,278,279,281,283,287,288,289,295,296,297,298,300,301,303,304,305,306,308,309,310,311,312,313,314,317,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,57,97,-44,57,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,-125,-133,-131,-132,107,57,131,132,57,134,135,-120,57,140,57,57,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,57,57,151,152,-43,-26,-27,-46,57,140,-125,-131,-132,-133,57,57,-102,-103,-104,57,-63,-64,196,57,57,57,57,-122,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,232,57,-105,-126,-124,57,57,57,57,57,57,-127,57,-54,-129,-135,-137,-69,57,-83,57,57,57,57,-55,-56,57,57,57,57,57,-92,57,57,-58,-57,-70,-71,-77,-84,57,-88,57,-91,57,-90,57,-59,57,-76,-87,57,-86,-89,-98,-85,]),'LT':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,115,116,117,120,121,122,123,127,128,129,130,141,142,146,147,149,150,163,192,195,208,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-140,-141,-142,-125,-131,-132,-133,172,-172,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-182,172,172,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'GT':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,115,116,117,120,121,122,123,127,128,129,130,141,142,146,147,149,150,163,192,195,208,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-140,-141,-142,-125,-131,-132,-133,173,-172,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-182,173,173,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'LEQ':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,115,116,117,120,121,122,123,127,128,129,130,141,142,146,147,149,150,163,192,195,208,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-140,-141,-142,-125,-131,-132,-133,174,-172,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-182,174,174,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'GEQ':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,115,116,117,120,121,122,123,127,128,129,130,141,142,146,147,149,150,163,192,195,208,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-140,-141,-142,-125,-131,-132,-133,175,-172,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-182,175,175,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'IS':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,115,116,117,120,121,122,123,127,128,129,130,141,142,146,147,149,150,163,192,195,208,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-140,-141,-142,-125,-131,-132,-133,176,-172,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-182,176,176,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'EQEQUAL':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,115,116,117,120,121,122,123,126,127,128,129,130,141,142,146,147,149,150,163,192,195,208,211,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-140,-141,-142,-125,-131,-132,-133,170,-166,-172,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-182,170,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'NOTEQUAL':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,115,116,117,120,121,122,123,126,127,128,129,130,141,142,146,147,149,150,163,192,195,208,211,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-140,-141,-142,-125,-131,-132,-133,171,-166,-172,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-182,171,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'AMPER':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,115,116,117,120,121,122,123,125,126,127,128,129,130,141,142,146,147,149,150,163,192,195,208,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-140,-141,-142,-125,-131,-132,-133,169,-163,-166,-172,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-182,169,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'CIRCUMFLEX':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,115,116,117,120,121,122,123,124,125,126,127,128,129,130,141,142,146,147,149,150,163,192,195,208,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-140,-141,-142,-125,-131,-132,-133,168,-161,-163,-166,-172,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-182,168,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'PIPE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,115,116,117,119,120,121,122,123,124,125,126,127,128,129,130,141,142,146,147,149,150,163,192,195,208,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-140,-141,-142,167,-125,-131,-132,-133,-159,-161,-163,-166,-172,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-182,167,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'AMPERAMPER':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,141,142,146,147,149,150,163,192,195,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-140,-141,-142,166,-157,-125,-131,-132,-133,-159,-161,-163,-166,-172,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,166,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'HOOK':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,141,142,146,147,149,150,163,192,195,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,164,-140,-141,-142,-155,-157,-125,-131,-132,-133,-159,-161,-163,-166,-172,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-154,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'PIPEPIPE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,141,142,146,147,149,150,163,192,195,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,165,-140,-141,-142,-155,-157,-125,-131,-132,-133,-159,-161,-163,-166,-172,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-154,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'SEMI':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,60,63,64,65,66,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,100,101,103,104,105,106,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,134,136,137,138,139,141,142,146,147,149,150,156,157,163,187,188,189,191,192,195,197,205,206,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,233,235,236,238,240,242,243,244,246,247,248,251,254,256,262,264,267,270,273,275,277,278,281,283,287,288,289,295,296,297,298,300,301,303,304,305,306,309,310,311,312,313,314,317,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,29,-44,29,-24,-25,100,-45,101,-37,-38,-39,-40,-41,-42,106,-67,-68,-79,-80,-81,-82,-99,-100,-101,-47,-48,-49,-50,-51,-52,-53,29,-120,136,137,138,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-43,-26,-27,-32,-33,-35,-46,-182,-149,-150,-151,-153,-140,-141,-142,-155,-157,-125,-131,-132,-133,-159,-161,-163,-166,-172,-175,-178,188,-102,-103,-104,191,-63,-64,-65,-66,-146,-148,-28,-29,-122,233,234,-93,-105,-126,-124,-183,-34,-36,-144,-154,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,29,253,259,-94,-127,-54,-129,-135,-137,-30,-31,-69,-83,276,29,-55,-56,-152,29,296,29,29,-92,29,-58,-57,-70,-71,-77,-84,29,-88,29,-91,29,-90,29,-59,-76,-87,29,-86,-89,-98,-85,]),'COMMA':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,49,50,51,52,53,54,55,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,104,105,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,141,142,146,147,149,150,157,163,192,194,195,197,201,206,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,247,258,262,264,267,283,285,287,306,316,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-47,-48,-49,-50,-51,-52,-53,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,159,-35,-182,-149,-150,-151,-153,-140,-141,-142,-155,-157,-125,-131,-132,-133,-159,-161,-163,-166,-172,-175,-178,-63,-64,-65,-66,-146,-148,203,-122,-126,239,-124,-183,245,-36,-144,-154,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-31,279,-55,-56,-152,-58,307,-57,-59,-62,]),'RSB':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,141,142,146,147,149,150,163,192,195,197,198,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,262,264,267,283,287,306,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-149,-150,-151,-153,-140,-141,-142,-155,-157,-125,-131,-132,-133,-159,-161,-163,-166,-172,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-183,242,-144,-154,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-152,-58,-57,-59,]),'COLON':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,141,142,146,147,149,150,163,192,195,197,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,262,264,267,272,283,287,293,294,306,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-149,-150,-151,-153,-140,-141,-142,-155,-157,-125,-131,-132,-133,-159,-161,-163,-166,-172,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-183,-144,249,-154,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-152,295,-58,-57,309,-78,-59,]),'RBRACE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,23,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,98,99,100,101,106,109,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,136,137,138,141,142,146,147,149,150,163,191,192,195,197,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,238,240,242,243,244,248,251,262,263,264,267,268,269,278,283,284,285,287,288,289,290,291,292,296,298,301,304,306,310,312,313,314,315,316,317,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,24,98,-44,-22,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-43,-23,-26,-27,-46,-182,-149,-150,-151,-153,-140,-141,-142,-155,-157,-125,-131,-132,-133,-159,-161,-163,-166,-172,-175,-178,-102,-103,-104,-63,-64,-65,-66,-146,-148,-122,-105,-126,-124,-183,-144,-154,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-69,-83,-55,283,-56,-152,289,-72,-92,-58,306,-60,-57,-70,-71,-73,-74,-75,-84,-88,-91,-90,-59,-87,-86,-89,-98,-61,-62,-85,]),'CONST':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,98,100,101,106,136,137,138,191,248,251,270,278,288,289,295,296,298,301,304,309,310,312,313,314,317,],[37,-44,37,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,-43,-26,-27,-46,-102,-103,-104,-105,-69,-83,37,-92,-70,-71,-77,-84,-88,-91,-90,-76,-87,-86,-89,-98,-85,]),'IF':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,60,98,100,101,106,136,137,138,191,231,248,251,256,270,275,277,278,281,288,289,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[56,-44,56,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,56,-43,-26,-27,-46,-102,-103,-104,-105,56,-69,-83,56,56,56,56,-92,56,-70,-71,-77,-84,56,-88,56,-91,56,-90,56,-76,-87,56,-86,-89,-98,-85,]),'SWITCH':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,60,98,100,101,106,136,137,138,191,231,248,251,256,270,275,277,278,281,288,289,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[58,-44,58,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,58,-43,-26,-27,-46,-102,-103,-104,-105,58,-69,-83,58,58,58,58,-92,58,-70,-71,-77,-84,58,-88,58,-91,58,-90,58,-76,-87,58,-86,-89,-98,-85,]),'WHILE':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,60,98,100,101,106,133,136,137,138,191,231,248,251,256,270,275,277,278,281,288,289,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[59,-44,59,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,59,-43,-26,-27,-46,186,-102,-103,-104,-105,59,-69,-83,59,59,59,59,-92,59,-70,-71,-77,-84,59,-88,59,-91,59,-90,59,-76,-87,59,-86,-89,-98,-85,]),'DO':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,60,98,100,101,106,136,137,138,191,231,248,251,256,270,275,277,278,281,288,289,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[60,-44,60,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,60,-43,-26,-27,-46,-102,-103,-104,-105,60,-69,-83,60,60,60,60,-92,60,-70,-71,-77,-84,60,-88,60,-91,60,-90,60,-76,-87,60,-86,-89,-98,-85,]),'FOR':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,60,98,100,101,106,136,137,138,191,231,248,251,256,270,275,277,278,281,288,289,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[61,-44,61,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,61,-43,-26,-27,-46,-102,-103,-104,-105,61,-69,-83,61,61,61,61,-92,61,-70,-71,-77,-84,61,-88,61,-91,61,-90,61,-76,-87,61,-86,-89,-98,-85,]),'FOREACH':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,60,98,100,101,106,136,137,138,191,231,248,251,256,270,275,277,278,281,288,289,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[62,-44,62,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,62,-43,-26,-27,-46,-102,-103,-104,-105,62,-69,-83,62,62,62,62,-92,62,-70,-71,-77,-84,62,-88,62,-91,62,-90,62,-76,-87,62,-86,-89,-98,-85,]),'BREAK':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,60,98,100,101,106,136,137,138,191,231,248,251,256,270,275,277,278,281,288,289,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[64,-44,64,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,64,-43,-26,-27,-46,-102,-103,-104,-105,64,-69,-83,64,64,64,64,-92,64,-70,-71,-77,-84,64,-88,64,-91,64,-90,64,-76,-87,64,-86,-89,-98,-85,]),'CONTINUE':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,60,98,100,101,106,136,137,138,191,231,248,251,256,270,275,277,278,281,288,289,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[65,-44,65,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,65,-43,-26,-27,-46,-102,-103,-104,-105,65,-69,-83,65,65,65,65,-92,65,-70,-71,-77,-84,65,-88,65,-91,65,-90,65,-76,-87,65,-86,-89,-98,-85,]),'RETURN':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,60,98,100,101,106,136,137,138,191,231,248,251,256,270,275,277,278,281,288,289,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[66,-44,66,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,66,-43,-26,-27,-46,-102,-103,-104,-105,66,-69,-83,66,66,66,66,-92,66,-70,-71,-77,-84,66,-88,66,-91,66,-90,66,-76,-87,66,-86,-89,-98,-85,]),'NEW':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,66,70,71,93,94,98,100,101,106,107,131,132,136,137,138,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,196,204,231,232,233,234,239,248,249,251,253,256,259,260,270,271,275,276,277,278,279,281,288,289,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[68,-44,68,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,68,68,68,68,68,68,68,-43,-26,-27,-46,68,68,68,-102,-103,-104,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-105,68,68,68,68,68,68,68,-69,68,-83,68,68,68,68,68,68,68,68,68,-92,68,68,-70,-71,-77,-84,68,-88,68,-91,68,-90,68,68,-76,-87,68,-86,-89,-98,-85,]),'PLUSPLUS':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,52,53,57,60,63,66,67,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,100,101,106,107,115,120,121,122,123,131,132,136,137,138,140,141,142,145,148,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,192,195,196,204,231,232,233,234,238,239,240,242,243,244,248,249,251,253,256,259,260,262,264,270,271,275,276,277,278,279,281,283,287,288,289,295,296,297,298,300,301,303,304,305,306,308,309,310,311,312,313,314,317,],[70,-44,70,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,-125,-133,-131,-132,70,70,-120,70,141,70,70,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,70,70,-43,-26,-27,-46,70,141,-125,-131,-132,-133,70,70,-102,-103,-104,70,-63,-64,70,70,70,70,-122,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-105,-126,-124,70,70,70,70,70,70,-127,70,-54,-129,-135,-137,-69,70,-83,70,70,70,70,-55,-56,70,70,70,70,70,-92,70,70,-58,-57,-70,-71,-77,-84,70,-88,70,-91,70,-90,70,-59,70,-76,-87,70,-86,-89,-98,-85,]),'MINUSMINUS':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,52,53,57,60,63,66,67,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,100,101,106,107,115,120,121,122,123,131,132,136,137,138,140,141,142,145,148,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,192,195,196,204,231,232,233,234,238,239,240,242,243,244,248,249,251,253,256,259,260,262,264,270,271,275,276,277,278,279,281,283,287,288,289,295,296,297,298,300,301,303,304,305,306,308,309,310,311,312,313,314,317,],[71,-44,71,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,-125,-133,-131,-132,71,71,-120,71,142,71,71,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,71,71,-43,-26,-27,-46,71,142,-125,-131,-132,-133,71,71,-102,-103,-104,71,-63,-64,71,71,71,71,-122,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-105,-126,-124,71,71,71,71,71,71,-127,71,-54,-129,-135,-137,-69,71,-83,71,71,71,71,-55,-56,71,71,71,71,71,-92,71,71,-58,-57,-70,-71,-77,-84,71,-88,71,-91,71,-90,71,-59,71,-76,-87,71,-86,-89,-98,-85,]),'TRUE':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,66,70,71,93,94,98,100,101,106,107,131,132,136,137,138,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,196,204,231,232,233,234,239,248,249,251,253,256,259,260,270,271,275,276,277,278,279,281,288,289,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[76,-44,76,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,76,76,76,76,76,76,76,-43,-26,-27,-46,76,76,76,-102,-103,-104,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-105,76,76,76,76,76,76,76,-69,76,-83,76,76,76,76,76,76,76,76,76,-92,76,76,-70,-71,-77,-84,76,-88,76,-91,76,-90,76,76,-76,-87,76,-86,-89,-98,-85,]),'FALSE':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,66,70,71,93,94,98,100,101,106,107,131,132,136,137,138,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,196,204,231,232,233,234,239,248,249,251,253,256,259,260,270,271,275,276,277,278,279,281,288,289,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[77,-44,77,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,77,77,77,77,77,77,77,-43,-26,-27,-46,77,77,77,-102,-103,-104,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-105,77,77,77,77,77,77,77,-69,77,-83,77,77,77,77,77,77,77,77,77,-92,77,77,-70,-71,-77,-84,77,-88,77,-91,77,-90,77,77,-76,-87,77,-86,-89,-98,-85,]),'NULL':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,66,70,71,93,94,98,100,101,106,107,131,132,136,137,138,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,196,204,231,232,233,234,239,248,249,251,253,256,259,260,270,271,275,276,277,278,279,281,288,289,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[78,-44,78,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,78,78,78,78,78,78,78,-43,-26,-27,-46,78,78,78,-102,-103,-104,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-105,78,78,78,78,78,78,78,-69,78,-83,78,78,78,78,78,78,78,78,78,-92,78,78,-70,-71,-77,-84,78,-88,78,-91,78,-90,78,78,-76,-87,78,-86,-89,-98,-85,]),'INTNUM':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,66,70,71,93,94,98,100,101,106,107,131,132,136,137,138,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,196,204,231,232,233,234,239,248,249,251,253,256,259,260,270,271,275,276,277,278,279,281,288,289,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[79,-44,79,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,79,79,79,79,79,79,79,-43,-26,-27,-46,79,79,79,-102,-103,-104,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-105,79,79,79,79,79,79,79,-69,79,-83,79,79,79,79,79,79,79,79,79,-92,79,79,-70,-71,-77,-84,79,-88,79,-91,79,-90,79,79,-76,-87,79,-86,-89,-98,-85,]),'HEXADECIMALNUM':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,66,70,71,93,94,98,100,101,106,107,131,132,136,137,138,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,196,204,231,232,233,234,239,248,249,251,253,256,259,260,270,271,275,276,277,278,279,281,288,289,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[80,-44,80,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,80,80,80,80,80,80,80,-43,-26,-27,-46,80,80,80,-102,-103,-104,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-105,80,80,80,80,80,80,80,-69,80,-83,80,80,80,80,80,80,80,80,80,-92,80,80,-70,-71,-77,-84,80,-88,80,-91,80,-90,80,80,-76,-87,80,-86,-89,-98,-85,]),'BINARYNUM':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,66,70,71,93,94,98,100,101,106,107,131,132,136,137,138,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,196,204,231,232,233,234,239,248,249,251,253,256,259,260,270,271,275,276,277,278,279,281,288,289,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[81,-44,81,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,81,81,81,81,81,81,81,-43,-26,-27,-46,81,81,81,-102,-103,-104,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-105,81,81,81,81,81,81,81,-69,81,-83,81,81,81,81,81,81,81,81,81,-92,81,81,-70,-71,-77,-84,81,-88,81,-91,81,-90,81,81,-76,-87,81,-86,-89,-98,-85,]),'FLOATNUM':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,66,70,71,93,94,98,100,101,106,107,131,132,136,137,138,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,196,204,231,232,233,234,239,248,249,251,253,256,259,260,270,271,275,276,277,278,279,281,288,289,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[82,-44,82,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,82,82,82,82,82,82,82,-43,-26,-27,-46,82,82,82,-102,-103,-104,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-105,82,82,82,82,82,82,82,-69,82,-83,82,82,82,82,82,82,82,82,82,-92,82,82,-70,-71,-77,-84,82,-88,82,-91,82,-90,82,82,-76,-87,82,-86,-89,-98,-85,]),'DOUBLENUM':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,66,70,71,93,94,98,100,101,106,107,131,132,136,137,138,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,196,204,231,232,233,234,239,248,249,251,253,256,259,260,270,271,275,276,277,278,279,281,288,289,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[83,-44,83,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,83,83,83,83,83,83,83,-43,-26,-27,-46,83,83,83,-102,-103,-104,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-105,83,83,83,83,83,83,83,-69,83,-83,83,83,83,83,83,83,83,83,83,-92,83,83,-70,-71,-77,-84,83,-88,83,-91,83,-90,83,83,-76,-87,83,-86,-89,-98,-85,]),'DECIMALNUM':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,66,70,71,93,94,98,100,101,106,107,131,132,136,137,138,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,196,204,231,232,233,234,239,248,249,251,253,256,259,260,270,271,275,276,277,278,279,281,288,289,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[84,-44,84,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,84,84,84,84,84,84,84,-43,-26,-27,-46,84,84,84,-102,-103,-104,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-105,84,84,84,84,84,84,84,-69,84,-83,84,84,84,84,84,84,84,84,84,-92,84,84,-70,-71,-77,-84,84,-88,84,-91,84,-90,84,84,-76,-87,84,-86,-89,-98,-85,]),'CHARLITERAL':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,66,70,71,93,94,98,100,101,106,107,131,132,136,137,138,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,196,204,231,232,233,234,239,248,249,251,253,256,259,260,270,271,275,276,277,278,279,281,288,289,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[85,-44,85,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,85,85,85,85,85,85,85,-43,-26,-27,-46,85,85,85,-102,-103,-104,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-105,85,85,85,85,85,85,85,-69,85,-83,85,85,85,85,85,85,85,85,85,-92,85,85,-70,-71,-77,-84,85,-88,85,-91,85,-90,85,85,-76,-87,85,-86,-89,-98,-85,]),'STRINGLITERAL':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,66,70,71,93,94,98,100,101,106,107,131,132,136,137,138,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,196,204,231,232,233,234,239,248,249,251,253,256,259,260,270,271,275,276,277,278,279,281,288,289,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[86,-44,86,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,86,86,86,86,86,86,86,-43,-26,-27,-46,86,86,86,-102,-103,-104,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-105,86,86,86,86,86,86,86,-69,86,-83,86,86,86,86,86,86,86,86,86,-92,86,86,-70,-71,-77,-84,86,-88,86,-91,86,-90,86,86,-76,-87,86,-86,-89,-98,-85,]),'THIS':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,66,70,71,93,94,98,100,101,106,107,131,132,136,137,138,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,196,204,231,232,233,234,239,248,249,251,253,256,259,260,270,271,275,276,277,278,279,281,288,289,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[90,-44,90,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,90,90,90,90,90,90,90,-43,-26,-27,-46,90,90,90,-102,-103,-104,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-105,90,90,90,90,90,90,90,-69,90,-83,90,90,90,90,90,90,90,90,90,-92,90,90,-70,-71,-77,-84,90,-88,90,-91,90,-90,90,90,-76,-87,90,-86,-89,-98,-85,]),'MINUS':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,63,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,100,101,106,107,109,115,116,117,120,121,122,123,129,130,131,132,136,137,138,140,141,142,145,146,147,148,149,150,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,192,195,196,204,208,211,223,224,225,226,227,228,229,231,232,233,234,238,239,240,242,243,244,248,249,251,253,256,259,260,262,264,270,271,275,276,277,278,279,281,283,287,288,289,295,296,297,298,300,301,303,304,305,306,308,309,310,311,312,313,314,317,],[93,-44,93,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,93,93,-120,93,93,93,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,93,93,-43,-26,-27,-46,93,-182,-140,-141,-142,-125,-131,-132,-133,180,-178,93,93,-102,-103,-104,93,-63,-64,93,-65,-66,93,-146,-148,93,93,-122,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-105,-126,-124,93,93,-144,-182,180,180,-176,-177,-179,-180,-181,93,93,93,93,-127,93,-54,-129,-135,-137,-69,93,-83,93,93,93,93,-55,-56,93,93,93,93,93,-92,93,93,-58,-57,-70,-71,-77,-84,93,-88,93,-91,93,-90,93,-59,93,-76,-87,93,-86,-89,-98,-85,]),'PLUS':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,63,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,100,101,106,107,109,115,116,117,120,121,122,123,129,130,131,132,136,137,138,140,141,142,145,146,147,148,149,150,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,192,195,196,204,208,211,223,224,225,226,227,228,229,231,232,233,234,238,239,240,242,243,244,248,249,251,253,256,259,260,262,264,270,271,275,276,277,278,279,281,283,287,288,289,295,296,297,298,300,301,303,304,305,306,308,309,310,311,312,313,314,317,],[94,-44,94,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,94,94,-120,94,94,94,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,94,94,-43,-26,-27,-46,94,-182,-140,-141,-142,-125,-131,-132,-133,179,-178,94,94,-102,-103,-104,94,-63,-64,94,-65,-66,94,-146,-148,94,94,-122,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-105,-126,-124,94,94,-144,-182,179,179,-176,-177,-179,-180,-181,94,94,94,94,-127,94,-54,-129,-135,-137,-69,94,-83,94,94,94,94,-55,-56,94,94,94,94,94,-92,94,94,-58,-57,-70,-71,-77,-84,94,-88,94,-91,94,-90,94,-59,94,-76,-87,94,-86,-89,-98,-85,]),'TYPEOF':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,66,70,71,93,94,98,100,101,106,107,131,132,136,137,138,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,196,204,231,232,233,234,239,248,249,251,253,256,259,260,270,271,275,276,277,278,279,281,288,289,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[95,-44,95,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,95,95,95,95,95,95,95,-43,-26,-27,-46,95,95,95,-102,-103,-104,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-105,95,95,95,95,95,95,95,-69,95,-83,95,95,95,95,95,95,95,95,95,-92,95,95,-70,-71,-77,-84,95,-88,95,-91,95,-90,95,95,-76,-87,95,-86,-89,-98,-85,]),'SIZEOF':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,60,66,70,71,93,94,98,100,101,106,107,131,132,136,137,138,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,196,204,231,232,233,234,239,248,249,251,253,256,259,260,270,271,275,276,277,278,279,281,288,289,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[96,-44,96,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,96,96,96,96,96,96,96,-43,-26,-27,-46,96,96,96,-102,-103,-104,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-105,96,96,96,96,96,96,96,-69,96,-83,96,96,96,96,96,96,96,96,96,-92,96,96,-70,-71,-77,-84,96,-88,96,-91,96,-90,96,96,-76,-87,96,-86,-89,-98,-85,]),'CASE':([24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,98,99,100,101,106,136,137,138,191,248,250,251,269,270,278,288,289,291,292,295,296,298,301,304,309,310,312,313,314,317,],[-44,-22,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,-43,-23,-26,-27,-46,-102,-103,-104,-105,-69,271,-83,271,271,-92,-70,-71,-74,-75,-77,-84,-88,-91,-90,-76,-87,-86,-89,-98,-85,]),'DEFAULT':([24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,98,99,100,101,106,136,137,138,191,248,250,251,269,270,278,288,289,291,292,295,296,298,301,304,309,310,312,313,314,317,],[-44,-22,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-79,-80,-81,-82,-99,-100,-101,-43,-23,-26,-27,-46,-102,-103,-104,-105,-69,272,-83,272,272,-92,-70,-71,-74,-75,-77,-84,-88,-91,-90,-76,-87,-86,-89,-98,-85,]),'ELSE':([24,98,248,],[-44,-43,266,]),'LSB':([49,50,52,53,63,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,120,121,122,123,141,142,163,192,195,238,240,242,243,244,262,264,283,287,306,],[-125,-133,-131,-132,-120,148,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-125,-131,-132,-133,-63,-64,-122,-126,-124,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'DOT':([49,50,52,53,63,67,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,115,120,121,122,123,141,142,163,192,195,238,240,242,243,244,262,264,283,287,306,],[-125,-133,-131,-132,-120,143,-108,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,143,-125,-131,-132,-133,-63,-64,-122,-126,-124,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'EQUAL':([49,50,52,53,54,55,63,67,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,105,109,115,116,117,120,121,122,123,141,142,146,147,149,150,158,163,192,195,208,238,240,242,243,244,262,264,283,286,287,306,],[-125,-133,-131,-132,-141,-142,-120,-140,145,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,160,145,-140,-141,-142,-125,-131,-132,-133,-63,-64,-65,-66,-146,-148,204,-122,-126,-124,-144,-127,-54,-129,-135,-137,-55,-56,-58,308,-57,-59,]),'STAR':([63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,115,116,117,120,121,122,123,130,141,142,146,147,149,150,163,192,195,208,211,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-140,-141,-142,-125,-131,-132,-133,181,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-182,181,181,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'SLASH':([63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,115,116,117,120,121,122,123,130,141,142,146,147,149,150,163,192,195,208,211,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-140,-141,-142,-125,-131,-132,-133,182,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-182,182,182,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'PERCENT':([63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,115,116,117,120,121,122,123,130,141,142,146,147,149,150,163,192,195,208,211,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-140,-141,-142,-125,-131,-132,-133,183,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-182,183,183,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'LSHIFT':([63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,115,116,117,120,121,122,123,128,129,130,141,142,146,147,149,150,163,192,195,208,211,218,219,220,221,223,224,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-140,-141,-142,-125,-131,-132,-133,177,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-182,177,177,177,177,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'RSHIFT':([63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,109,115,116,117,120,121,122,123,128,129,130,141,142,146,147,149,150,163,192,195,208,211,218,219,220,221,223,224,225,226,227,228,229,238,240,242,243,244,262,264,283,287,306,],[-120,-108,-143,-145,-147,-109,-110,-111,-112,-113,-114,-115,-116,-117,-118,-119,-121,-123,-128,-130,-134,-136,-182,-140,-141,-142,-125,-131,-132,-133,178,-175,-178,-63,-64,-65,-66,-146,-148,-122,-126,-124,-144,-182,178,178,178,178,-173,-174,-176,-177,-179,-180,-181,-127,-54,-129,-135,-137,-55,-56,-58,-57,-59,]),'IN':([237,],[260,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,19,]),'func_declaration':([0,2,],[2,2,]),'signature':([0,2,],[3,3,]),'type':([0,2,21,25,37,57,68,97,134,135,151,176,245,270,],[4,4,38,38,102,108,144,153,38,190,199,222,153,38,]),'class_type':([0,2,21,25,37,57,68,97,134,135,151,176,245,270,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'value_type':([0,2,21,25,37,57,68,97,134,135,151,152,176,245,270,],[6,6,6,6,6,6,6,6,6,6,6,200,6,6,6,]),'integral_type':([0,2,21,25,37,57,68,97,134,135,151,152,176,245,270,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'floating_point_type':([0,2,21,25,37,57,68,97,134,135,151,152,176,245,270,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'block':([3,21,25,60,207,231,256,266,270,275,277,281,297,300,303,305,311,],[20,31,31,31,248,31,31,288,31,31,31,31,31,31,31,31,31,]),'statement_list':([21,25,270,],[23,99,291,]),'statement':([21,25,270,],[25,25,25,]),'declaration_statement':([21,25,270,],[26,26,26,]),'embedded_statement':([21,25,60,231,256,270,275,277,281,297,300,303,305,311,],[27,27,133,251,278,27,298,301,304,310,312,313,314,317,]),'const_declaration':([21,25,270,],[28,28,28,]),'var_declaration':([21,25,134,270,],[30,30,189,30,]),'empty_statement':([21,25,60,231,256,270,275,277,281,297,300,303,305,311,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'exp_statement':([21,25,60,231,256,270,275,277,281,297,300,303,305,311,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'selection_statement':([21,25,60,231,256,270,275,277,281,297,300,303,305,311,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'iteration_statement':([21,25,60,231,256,270,275,277,281,297,300,303,305,311,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'jump_statement':([21,25,60,231,256,270,275,277,281,297,300,303,305,311,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'statement_exp':([21,25,60,231,234,253,256,259,270,275,276,277,279,281,297,300,303,305,311,],[39,39,39,39,258,258,39,258,39,39,258,39,258,39,39,39,39,39,39,]),'if_statement':([21,25,60,231,256,270,275,277,281,297,300,303,305,311,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'switch_statement':([21,25,60,231,256,270,275,277,281,297,300,303,305,311,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'while_statement':([21,25,60,231,256,270,275,277,281,297,300,303,305,311,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'do_statement':([21,25,60,231,256,270,275,277,281,297,300,303,305,311,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'for_statement':([21,25,60,231,256,270,275,277,281,297,300,303,305,311,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'foreach_statement':([21,25,60,231,256,270,275,277,281,297,300,303,305,311,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'break_statement':([21,25,60,231,256,270,275,277,281,297,300,303,305,311,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'continue_statement':([21,25,60,231,256,270,275,277,281,297,300,303,305,311,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'return_statement':([21,25,60,231,256,270,275,277,281,297,300,303,305,311,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'invocation_exp':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[49,49,120,49,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,49,120,120,49,120,120,49,49,49,120,49,120,49,49,49,49,49,49,49,49,49,120,49,]),'object_creation_exp':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[50,50,123,50,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,50,123,123,50,123,123,50,50,50,123,50,123,50,50,50,50,50,50,50,50,50,123,50,]),'assignment':([21,25,57,60,66,107,131,132,140,145,148,160,164,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[51,51,112,51,112,112,112,112,112,112,112,112,112,112,112,112,51,112,112,51,112,112,51,51,51,112,51,112,51,51,51,51,51,51,51,51,51,112,51,]),'post_increment_exp':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[52,52,121,52,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,52,121,121,52,121,121,52,52,52,121,52,121,52,52,52,52,52,52,52,52,52,121,52,]),'post_decrement_exp':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[53,53,122,53,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,53,122,122,53,122,122,53,53,53,122,53,122,53,53,53,53,53,53,53,53,53,122,53,]),'pre_increment_exp':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[54,54,116,54,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,54,116,116,54,116,116,54,54,54,116,54,116,54,54,54,54,54,54,54,54,54,116,54,]),'pre_decrement_exp':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[55,55,117,55,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,55,117,117,55,117,117,55,55,55,117,55,117,55,55,55,55,55,55,55,55,55,117,55,]),'primary_exp':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[67,67,115,67,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,67,115,115,67,115,115,67,67,67,115,67,115,67,67,67,67,67,67,67,67,67,115,67,]),'unary_exp':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[69,69,109,69,109,146,147,149,150,109,109,109,109,109,109,109,208,109,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,227,228,229,109,109,109,69,109,109,69,109,109,69,69,69,109,69,109,69,69,69,69,69,69,69,69,69,109,69,]),'primary_no_array_creation_exp':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'cast_exp':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'minus_exp':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'plus_exp':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'parenthesized_exp':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'member_access':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'element_access':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'typeof_exp':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'sizeof_exp':([21,25,57,60,66,70,71,93,94,107,131,132,140,145,148,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,196,204,231,232,233,234,239,249,253,256,259,260,270,271,275,276,277,279,281,297,300,303,305,308,311,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'var_declarators':([38,159,],[103,205,]),'var_declarator':([38,159,],[104,104,]),'exp':([57,66,107,131,132,140,145,148,160,164,188,196,204,232,233,239,249,260,271,308,],[110,139,161,184,185,194,197,198,206,209,236,194,247,252,236,194,267,282,294,316,]),'non_assignment_exp':([57,66,107,131,132,140,145,148,160,164,188,196,204,232,233,239,249,260,271,308,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'conditional_exp':([57,66,107,131,132,140,145,148,160,164,188,196,204,232,233,239,249,260,271,308,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'conditional_or_exp':([57,66,107,131,132,140,145,148,160,164,188,196,204,232,233,239,249,260,271,308,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'conditional_and_exp':([57,66,107,131,132,140,145,148,160,164,165,188,196,204,232,233,239,249,260,271,308,],[118,118,118,118,118,118,118,118,118,118,210,118,118,118,118,118,118,118,118,118,118,]),'inclusive_or_exp':([57,66,107,131,132,140,145,148,160,164,165,166,188,196,204,232,233,239,249,260,271,308,],[119,119,119,119,119,119,119,119,119,119,119,212,119,119,119,119,119,119,119,119,119,119,]),'exclusive_or_exp':([57,66,107,131,132,140,145,148,160,164,165,166,167,188,196,204,232,233,239,249,260,271,308,],[124,124,124,124,124,124,124,124,124,124,124,124,213,124,124,124,124,124,124,124,124,124,124,]),'and_exp':([57,66,107,131,132,140,145,148,160,164,165,166,167,168,188,196,204,232,233,239,249,260,271,308,],[125,125,125,125,125,125,125,125,125,125,125,125,125,214,125,125,125,125,125,125,125,125,125,125,]),'equality_exp':([57,66,107,131,132,140,145,148,160,164,165,166,167,168,169,188,196,204,232,233,239,249,260,271,308,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,215,126,126,126,126,126,126,126,126,126,126,]),'relational_exp':([57,66,107,131,132,140,145,148,160,164,165,166,167,168,169,170,171,188,196,204,232,233,239,249,260,271,308,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,216,217,127,127,127,127,127,127,127,127,127,127,]),'shift_exp':([57,66,107,131,132,140,145,148,160,164,165,166,167,168,169,170,171,172,173,174,175,188,196,204,232,233,239,249,260,271,308,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,218,219,220,221,128,128,128,128,128,128,128,128,128,128,]),'additive_exp':([57,66,107,131,132,140,145,148,160,164,165,166,167,168,169,170,171,172,173,174,175,177,178,188,196,204,232,233,239,249,260,271,308,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,223,224,129,129,129,129,129,129,129,129,129,129,]),'multiplicative_exp':([57,66,107,131,132,140,145,148,160,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,188,196,204,232,233,239,249,260,271,308,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,225,226,130,130,130,130,130,130,130,130,130,130,]),'param_list':([97,245,],[154,265,]),'const_declarators':([102,203,],[156,246,]),'const_declarator':([102,203,],[157,157,]),'for_initializer':([134,],[187,]),'arg_list':([140,196,239,],[193,241,261,]),'for_condition':([188,233,],[235,254,]),'for_iterator':([234,253,259,276,],[255,274,280,299,]),'statement_exp_list':([234,253,259,276,279,],[257,257,257,257,302,]),'object_initializer':([240,264,],[262,287,]),'switch_body':([250,269,],[268,290,]),'switch_section':([250,269,270,],[269,269,292,]),'switch_label':([250,269,270,],[270,270,270,]),'member_initializer_list':([263,307,],[284,315,]),'member_initializer':([263,307,],[285,285,]),'pattern':([271,],[293,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> func_declaration','program',1,'p_program','LanguageParser.py',9),
  ('program -> func_declaration program','program',2,'p_program','LanguageParser.py',10),
  ('type -> class_type','type',1,'p_type','LanguageParser.py',25),
  ('type -> value_type','type',1,'p_type','LanguageParser.py',26),
  ('class_type -> OBJECT','class_type',1,'p_class_type','LanguageParser.py',33),
  ('class_type -> STRING','class_type',1,'p_class_type','LanguageParser.py',34),
  ('value_type -> integral_type','value_type',1,'p_value_type','LanguageParser.py',43),
  ('value_type -> floating_point_type','value_type',1,'p_value_type','LanguageParser.py',44),
  ('value_type -> BOOL','value_type',1,'p_value_type','LanguageParser.py',45),
  ('value_type -> VOID','value_type',1,'p_value_type','LanguageParser.py',46),
  ('integral_type -> INT','integral_type',1,'p_integral_type_int','LanguageParser.py',57),
  ('integral_type -> LONG','integral_type',1,'p_integral_type_long','LanguageParser.py',61),
  ('integral_type -> CHAR','integral_type',1,'p_integral_type_char','LanguageParser.py',65),
  ('floating_point_type -> FLOAT','floating_point_type',1,'p_integral_type_float','LanguageParser.py',69),
  ('floating_point_type -> DOUBLE','floating_point_type',1,'p_integral_type_double','LanguageParser.py',73),
  ('floating_point_type -> DECIMAL','floating_point_type',1,'p_integral_type_decimal','LanguageParser.py',77),
  ('func_declaration -> signature block','func_declaration',2,'p_func_declaration','LanguageParser.py',81),
  ('signature -> type ID LPAREN param_list RPAREN','signature',5,'p_signature','LanguageParser.py',85),
  ('signature -> type ID LPAREN RPAREN','signature',4,'p_signature','LanguageParser.py',86),
  ('param_list -> type ID','param_list',2,'p_param_list','LanguageParser.py',93),
  ('param_list -> type ID COMMA param_list','param_list',4,'p_param_list','LanguageParser.py',94),
  ('statement_list -> statement','statement_list',1,'p_statement_list','LanguageParser.py',101),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','LanguageParser.py',102),
  ('statement -> declaration_statement','statement',1,'p_statement','LanguageParser.py',109),
  ('statement -> embedded_statement','statement',1,'p_statement','LanguageParser.py',110),
  ('declaration_statement -> const_declaration SEMI','declaration_statement',2,'p_declaration_stmt','LanguageParser.py',117),
  ('declaration_statement -> var_declaration SEMI','declaration_statement',2,'p_declaration_stmt','LanguageParser.py',118),
  ('const_declaration -> CONST type const_declarators','const_declaration',3,'p_const_declaration','LanguageParser.py',125),
  ('const_declarators -> const_declarator','const_declarators',1,'p_const_declarators','LanguageParser.py',129),
  ('const_declarators -> const_declarator COMMA const_declarators','const_declarators',3,'p_const_declarators','LanguageParser.py',130),
  ('const_declarator -> ID EQUAL exp','const_declarator',3,'p_const_declarator','LanguageParser.py',137),
  ('var_declaration -> type var_declarators','var_declaration',2,'p_var_declaration','LanguageParser.py',141),
  ('var_declarators -> var_declarator','var_declarators',1,'p_var_declarators','LanguageParser.py',145),
  ('var_declarators -> var_declarator COMMA var_declarators','var_declarators',3,'p_var_declarators','LanguageParser.py',146),
  ('var_declarator -> ID','var_declarator',1,'p_var_declarator','LanguageParser.py',153),
  ('var_declarator -> ID EQUAL exp','var_declarator',3,'p_var_declarator','LanguageParser.py',154),
  ('embedded_statement -> block','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',161),
  ('embedded_statement -> empty_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',162),
  ('embedded_statement -> exp_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',163),
  ('embedded_statement -> selection_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',164),
  ('embedded_statement -> iteration_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',165),
  ('embedded_statement -> jump_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',166),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','LanguageParser.py',181),
  ('block -> LBRACE RBRACE','block',2,'p_block','LanguageParser.py',182),
  ('empty_statement -> SEMI','empty_statement',1,'p_empty_stmt','LanguageParser.py',189),
  ('exp_statement -> statement_exp SEMI','exp_statement',2,'p_exp_statement','LanguageParser.py',193),
  ('statement_exp -> invocation_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',197),
  ('statement_exp -> object_creation_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',198),
  ('statement_exp -> assignment','statement_exp',1,'p_statement_exp','LanguageParser.py',199),
  ('statement_exp -> post_increment_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',200),
  ('statement_exp -> post_decrement_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',201),
  ('statement_exp -> pre_increment_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',202),
  ('statement_exp -> pre_decrement_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',203),
  ('object_creation_exp -> NEW type LPAREN RPAREN','object_creation_exp',4,'p_object_creation','LanguageParser.py',220),
  ('object_creation_exp -> NEW type LPAREN RPAREN object_initializer','object_creation_exp',5,'p_object_creation','LanguageParser.py',221),
  ('object_creation_exp -> NEW type LPAREN arg_list RPAREN','object_creation_exp',5,'p_object_creation','LanguageParser.py',222),
  ('object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer','object_creation_exp',6,'p_object_creation','LanguageParser.py',223),
  ('object_initializer -> LBRACE RBRACE','object_initializer',2,'p_object_initializer','LanguageParser.py',235),
  ('object_initializer -> LBRACE member_initializer_list RBRACE','object_initializer',3,'p_object_initializer','LanguageParser.py',236),
  ('member_initializer_list -> member_initializer','member_initializer_list',1,'p_member_initializer_list','LanguageParser.py',243),
  ('member_initializer_list -> member_initializer COMMA member_initializer_list','member_initializer_list',3,'p_member_initializer_list','LanguageParser.py',244),
  ('member_initializer -> ID EQUAL exp','member_initializer',3,'p_member_initializer','LanguageParser.py',251),
  ('post_increment_exp -> primary_exp PLUSPLUS','post_increment_exp',2,'p_post_increment_exp','LanguageParser.py',255),
  ('post_decrement_exp -> primary_exp MINUSMINUS','post_decrement_exp',2,'p_post_decrement_exp','LanguageParser.py',259),
  ('pre_increment_exp -> PLUSPLUS unary_exp','pre_increment_exp',2,'p_pre_increment_exp','LanguageParser.py',263),
  ('pre_decrement_exp -> MINUSMINUS unary_exp','pre_decrement_exp',2,'p_pre_decrement_exp','LanguageParser.py',267),
  ('selection_statement -> if_statement','selection_statement',1,'p_selection_statement','LanguageParser.py',271),
  ('selection_statement -> switch_statement','selection_statement',1,'p_selection_statement','LanguageParser.py',272),
  ('if_statement -> IF LPAREN exp RPAREN block','if_statement',5,'p_if_statement','LanguageParser.py',279),
  ('if_statement -> IF LPAREN exp RPAREN block ELSE block','if_statement',7,'p_if_statement','LanguageParser.py',280),
  ('switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE','switch_statement',7,'p_switch_statement','LanguageParser.py',287),
  ('switch_body -> switch_section','switch_body',1,'p_switch_body','LanguageParser.py',291),
  ('switch_body -> switch_section switch_body','switch_body',2,'p_switch_body','LanguageParser.py',292),
  ('switch_section -> switch_label statement_list','switch_section',2,'p_switch_section_simple','LanguageParser.py',299),
  ('switch_section -> switch_label switch_section','switch_section',2,'p_switch_section_compound','LanguageParser.py',303),
  ('switch_label -> CASE pattern COLON','switch_label',3,'p_switch_label','LanguageParser.py',307),
  ('switch_label -> DEFAULT COLON','switch_label',2,'p_switch_label','LanguageParser.py',308),
  ('pattern -> exp','pattern',1,'p_pattern','LanguageParser.py',315),
  ('iteration_statement -> while_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',319),
  ('iteration_statement -> do_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',320),
  ('iteration_statement -> for_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',321),
  ('iteration_statement -> foreach_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',322),
  ('while_statement -> WHILE LPAREN exp RPAREN embedded_statement','while_statement',5,'p_while_statement','LanguageParser.py',333),
  ('do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI','do_statement',7,'p_do_statement','LanguageParser.py',337),
  ('for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement','for_statement',9,'p_for_statement_full','LanguageParser.py',341),
  ('for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement','for_statement',8,'p_for_statement_12','LanguageParser.py',345),
  ('for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement','for_statement',8,'p_for_statement_13','LanguageParser.py',349),
  ('for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement','for_statement',7,'p_for_statement_1','LanguageParser.py',353),
  ('for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement','for_statement',8,'p_for_statement_23','LanguageParser.py',357),
  ('for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement','for_statement',7,'p_for_statement_2','LanguageParser.py',361),
  ('for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement','for_statement',7,'p_for_statement_3','LanguageParser.py',365),
  ('for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement','for_statement',6,'p_for_statement_empty','LanguageParser.py',369),
  ('for_initializer -> var_declaration','for_initializer',1,'p_for_initializer','LanguageParser.py',373),
  ('for_condition -> exp','for_condition',1,'p_for_condition','LanguageParser.py',380),
  ('for_iterator -> statement_exp_list','for_iterator',1,'p_for_iterator','LanguageParser.py',384),
  ('statement_exp_list -> statement_exp','statement_exp_list',1,'p_statement_exp_list','LanguageParser.py',388),
  ('statement_exp_list -> statement_exp COMMA statement_exp_list','statement_exp_list',3,'p_statement_exp_list','LanguageParser.py',389),
  ('foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement','foreach_statement',8,'p_foreach_statement','LanguageParser.py',396),
  ('jump_statement -> break_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',400),
  ('jump_statement -> continue_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',401),
  ('jump_statement -> return_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',402),
  ('break_statement -> BREAK SEMI','break_statement',2,'p_break_statement','LanguageParser.py',411),
  ('continue_statement -> CONTINUE SEMI','continue_statement',2,'p_continue_statement','LanguageParser.py',415),
  ('return_statement -> RETURN SEMI','return_statement',2,'p_return_statement','LanguageParser.py',419),
  ('return_statement -> RETURN exp SEMI','return_statement',3,'p_return_statement','LanguageParser.py',420),
  ('arg_list -> exp','arg_list',1,'p_arg_list','LanguageParser.py',427),
  ('arg_list -> exp COMMA arg_list','arg_list',3,'p_arg_list','LanguageParser.py',428),
  ('primary_exp -> primary_no_array_creation_exp','primary_exp',1,'p_primary_exp','LanguageParser.py',435),
  ('primary_no_array_creation_exp -> TRUE','primary_no_array_creation_exp',1,'p_boolean_exp','LanguageParser.py',439),
  ('primary_no_array_creation_exp -> FALSE','primary_no_array_creation_exp',1,'p_boolean_exp','LanguageParser.py',440),
  ('primary_no_array_creation_exp -> NULL','primary_no_array_creation_exp',1,'p_null_exp','LanguageParser.py',444),
  ('primary_no_array_creation_exp -> INTNUM','primary_no_array_creation_exp',1,'p_intnum_exp','LanguageParser.py',448),
  ('primary_no_array_creation_exp -> HEXADECIMALNUM','primary_no_array_creation_exp',1,'p_hexnum_exp','LanguageParser.py',452),
  ('primary_no_array_creation_exp -> BINARYNUM','primary_no_array_creation_exp',1,'p_binnum_exp','LanguageParser.py',456),
  ('primary_no_array_creation_exp -> FLOATNUM','primary_no_array_creation_exp',1,'p_floatnum_exp','LanguageParser.py',460),
  ('primary_no_array_creation_exp -> DOUBLENUM','primary_no_array_creation_exp',1,'p_doublenum_exp','LanguageParser.py',464),
  ('primary_no_array_creation_exp -> DECIMALNUM','primary_no_array_creation_exp',1,'p_decimalnum_exp','LanguageParser.py',468),
  ('primary_no_array_creation_exp -> CHARLITERAL','primary_no_array_creation_exp',1,'p_charliteral_exp','LanguageParser.py',472),
  ('primary_no_array_creation_exp -> STRINGLITERAL','primary_no_array_creation_exp',1,'p_stringliteral_exp','LanguageParser.py',476),
  ('primary_no_array_creation_exp -> ID','primary_no_array_creation_exp',1,'p_id_exp','LanguageParser.py',480),
  ('primary_no_array_creation_exp -> parenthesized_exp','primary_no_array_creation_exp',1,'p_primary_parenthesized_exp','LanguageParser.py',484),
  ('parenthesized_exp -> LPAREN exp RPAREN','parenthesized_exp',3,'p_parenthesized_exp','LanguageParser.py',488),
  ('primary_no_array_creation_exp -> member_access','primary_no_array_creation_exp',1,'p_primary_member_access_exp','LanguageParser.py',492),
  ('member_access -> primary_exp DOT ID','member_access',3,'p_member_access_exp','LanguageParser.py',496),
  ('primary_no_array_creation_exp -> invocation_exp','primary_no_array_creation_exp',1,'p_primary_invocation_exp','LanguageParser.py',500),
  ('invocation_exp -> primary_exp LPAREN RPAREN','invocation_exp',3,'p_invocation_exp','LanguageParser.py',504),
  ('invocation_exp -> primary_exp LPAREN arg_list RPAREN','invocation_exp',4,'p_invocation_exp','LanguageParser.py',505),
  ('primary_no_array_creation_exp -> element_access','primary_no_array_creation_exp',1,'p_primary_element_access_exp','LanguageParser.py',512),
  ('element_access -> primary_no_array_creation_exp LSB exp RSB','element_access',4,'p_element_access_exp','LanguageParser.py',516),
  ('primary_no_array_creation_exp -> THIS','primary_no_array_creation_exp',1,'p_this_exp','LanguageParser.py',520),
  ('primary_no_array_creation_exp -> post_increment_exp','primary_no_array_creation_exp',1,'p_primary_post_increment_exp','LanguageParser.py',525),
  ('primary_no_array_creation_exp -> post_decrement_exp','primary_no_array_creation_exp',1,'p_primary_post_decrement_exp','LanguageParser.py',530),
  ('primary_no_array_creation_exp -> object_creation_exp','primary_no_array_creation_exp',1,'p_primary_object_creation_exp','LanguageParser.py',535),
  ('primary_no_array_creation_exp -> typeof_exp','primary_no_array_creation_exp',1,'p_primary_typeof_exp','LanguageParser.py',539),
  ('typeof_exp -> TYPEOF LPAREN type RPAREN','typeof_exp',4,'p_typeof_exp','LanguageParser.py',543),
  ('primary_no_array_creation_exp -> sizeof_exp','primary_no_array_creation_exp',1,'p_primary_sizeof_exp','LanguageParser.py',547),
  ('sizeof_exp -> SIZEOF LPAREN value_type RPAREN','sizeof_exp',4,'p_sizeof_exp','LanguageParser.py',551),
  ('exp_list -> exp','exp_list',1,'p_exp_list','LanguageParser.py',555),
  ('exp_list -> exp_list COMMA exp','exp_list',3,'p_exp_list','LanguageParser.py',556),
  ('unary_exp -> primary_exp','unary_exp',1,'p_unary_primary_exp','LanguageParser.py',563),
  ('unary_exp -> pre_increment_exp','unary_exp',1,'p_unary_pre_increment_exp','LanguageParser.py',567),
  ('unary_exp -> pre_decrement_exp','unary_exp',1,'p_unary_pre_decrement_exp','LanguageParser.py',571),
  ('unary_exp -> cast_exp','unary_exp',1,'p_unary_cast_exp','LanguageParser.py',575),
  ('cast_exp -> LPAREN type RPAREN unary_exp','cast_exp',4,'p_cast_exp','LanguageParser.py',579),
  ('unary_exp -> minus_exp','unary_exp',1,'p_unary_minus_exp','LanguageParser.py',583),
  ('minus_exp -> MINUS unary_exp','minus_exp',2,'p_minus_exp','LanguageParser.py',587),
  ('unary_exp -> plus_exp','unary_exp',1,'p_unary_plus_exp','LanguageParser.py',591),
  ('plus_exp -> PLUS unary_exp','plus_exp',2,'p_plus_exp','LanguageParser.py',595),
  ('exp -> non_assignment_exp','exp',1,'p_exp_non_assignment_exp','LanguageParser.py',599),
  ('exp -> assignment','exp',1,'p_exp_assignment_exp','LanguageParser.py',603),
  ('non_assignment_exp -> conditional_exp','non_assignment_exp',1,'p_non_assignment_conditional_exp','LanguageParser.py',607),
  ('conditional_exp -> conditional_or_exp HOOK exp COLON exp','conditional_exp',5,'p_conditional_exp','LanguageParser.py',611),
  ('conditional_exp -> conditional_or_exp','conditional_exp',1,'p_conditional_exp','LanguageParser.py',612),
  ('conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp','conditional_or_exp',3,'p_conditional_or_exp','LanguageParser.py',619),
  ('conditional_or_exp -> conditional_and_exp','conditional_or_exp',1,'p_conditional_or_exp','LanguageParser.py',620),
  ('conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp','conditional_and_exp',3,'p_conditional_and_exp','LanguageParser.py',627),
  ('conditional_and_exp -> inclusive_or_exp','conditional_and_exp',1,'p_conditional_and_exp','LanguageParser.py',628),
  ('inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp','inclusive_or_exp',3,'p_inclusive_or_exp','LanguageParser.py',635),
  ('inclusive_or_exp -> exclusive_or_exp','inclusive_or_exp',1,'p_inclusive_or_exp','LanguageParser.py',636),
  ('exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp','exclusive_or_exp',3,'p_exclusive_or_exp','LanguageParser.py',643),
  ('exclusive_or_exp -> and_exp','exclusive_or_exp',1,'p_exclusive_or_exp','LanguageParser.py',644),
  ('and_exp -> and_exp AMPER equality_exp','and_exp',3,'p_and_exp','LanguageParser.py',651),
  ('and_exp -> equality_exp','and_exp',1,'p_and_exp','LanguageParser.py',652),
  ('equality_exp -> equality_exp EQEQUAL relational_exp','equality_exp',3,'p_equality_exp','LanguageParser.py',659),
  ('equality_exp -> equality_exp NOTEQUAL relational_exp','equality_exp',3,'p_equality_exp','LanguageParser.py',660),
  ('equality_exp -> relational_exp','equality_exp',1,'p_equality_exp','LanguageParser.py',661),
  ('relational_exp -> relational_exp LT shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',670),
  ('relational_exp -> relational_exp GT shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',671),
  ('relational_exp -> relational_exp LEQ shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',672),
  ('relational_exp -> relational_exp GEQ shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',673),
  ('relational_exp -> relational_exp IS type','relational_exp',3,'p_relational_exp','LanguageParser.py',674),
  ('relational_exp -> shift_exp','relational_exp',1,'p_relational_exp','LanguageParser.py',675),
  ('shift_exp -> shift_exp LSHIFT additive_exp','shift_exp',3,'p_shift_exp','LanguageParser.py',690),
  ('shift_exp -> shift_exp RSHIFT additive_exp','shift_exp',3,'p_shift_exp','LanguageParser.py',691),
  ('shift_exp -> additive_exp','shift_exp',1,'p_shift_exp','LanguageParser.py',692),
  ('additive_exp -> additive_exp PLUS multiplicative_exp','additive_exp',3,'p_additive_exp','LanguageParser.py',701),
  ('additive_exp -> additive_exp MINUS multiplicative_exp','additive_exp',3,'p_additive_exp','LanguageParser.py',702),
  ('additive_exp -> multiplicative_exp','additive_exp',1,'p_additive_exp','LanguageParser.py',703),
  ('multiplicative_exp -> multiplicative_exp STAR unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',712),
  ('multiplicative_exp -> multiplicative_exp SLASH unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',713),
  ('multiplicative_exp -> multiplicative_exp PERCENT unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',714),
  ('multiplicative_exp -> unary_exp','multiplicative_exp',1,'p_multiplicative_exp','LanguageParser.py',715),
  ('assignment -> unary_exp EQUAL exp','assignment',3,'p_assignment_simple','LanguageParser.py',726),
]
