
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPER AMPERAMPER AMPEREQUAL BANG BINARYNUM BOOL BREAK CASE CATCH CHAR CHARLITERAL CIRCUMEQUAL CIRCUMFLEX CLASS COLON COMMA CONST CONTINUE DECIMAL DECIMALNUM DEFAULT DO DOT DOUBLE DOUBLENUM ELSE ENUM EQEQUAL EQUAL FALSE FINALLY FLOAT FLOATNUM FOR FOREACH GEQ GT HEXADECIMALNUM HOOK HOOKHOOK HOOKHOOKEQUAL ID IF IN INT INTERFACE INTNUM IS LBRACE LEQ LONG LPAREN LSB LSHIFT LSHIFTEQUAL LT MINUS MINUSEQUAL MINUSMINUS NAMESPACE NEW NOTEQUAL NULL OBJECT OUT OVERRIDE PARAMS PERCENT PERCENTEQUAL PIPE PIPEEQUAL PIPEPIPE PLUS PLUSEQUAL PLUSPLUS PRIVATE PROTECTED PUBLIC RBRACE READONLY REF RETURN RPAREN RSB RSHIFT RSHIFTEQUAL SEMI SHORT SLASH SLASHEQUAL STAR STAREQUAL STATIC STRING STRINGLITERAL STRUCT SWITCH THIS THROW TILDE TRUE TRY UINT ULONG USHORT VOID WHILEprogram : func_declaration\n               | func_declaration programtype : class_type\n            | value_typeclass_type : OBJECT\n                  | STRINGvalue_type : integral_type\n                  | floating_point_type\n                  | BOOL\n                  | VOIDintegral_type : INTintegral_type : LONGintegral_type : CHARfloating_point_type : FLOATfloating_point_type : DOUBLEfloating_point_type : DECIMALfunc_declaration : signature blocksignature : type ID LPAREN param_list RPAREN\n                 | type ID LPAREN RPARENparam_list : type ID\n                  | type ID COMMA param_liststatement_list : statement\n                      | statement statement_liststatement : declaration_statement\n                 | embedded_statementdeclaration_statement : const_declaration SEMI\n                             | var_declaration SEMIconst_declaration : CONST type const_declaratorsconst_declarators : const_declarator\n                         | const_declarator COMMA const_declaratorsconst_declarator : ID EQUAL expvar_declaration : type var_declaratorsvar_declarators : var_declarator\n                       | var_declarator COMMA var_declaratorsvar_declarator : ID\n                      | ID EQUAL expembedded_statement : block\n                          | empty_statement\n                          | exp_statement\n                          | selection_statement\n                          | iteration_statement\n                          | jump_statementblock : LBRACE statement_list RBRACE\n             | LBRACE RBRACEempty_statement : SEMIexp_statement : statement_exp SEMIstatement_exp : invocation_exp\n                     | object_creation_exp\n                     | assignment\n                     | post_increment_exp\n                     | post_decrement_exp\n                     | pre_increment_exp\n                     | pre_decrement_expobject_creation_exp : NEW type LPAREN RPAREN\n                           | NEW type LPAREN RPAREN object_initializer\n                           | NEW type LPAREN arg_list RPAREN\n                           | NEW type LPAREN arg_list RPAREN object_initializerobject_initializer : LBRACE RBRACE\n                          | LBRACE member_initializer_list RBRACEmember_initializer_list : member_initializer\n                               | member_initializer COMMA member_initializer_listmember_initializer : ID EQUAL exppost_increment_exp : primary_exp PLUSPLUSpost_decrement_exp : primary_exp MINUSMINUSpre_increment_exp : PLUSPLUS unary_exppre_decrement_exp : MINUSMINUS unary_expselection_statement : if_statement\n                           | switch_statementif_statement : IF LPAREN exp RPAREN block\n                    | IF LPAREN exp RPAREN block ELSE blockswitch_statement : SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACEswitch_body : switch_section\n                   | switch_section switch_bodyswitch_section : switch_label statement_listswitch_section : switch_label switch_sectionswitch_label : CASE pattern COLON\n                    | DEFAULT COLONpattern : relational_pattern\n               | constant_patternrelational_pattern : relational_operator constant_exprelational_operator : LT\n                           | GT\n                           | LEQ\n                           | GEQconstant_exp : INTNUM\n                    | FLOATNUM\n                    | CHARLITERALconstant_pattern : INTNUM\n                        | FLOATNUM\n                        | CHARLITERAL\n                        | STRINGLITERAL\n                        | TRUE\n                        | FALSE\n                        | NULLiteration_statement : while_statement\n                           | do_statement\n                           | for_statement\n                           | foreach_statementwhile_statement : WHILE LPAREN exp RPAREN blockdo_statement : DO block WHILE LPAREN exp RPAREN SEMIfor_statement : FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN blockfor_statement : FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN blockfor_statement : FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN blockfor_statement : FOR LPAREN for_initializer SEMI SEMI RPAREN blockfor_statement : FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN blockfor_statement : FOR LPAREN SEMI for_condition SEMI RPAREN blockfor_statement : FOR LPAREN SEMI SEMI for_iterator RPAREN blockfor_statement : FOR LPAREN SEMI SEMI RPAREN blockfor_initializer : var_declarationfor_condition : expfor_iterator : statement_exp_liststatement_exp_list : statement_exp\n                          | statement_exp COMMA statement_exp_listforeach_statement : FOREACH LPAREN type ID IN exp RPAREN blockjump_statement : break_statement\n                      | continue_statement\n                      | return_statementbreak_statement : BREAK SEMIcontinue_statement : CONTINUE SEMIreturn_statement : RETURN SEMI\n                        | RETURN exp SEMIarg_list : exp\n                | exp COMMA arg_listprimary_exp : primary_no_array_creation_expprimary_no_array_creation_exp : TRUE\n                                     | FALSEprimary_no_array_creation_exp : NULLprimary_no_array_creation_exp : INTNUMprimary_no_array_creation_exp : HEXADECIMALNUMprimary_no_array_creation_exp : BINARYNUMprimary_no_array_creation_exp : FLOATNUMprimary_no_array_creation_exp : DOUBLENUMprimary_no_array_creation_exp : DECIMALNUMprimary_no_array_creation_exp : CHARLITERALprimary_no_array_creation_exp : STRINGLITERALprimary_no_array_creation_exp : IDprimary_no_array_creation_exp : parenthesized_expparenthesized_exp : LPAREN exp RPARENprimary_no_array_creation_exp : member_accessmember_access : primary_exp DOT IDprimary_no_array_creation_exp : invocation_expinvocation_exp : primary_exp LPAREN RPAREN\n                      | primary_exp LPAREN arg_list RPARENprimary_no_array_creation_exp : element_accesselement_access : primary_no_array_creation_exp LSB exp RSBprimary_no_array_creation_exp : THISprimary_no_array_creation_exp : post_increment_expprimary_no_array_creation_exp : post_decrement_expprimary_no_array_creation_exp : object_creation_expunary_exp : primary_expunary_exp : pre_increment_expunary_exp : pre_decrement_expunary_exp : cast_expcast_exp : LPAREN type RPAREN unary_expunary_exp : minus_expminus_exp : MINUS unary_expunary_exp : plus_expplus_exp : PLUS unary_expexp : non_assignment_expexp : assignmentnon_assignment_exp : conditional_expconditional_exp : conditional_or_exp HOOK exp COLON exp\n                       | conditional_or_expconditional_or_exp : conditional_or_exp PIPEPIPE conditional_and_exp\n                          | conditional_and_expconditional_and_exp : conditional_and_exp AMPERAMPER inclusive_or_exp\n                           | inclusive_or_expinclusive_or_exp : inclusive_or_exp PIPE exclusive_or_exp\n                        | exclusive_or_expexclusive_or_exp : exclusive_or_exp CIRCUMFLEX and_exp\n                        | and_expand_exp : and_exp AMPER equality_exp\n               | equality_expequality_exp : equality_exp EQEQUAL relational_exp\n                    | equality_exp NOTEQUAL relational_exp\n                    | relational_exprelational_exp : relational_exp LT shift_exp\n                      | relational_exp GT shift_exp\n                      | relational_exp LEQ shift_exp\n                      | relational_exp GEQ shift_exp\n                      | relational_exp IS type\n                      | shift_expshift_exp : shift_exp LSHIFT additive_exp\n                 | shift_exp RSHIFT additive_exp\n                 | additive_expadditive_exp : additive_exp PLUS multiplicative_exp\n                    | additive_exp MINUS multiplicative_exp\n                    | multiplicative_expmultiplicative_exp : multiplicative_exp STAR unary_exp\n                          | multiplicative_exp SLASH unary_exp\n                          | multiplicative_exp PERCENT unary_exp\n                          | unary_expassignment : unary_exp EQUAL exp'
    
_lr_action_items = {'OBJECT':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,93,94,96,97,102,130,131,132,133,134,170,185,235,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[7,7,-17,7,-44,7,-24,-25,-45,-37,-38,-39,-40,-41,-42,7,-67,-68,-95,-96,-97,-98,-115,-116,-117,7,7,7,-43,-26,-27,-46,7,7,-118,-119,-120,7,-121,7,-69,-99,7,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'STRING':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,93,94,96,97,102,130,131,132,133,134,170,185,235,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[8,8,-17,8,-44,8,-24,-25,-45,-37,-38,-39,-40,-41,-42,8,-67,-68,-95,-96,-97,-98,-115,-116,-117,8,8,8,-43,-26,-27,-46,8,8,-118,-119,-120,8,-121,8,-69,-99,8,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'BOOL':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,93,94,96,97,102,130,131,132,133,134,170,185,235,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[11,11,-17,11,-44,11,-24,-25,-45,-37,-38,-39,-40,-41,-42,11,-67,-68,-95,-96,-97,-98,-115,-116,-117,11,11,11,-43,-26,-27,-46,11,11,-118,-119,-120,11,-121,11,-69,-99,11,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'VOID':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,93,94,96,97,102,130,131,132,133,134,170,185,235,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[12,12,-17,12,-44,12,-24,-25,-45,-37,-38,-39,-40,-41,-42,12,-67,-68,-95,-96,-97,-98,-115,-116,-117,12,12,12,-43,-26,-27,-46,12,12,-118,-119,-120,12,-121,12,-69,-99,12,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'INT':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,93,94,96,97,102,130,131,132,133,134,170,185,235,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[13,13,-17,13,-44,13,-24,-25,-45,-37,-38,-39,-40,-41,-42,13,-67,-68,-95,-96,-97,-98,-115,-116,-117,13,13,13,-43,-26,-27,-46,13,13,-118,-119,-120,13,-121,13,-69,-99,13,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'LONG':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,93,94,96,97,102,130,131,132,133,134,170,185,235,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[14,14,-17,14,-44,14,-24,-25,-45,-37,-38,-39,-40,-41,-42,14,-67,-68,-95,-96,-97,-98,-115,-116,-117,14,14,14,-43,-26,-27,-46,14,14,-118,-119,-120,14,-121,14,-69,-99,14,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'CHAR':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,93,94,96,97,102,130,131,132,133,134,170,185,235,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[15,15,-17,15,-44,15,-24,-25,-45,-37,-38,-39,-40,-41,-42,15,-67,-68,-95,-96,-97,-98,-115,-116,-117,15,15,15,-43,-26,-27,-46,15,15,-118,-119,-120,15,-121,15,-69,-99,15,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'FLOAT':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,93,94,96,97,102,130,131,132,133,134,170,185,235,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[16,16,-17,16,-44,16,-24,-25,-45,-37,-38,-39,-40,-41,-42,16,-67,-68,-95,-96,-97,-98,-115,-116,-117,16,16,16,-43,-26,-27,-46,16,16,-118,-119,-120,16,-121,16,-69,-99,16,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'DOUBLE':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,93,94,96,97,102,130,131,132,133,134,170,185,235,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[17,17,-17,17,-44,17,-24,-25,-45,-37,-38,-39,-40,-41,-42,17,-67,-68,-95,-96,-97,-98,-115,-116,-117,17,17,17,-43,-26,-27,-46,17,17,-118,-119,-120,17,-121,17,-69,-99,17,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'DECIMAL':([0,2,20,21,24,25,26,27,29,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,57,68,93,94,96,97,102,130,131,132,133,134,170,185,235,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[18,18,-17,18,-44,18,-24,-25,-45,-37,-38,-39,-40,-41,-42,18,-67,-68,-95,-96,-97,-98,-115,-116,-117,18,18,18,-43,-26,-27,-46,18,18,-118,-119,-120,18,-121,18,-69,-99,18,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'$end':([1,2,19,20,24,94,],[0,-1,-2,-17,-44,-43,]),'LBRACE':([3,21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,60,94,96,97,102,132,133,134,149,185,194,199,222,223,232,238,241,246,254,256,260,265,267,268,271,278,279,298,299,300,301,303,304,306,307,308,312,317,318,319,320,321,324,],[21,21,-44,21,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,21,-43,-26,-27,-46,-118,-119,-120,-19,-121,-18,21,240,21,253,-69,-99,21,253,21,21,21,21,-108,21,-70,-71,-77,-100,21,-104,21,-107,21,-106,21,-76,-103,21,-102,-105,-114,-101,]),'ID':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,24,25,26,27,29,31,32,33,34,35,36,38,40,41,42,43,44,45,46,47,48,57,66,70,71,91,92,94,96,97,98,102,103,127,128,132,133,134,136,139,141,144,147,153,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,184,185,190,195,196,224,225,226,231,238,239,241,243,249,250,253,260,266,268,269,278,279,298,299,301,304,307,310,311,312,317,319,320,321,324,],[22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,63,-44,63,-24,-25,-45,-37,-38,-39,-40,-41,-42,101,-67,-68,-95,-96,-97,-98,-115,-116,-117,63,63,63,63,63,63,-43,-26,-27,152,-46,63,63,63,-118,-119,-120,63,189,63,63,193,101,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,229,-121,63,152,63,63,63,63,63,-69,63,-99,63,63,63,276,63,63,-108,63,-70,-71,-77,-100,-104,-107,-106,276,63,-76,-103,-102,-105,-114,-101,]),'RPAREN':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,49,50,51,52,53,54,55,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,136,137,138,142,143,145,146,148,155,157,178,179,186,187,188,189,190,191,193,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,226,230,232,233,234,242,243,245,247,248,249,251,252,254,255,257,264,266,270,272,273,277,302,305,309,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-47,-48,-49,-50,-51,-52,-53,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,149,156,-192,157,-159,-160,-161,-163,-150,-151,-152,-165,-167,-141,-147,-148,-149,-169,-171,-173,-176,-182,-185,-188,186,-63,-64,-65,-66,-156,-158,194,199,-138,222,223,-142,230,-122,-140,232,-193,-20,-154,-164,-192,-166,-168,-170,-172,-174,-175,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,246,-143,-54,254,-145,263,265,267,-111,-112,271,-123,-55,-56,-21,-162,300,303,306,308,-58,-57,318,-113,-59,]),'LPAREN':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,22,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,52,53,56,57,58,59,61,62,63,66,67,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,96,97,102,103,111,116,117,118,119,127,128,132,133,134,136,137,138,140,141,144,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,180,182,185,186,189,190,196,224,225,226,230,231,232,234,238,239,241,243,249,250,252,254,260,266,268,269,273,277,278,279,298,299,301,304,307,309,311,312,317,319,320,321,324,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,57,93,-44,57,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,-141,-149,-147,-148,103,57,127,128,130,131,-136,57,136,57,57,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,57,57,-43,-26,-27,-46,57,136,-141,-147,-148,-149,57,57,-118,-119,-120,57,-63,-64,190,57,57,57,57,-138,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,224,57,-121,-142,-140,57,57,57,57,57,-143,57,-54,-145,-69,57,-99,57,57,57,-55,-56,57,57,-108,57,-58,-57,-70,-71,-77,-100,-104,-107,-106,-59,57,-76,-103,-102,-105,-114,-101,]),'LT':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,111,112,113,116,117,118,119,123,124,125,126,137,138,142,143,145,146,157,186,189,200,203,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,252,254,261,273,277,309,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-150,-151,-152,-141,-147,-148,-149,166,-182,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-192,166,166,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,294,-58,-57,-59,]),'GT':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,111,112,113,116,117,118,119,123,124,125,126,137,138,142,143,145,146,157,186,189,200,203,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,252,254,261,273,277,309,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-150,-151,-152,-141,-147,-148,-149,167,-182,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-192,167,167,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,295,-58,-57,-59,]),'LEQ':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,111,112,113,116,117,118,119,123,124,125,126,137,138,142,143,145,146,157,186,189,200,203,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,252,254,261,273,277,309,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-150,-151,-152,-141,-147,-148,-149,168,-182,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-192,168,168,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,296,-58,-57,-59,]),'GEQ':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,111,112,113,116,117,118,119,123,124,125,126,137,138,142,143,145,146,157,186,189,200,203,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,252,254,261,273,277,309,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-150,-151,-152,-141,-147,-148,-149,169,-182,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-192,169,169,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,297,-58,-57,-59,]),'IS':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,111,112,113,116,117,118,119,123,124,125,126,137,138,142,143,145,146,157,186,189,200,203,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,252,254,273,277,309,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-150,-151,-152,-141,-147,-148,-149,170,-182,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-192,170,170,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,-58,-57,-59,]),'EQEQUAL':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,111,112,113,116,117,118,119,122,123,124,125,126,137,138,142,143,145,146,157,186,189,200,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,252,254,273,277,309,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-150,-151,-152,-141,-147,-148,-149,164,-176,-182,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-192,164,-174,-175,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,-58,-57,-59,]),'NOTEQUAL':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,111,112,113,116,117,118,119,122,123,124,125,126,137,138,142,143,145,146,157,186,189,200,203,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,252,254,273,277,309,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-150,-151,-152,-141,-147,-148,-149,165,-176,-182,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-192,165,-174,-175,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,-58,-57,-59,]),'AMPER':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,111,112,113,116,117,118,119,121,122,123,124,125,126,137,138,142,143,145,146,157,186,189,200,203,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,252,254,273,277,309,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-150,-151,-152,-141,-147,-148,-149,163,-173,-176,-182,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-192,163,-172,-174,-175,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,-58,-57,-59,]),'CIRCUMFLEX':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,111,112,113,116,117,118,119,120,121,122,123,124,125,126,137,138,142,143,145,146,157,186,189,200,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,252,254,273,277,309,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-150,-151,-152,-141,-147,-148,-149,162,-171,-173,-176,-182,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-192,162,-170,-172,-174,-175,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,-58,-57,-59,]),'PIPE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,137,138,142,143,145,146,157,186,189,200,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,252,254,273,277,309,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-150,-151,-152,161,-141,-147,-148,-149,-169,-171,-173,-176,-182,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-192,161,-168,-170,-172,-174,-175,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,-58,-57,-59,]),'AMPERAMPER':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,137,138,142,143,145,146,157,186,189,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,252,254,273,277,309,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-150,-151,-152,160,-167,-141,-147,-148,-149,-169,-171,-173,-176,-182,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,160,-192,-166,-168,-170,-172,-174,-175,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,-58,-57,-59,]),'HOOK':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,137,138,142,143,145,146,157,186,189,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,252,254,273,277,309,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,158,-150,-151,-152,-165,-167,-141,-147,-148,-149,-169,-171,-173,-176,-182,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-164,-192,-166,-168,-170,-172,-174,-175,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,-58,-57,-59,]),'PIPEPIPE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,137,138,142,143,145,146,157,186,189,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,252,254,273,277,309,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,159,-150,-151,-152,-165,-167,-141,-147,-148,-149,-169,-171,-173,-176,-182,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-164,-192,-166,-168,-170,-172,-174,-175,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,-58,-57,-59,]),'SEMI':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,63,64,65,66,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,96,97,99,100,101,102,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,132,133,134,135,137,138,142,143,145,146,150,151,157,181,182,183,185,186,189,191,197,198,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,225,227,228,230,232,234,236,237,238,241,244,252,254,257,260,263,268,273,277,278,279,298,299,301,304,307,309,312,317,319,320,321,324,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,29,-44,29,-24,-25,96,-45,97,-37,-38,-39,-40,-41,-42,102,-67,-68,-95,-96,-97,-98,-115,-116,-117,-47,-48,-49,-50,-51,-52,-53,-136,132,133,134,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-43,-26,-27,-32,-33,-35,-46,-192,-159,-160,-161,-163,-150,-151,-152,-165,-167,-141,-147,-148,-149,-169,-171,-173,-176,-182,-185,-188,182,-118,-119,-120,185,-63,-64,-65,-66,-156,-158,-28,-29,-138,225,226,-109,-121,-142,-140,-193,-34,-36,-154,-164,-192,-166,-168,-170,-172,-174,-175,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,243,249,-110,-143,-54,-145,-30,-31,-69,-99,266,-55,-56,-162,29,299,-108,-58,-57,-70,-71,-77,-100,-104,-107,-106,-59,-76,-103,-102,-105,-114,-101,]),'COMMA':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,49,50,51,52,53,54,55,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,100,101,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,137,138,142,143,145,146,151,157,186,188,189,191,193,198,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,237,248,252,254,257,273,275,277,309,323,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-47,-48,-49,-50,-51,-52,-53,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,153,-35,-192,-159,-160,-161,-163,-150,-151,-152,-165,-167,-141,-147,-148,-149,-169,-171,-173,-176,-182,-185,-188,-63,-64,-65,-66,-156,-158,195,-138,-142,231,-140,-193,235,-36,-154,-164,-192,-166,-168,-170,-172,-174,-175,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-31,269,-55,-56,-162,-58,310,-57,-59,-62,]),'RSB':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,137,138,142,143,145,146,157,186,189,191,192,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,252,254,257,273,277,309,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-159,-160,-161,-163,-150,-151,-152,-165,-167,-141,-147,-148,-149,-169,-171,-173,-176,-182,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-193,234,-154,-164,-192,-166,-168,-170,-172,-174,-175,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,-162,-58,-57,-59,]),'COLON':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,137,138,142,143,145,146,157,186,189,191,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,252,254,257,262,273,277,283,284,285,287,288,289,290,291,292,293,309,313,314,315,316,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-159,-160,-161,-163,-150,-151,-152,-165,-167,-141,-147,-148,-149,-169,-171,-173,-176,-182,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-193,-154,239,-164,-192,-166,-168,-170,-172,-174,-175,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,-162,298,-58,-57,312,-78,-79,-88,-89,-90,-91,-92,-93,-94,-59,-80,-85,-86,-87,]),'RBRACE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,21,23,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,94,95,96,97,102,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,132,133,134,137,138,142,143,145,146,157,185,186,189,191,200,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,230,232,234,238,241,252,253,254,257,258,259,268,273,274,275,277,278,279,280,281,282,299,301,304,307,309,317,319,320,321,322,323,324,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,24,94,-44,-22,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-43,-23,-26,-27,-46,-192,-159,-160,-161,-163,-150,-151,-152,-165,-167,-141,-147,-148,-149,-169,-171,-173,-176,-182,-185,-188,-118,-119,-120,-63,-64,-65,-66,-156,-158,-138,-121,-142,-140,-193,-154,-164,-192,-166,-168,-170,-172,-174,-175,-177,-178,-179,-180,-181,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-69,-99,-55,273,-56,-162,279,-72,-108,-58,309,-60,-57,-70,-71,-73,-74,-75,-100,-104,-107,-106,-59,-103,-102,-105,-114,-61,-62,-101,]),'CONST':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,94,96,97,102,132,133,134,185,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[37,-44,37,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,-43,-26,-27,-46,-118,-119,-120,-121,-69,-99,37,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'IF':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,94,96,97,102,132,133,134,185,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[56,-44,56,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,-43,-26,-27,-46,-118,-119,-120,-121,-69,-99,56,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'SWITCH':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,94,96,97,102,132,133,134,185,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[58,-44,58,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,-43,-26,-27,-46,-118,-119,-120,-121,-69,-99,58,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'WHILE':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,94,96,97,102,129,132,133,134,185,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[59,-44,59,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,-43,-26,-27,-46,180,-118,-119,-120,-121,-69,-99,59,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'DO':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,94,96,97,102,132,133,134,185,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[60,-44,60,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,-43,-26,-27,-46,-118,-119,-120,-121,-69,-99,60,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'FOR':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,94,96,97,102,132,133,134,185,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[61,-44,61,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,-43,-26,-27,-46,-118,-119,-120,-121,-69,-99,61,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'FOREACH':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,94,96,97,102,132,133,134,185,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[62,-44,62,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,-43,-26,-27,-46,-118,-119,-120,-121,-69,-99,62,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'BREAK':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,94,96,97,102,132,133,134,185,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[64,-44,64,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,-43,-26,-27,-46,-118,-119,-120,-121,-69,-99,64,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'CONTINUE':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,94,96,97,102,132,133,134,185,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[65,-44,65,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,-43,-26,-27,-46,-118,-119,-120,-121,-69,-99,65,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'RETURN':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,94,96,97,102,132,133,134,185,238,241,260,268,278,279,298,299,301,304,307,312,317,319,320,321,324,],[66,-44,66,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,-43,-26,-27,-46,-118,-119,-120,-121,-69,-99,66,-108,-70,-71,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'NEW':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,66,70,71,91,92,94,96,97,102,103,127,128,132,133,134,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,190,196,224,225,226,231,238,239,241,243,249,250,260,266,268,269,278,279,298,299,301,304,307,311,312,317,319,320,321,324,],[68,-44,68,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,68,68,68,68,68,68,-43,-26,-27,-46,68,68,68,-118,-119,-120,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-121,68,68,68,68,68,68,-69,68,-99,68,68,68,68,68,-108,68,-70,-71,-77,-100,-104,-107,-106,68,-76,-103,-102,-105,-114,-101,]),'PLUSPLUS':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,52,53,57,63,66,67,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,96,97,102,103,111,116,117,118,119,127,128,132,133,134,136,137,138,141,144,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,186,189,190,196,224,225,226,230,231,232,234,238,239,241,243,249,250,252,254,260,266,268,269,273,277,278,279,298,299,301,304,307,309,311,312,317,319,320,321,324,],[70,-44,70,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,-141,-149,-147,-148,70,-136,70,137,70,70,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,70,70,-43,-26,-27,-46,70,137,-141,-147,-148,-149,70,70,-118,-119,-120,70,-63,-64,70,70,70,70,-138,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-121,-142,-140,70,70,70,70,70,-143,70,-54,-145,-69,70,-99,70,70,70,-55,-56,70,70,-108,70,-58,-57,-70,-71,-77,-100,-104,-107,-106,-59,70,-76,-103,-102,-105,-114,-101,]),'MINUSMINUS':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,49,50,52,53,57,63,66,67,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,96,97,102,103,111,116,117,118,119,127,128,132,133,134,136,137,138,141,144,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,186,189,190,196,224,225,226,230,231,232,234,238,239,241,243,249,250,252,254,260,266,268,269,273,277,278,279,298,299,301,304,307,309,311,312,317,319,320,321,324,],[71,-44,71,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,-141,-149,-147,-148,71,-136,71,138,71,71,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,71,71,-43,-26,-27,-46,71,138,-141,-147,-148,-149,71,71,-118,-119,-120,71,-63,-64,71,71,71,71,-138,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-121,-142,-140,71,71,71,71,71,-143,71,-54,-145,-69,71,-99,71,71,71,-55,-56,71,71,-108,71,-58,-57,-70,-71,-77,-100,-104,-107,-106,-59,71,-76,-103,-102,-105,-114,-101,]),'TRUE':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,66,70,71,91,92,94,96,97,102,103,127,128,132,133,134,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,190,196,224,225,226,231,238,239,241,243,249,250,260,261,266,268,269,278,279,298,299,301,304,307,311,312,317,319,320,321,324,],[76,-44,76,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,76,76,76,76,76,76,-43,-26,-27,-46,76,76,76,-118,-119,-120,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-121,76,76,76,76,76,76,-69,76,-99,76,76,76,76,291,76,-108,76,-70,-71,-77,-100,-104,-107,-106,76,-76,-103,-102,-105,-114,-101,]),'FALSE':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,66,70,71,91,92,94,96,97,102,103,127,128,132,133,134,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,190,196,224,225,226,231,238,239,241,243,249,250,260,261,266,268,269,278,279,298,299,301,304,307,311,312,317,319,320,321,324,],[77,-44,77,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,77,77,77,77,77,77,-43,-26,-27,-46,77,77,77,-118,-119,-120,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-121,77,77,77,77,77,77,-69,77,-99,77,77,77,77,292,77,-108,77,-70,-71,-77,-100,-104,-107,-106,77,-76,-103,-102,-105,-114,-101,]),'NULL':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,66,70,71,91,92,94,96,97,102,103,127,128,132,133,134,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,190,196,224,225,226,231,238,239,241,243,249,250,260,261,266,268,269,278,279,298,299,301,304,307,311,312,317,319,320,321,324,],[78,-44,78,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,78,78,78,78,78,78,-43,-26,-27,-46,78,78,78,-118,-119,-120,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-121,78,78,78,78,78,78,-69,78,-99,78,78,78,78,293,78,-108,78,-70,-71,-77,-100,-104,-107,-106,78,-76,-103,-102,-105,-114,-101,]),'INTNUM':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,66,70,71,91,92,94,96,97,102,103,127,128,132,133,134,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,190,196,224,225,226,231,238,239,241,243,249,250,260,261,266,268,269,278,279,286,294,295,296,297,298,299,301,304,307,311,312,317,319,320,321,324,],[79,-44,79,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,79,79,79,79,79,79,-43,-26,-27,-46,79,79,79,-118,-119,-120,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-121,79,79,79,79,79,79,-69,79,-99,79,79,79,79,287,79,-108,79,-70,-71,314,-81,-82,-83,-84,-77,-100,-104,-107,-106,79,-76,-103,-102,-105,-114,-101,]),'HEXADECIMALNUM':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,66,70,71,91,92,94,96,97,102,103,127,128,132,133,134,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,190,196,224,225,226,231,238,239,241,243,249,250,260,266,268,269,278,279,298,299,301,304,307,311,312,317,319,320,321,324,],[80,-44,80,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,80,80,80,80,80,80,-43,-26,-27,-46,80,80,80,-118,-119,-120,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-121,80,80,80,80,80,80,-69,80,-99,80,80,80,80,80,-108,80,-70,-71,-77,-100,-104,-107,-106,80,-76,-103,-102,-105,-114,-101,]),'BINARYNUM':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,66,70,71,91,92,94,96,97,102,103,127,128,132,133,134,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,190,196,224,225,226,231,238,239,241,243,249,250,260,266,268,269,278,279,298,299,301,304,307,311,312,317,319,320,321,324,],[81,-44,81,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,81,81,81,81,81,81,-43,-26,-27,-46,81,81,81,-118,-119,-120,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-121,81,81,81,81,81,81,-69,81,-99,81,81,81,81,81,-108,81,-70,-71,-77,-100,-104,-107,-106,81,-76,-103,-102,-105,-114,-101,]),'FLOATNUM':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,66,70,71,91,92,94,96,97,102,103,127,128,132,133,134,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,190,196,224,225,226,231,238,239,241,243,249,250,260,261,266,268,269,278,279,286,294,295,296,297,298,299,301,304,307,311,312,317,319,320,321,324,],[82,-44,82,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,82,82,82,82,82,82,-43,-26,-27,-46,82,82,82,-118,-119,-120,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-121,82,82,82,82,82,82,-69,82,-99,82,82,82,82,288,82,-108,82,-70,-71,315,-81,-82,-83,-84,-77,-100,-104,-107,-106,82,-76,-103,-102,-105,-114,-101,]),'DOUBLENUM':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,66,70,71,91,92,94,96,97,102,103,127,128,132,133,134,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,190,196,224,225,226,231,238,239,241,243,249,250,260,266,268,269,278,279,298,299,301,304,307,311,312,317,319,320,321,324,],[83,-44,83,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,83,83,83,83,83,83,-43,-26,-27,-46,83,83,83,-118,-119,-120,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-121,83,83,83,83,83,83,-69,83,-99,83,83,83,83,83,-108,83,-70,-71,-77,-100,-104,-107,-106,83,-76,-103,-102,-105,-114,-101,]),'DECIMALNUM':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,66,70,71,91,92,94,96,97,102,103,127,128,132,133,134,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,190,196,224,225,226,231,238,239,241,243,249,250,260,266,268,269,278,279,298,299,301,304,307,311,312,317,319,320,321,324,],[84,-44,84,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,84,84,84,84,84,84,-43,-26,-27,-46,84,84,84,-118,-119,-120,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-121,84,84,84,84,84,84,-69,84,-99,84,84,84,84,84,-108,84,-70,-71,-77,-100,-104,-107,-106,84,-76,-103,-102,-105,-114,-101,]),'CHARLITERAL':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,66,70,71,91,92,94,96,97,102,103,127,128,132,133,134,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,190,196,224,225,226,231,238,239,241,243,249,250,260,261,266,268,269,278,279,286,294,295,296,297,298,299,301,304,307,311,312,317,319,320,321,324,],[85,-44,85,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,85,85,85,85,85,85,-43,-26,-27,-46,85,85,85,-118,-119,-120,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-121,85,85,85,85,85,85,-69,85,-99,85,85,85,85,289,85,-108,85,-70,-71,316,-81,-82,-83,-84,-77,-100,-104,-107,-106,85,-76,-103,-102,-105,-114,-101,]),'STRINGLITERAL':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,66,70,71,91,92,94,96,97,102,103,127,128,132,133,134,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,190,196,224,225,226,231,238,239,241,243,249,250,260,261,266,268,269,278,279,298,299,301,304,307,311,312,317,319,320,321,324,],[86,-44,86,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,86,86,86,86,86,86,-43,-26,-27,-46,86,86,86,-118,-119,-120,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-121,86,86,86,86,86,86,-69,86,-99,86,86,86,86,290,86,-108,86,-70,-71,-77,-100,-104,-107,-106,86,-76,-103,-102,-105,-114,-101,]),'THIS':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,66,70,71,91,92,94,96,97,102,103,127,128,132,133,134,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,190,196,224,225,226,231,238,239,241,243,249,250,260,266,268,269,278,279,298,299,301,304,307,311,312,317,319,320,321,324,],[90,-44,90,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,90,90,90,90,90,90,-43,-26,-27,-46,90,90,90,-118,-119,-120,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-121,90,90,90,90,90,90,-69,90,-99,90,90,90,90,90,-108,90,-70,-71,-77,-100,-104,-107,-106,90,-76,-103,-102,-105,-114,-101,]),'MINUS':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,63,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,96,97,102,103,105,111,112,113,116,117,118,119,125,126,127,128,132,133,134,136,137,138,141,142,143,144,145,146,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,186,189,190,196,200,203,215,216,217,218,219,220,221,224,225,226,230,231,232,234,238,239,241,243,249,250,252,254,260,266,268,269,273,277,278,279,298,299,301,304,307,309,311,312,317,319,320,321,324,],[91,-44,91,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,91,-136,91,91,91,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,91,91,-43,-26,-27,-46,91,-192,-150,-151,-152,-141,-147,-148,-149,174,-188,91,91,-118,-119,-120,91,-63,-64,91,-65,-66,91,-156,-158,91,91,-138,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-121,-142,-140,91,91,-154,-192,174,174,-186,-187,-189,-190,-191,91,91,91,-143,91,-54,-145,-69,91,-99,91,91,91,-55,-56,91,91,-108,91,-58,-57,-70,-71,-77,-100,-104,-107,-106,-59,91,-76,-103,-102,-105,-114,-101,]),'PLUS':([21,24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,57,63,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,96,97,102,103,105,111,112,113,116,117,118,119,125,126,127,128,132,133,134,136,137,138,141,142,143,144,145,146,154,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,185,186,189,190,196,200,203,215,216,217,218,219,220,221,224,225,226,230,231,232,234,238,239,241,243,249,250,252,254,260,266,268,269,273,277,278,279,298,299,301,304,307,309,311,312,317,319,320,321,324,],[92,-44,92,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,92,-136,92,92,92,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,92,92,-43,-26,-27,-46,92,-192,-150,-151,-152,-141,-147,-148,-149,173,-188,92,92,-118,-119,-120,92,-63,-64,92,-65,-66,92,-156,-158,92,92,-138,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-121,-142,-140,92,92,-154,-192,173,173,-186,-187,-189,-190,-191,92,92,92,-143,92,-54,-145,-69,92,-99,92,92,92,-55,-56,92,92,-108,92,-58,-57,-70,-71,-77,-100,-104,-107,-106,-59,92,-76,-103,-102,-105,-114,-101,]),'CASE':([24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,94,95,96,97,102,132,133,134,185,238,240,241,259,260,268,278,279,281,282,298,299,301,304,307,312,317,319,320,321,324,],[-44,-22,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,-43,-23,-26,-27,-46,-118,-119,-120,-121,-69,261,-99,261,261,-108,-70,-71,-74,-75,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'DEFAULT':([24,25,26,27,29,31,32,33,34,35,36,40,41,42,43,44,45,46,47,48,94,95,96,97,102,132,133,134,185,238,240,241,259,260,268,278,279,281,282,298,299,301,304,307,312,317,319,320,321,324,],[-44,-22,-24,-25,-45,-37,-38,-39,-40,-41,-42,-67,-68,-95,-96,-97,-98,-115,-116,-117,-43,-23,-26,-27,-46,-118,-119,-120,-121,-69,262,-99,262,262,-108,-70,-71,-74,-75,-77,-100,-104,-107,-106,-76,-103,-102,-105,-114,-101,]),'ELSE':([24,94,238,],[-44,-43,256,]),'LSB':([49,50,52,53,63,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,116,117,118,119,137,138,157,186,189,230,232,234,252,254,273,277,309,],[-141,-149,-147,-148,-136,144,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-141,-147,-148,-149,-63,-64,-138,-142,-140,-143,-54,-145,-55,-56,-58,-57,-59,]),'DOT':([49,50,52,53,63,67,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,111,116,117,118,119,137,138,157,186,189,230,232,234,252,254,273,277,309,],[-141,-149,-147,-148,-136,139,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,139,-141,-147,-148,-149,-63,-64,-138,-142,-140,-143,-54,-145,-55,-56,-58,-57,-59,]),'EQUAL':([49,50,52,53,54,55,63,67,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,101,105,111,112,113,116,117,118,119,137,138,142,143,145,146,152,157,186,189,200,230,232,234,252,254,273,276,277,309,],[-141,-149,-147,-148,-151,-152,-136,-150,141,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,154,141,-150,-151,-152,-141,-147,-148,-149,-63,-64,-65,-66,-156,-158,196,-138,-142,-140,-154,-143,-54,-145,-55,-56,-58,311,-57,-59,]),'STAR':([63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,111,112,113,116,117,118,119,126,137,138,142,143,145,146,157,186,189,200,203,217,218,219,220,221,230,232,234,252,254,273,277,309,],[-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-150,-151,-152,-141,-147,-148,-149,175,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-192,175,175,-189,-190,-191,-143,-54,-145,-55,-56,-58,-57,-59,]),'SLASH':([63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,111,112,113,116,117,118,119,126,137,138,142,143,145,146,157,186,189,200,203,217,218,219,220,221,230,232,234,252,254,273,277,309,],[-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-150,-151,-152,-141,-147,-148,-149,176,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-192,176,176,-189,-190,-191,-143,-54,-145,-55,-56,-58,-57,-59,]),'PERCENT':([63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,111,112,113,116,117,118,119,126,137,138,142,143,145,146,157,186,189,200,203,217,218,219,220,221,230,232,234,252,254,273,277,309,],[-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-150,-151,-152,-141,-147,-148,-149,177,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-192,177,177,-189,-190,-191,-143,-54,-145,-55,-56,-58,-57,-59,]),'LSHIFT':([63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,111,112,113,116,117,118,119,124,125,126,137,138,142,143,145,146,157,186,189,200,203,210,211,212,213,215,216,217,218,219,220,221,230,232,234,252,254,273,277,309,],[-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-150,-151,-152,-141,-147,-148,-149,171,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-192,171,171,171,171,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,-58,-57,-59,]),'RSHIFT':([63,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,111,112,113,116,117,118,119,124,125,126,137,138,142,143,145,146,157,186,189,200,203,210,211,212,213,215,216,217,218,219,220,221,230,232,234,252,254,273,277,309,],[-136,-124,-153,-155,-157,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-137,-139,-144,-146,-192,-150,-151,-152,-141,-147,-148,-149,172,-185,-188,-63,-64,-65,-66,-156,-158,-138,-142,-140,-154,-192,172,172,172,172,-183,-184,-186,-187,-189,-190,-191,-143,-54,-145,-55,-56,-58,-57,-59,]),'IN':([229,],[250,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,19,]),'func_declaration':([0,2,],[2,2,]),'signature':([0,2,],[3,3,]),'type':([0,2,21,25,37,57,68,93,130,131,170,235,260,],[4,4,38,38,98,104,140,147,38,184,214,147,38,]),'class_type':([0,2,21,25,37,57,68,93,130,131,170,235,260,],[5,5,5,5,5,5,5,5,5,5,5,5,5,]),'value_type':([0,2,21,25,37,57,68,93,130,131,170,235,260,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'integral_type':([0,2,21,25,37,57,68,93,130,131,170,235,260,],[9,9,9,9,9,9,9,9,9,9,9,9,9,]),'floating_point_type':([0,2,21,25,37,57,68,93,130,131,170,235,260,],[10,10,10,10,10,10,10,10,10,10,10,10,10,]),'block':([3,21,25,60,199,223,246,256,260,265,267,271,300,303,306,308,318,],[20,31,31,129,238,241,268,278,31,301,304,307,317,319,320,321,324,]),'statement_list':([21,25,260,],[23,95,281,]),'statement':([21,25,260,],[25,25,25,]),'declaration_statement':([21,25,260,],[26,26,26,]),'embedded_statement':([21,25,260,],[27,27,27,]),'const_declaration':([21,25,260,],[28,28,28,]),'var_declaration':([21,25,130,260,],[30,30,183,30,]),'empty_statement':([21,25,260,],[32,32,32,]),'exp_statement':([21,25,260,],[33,33,33,]),'selection_statement':([21,25,260,],[34,34,34,]),'iteration_statement':([21,25,260,],[35,35,35,]),'jump_statement':([21,25,260,],[36,36,36,]),'statement_exp':([21,25,226,243,249,260,266,269,],[39,39,248,248,248,39,248,248,]),'if_statement':([21,25,260,],[40,40,40,]),'switch_statement':([21,25,260,],[41,41,41,]),'while_statement':([21,25,260,],[42,42,42,]),'do_statement':([21,25,260,],[43,43,43,]),'for_statement':([21,25,260,],[44,44,44,]),'foreach_statement':([21,25,260,],[45,45,45,]),'break_statement':([21,25,260,],[46,46,46,]),'continue_statement':([21,25,260,],[47,47,47,]),'return_statement':([21,25,260,],[48,48,48,]),'invocation_exp':([21,25,57,66,70,71,91,92,103,127,128,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,190,196,224,225,226,231,239,243,249,250,260,266,269,311,],[49,49,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,49,116,116,49,49,116,49,49,49,116,]),'object_creation_exp':([21,25,57,66,70,71,91,92,103,127,128,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,190,196,224,225,226,231,239,243,249,250,260,266,269,311,],[50,50,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,50,119,119,50,50,119,50,50,50,119,]),'assignment':([21,25,57,66,103,127,128,136,141,144,154,158,182,190,196,224,225,226,231,239,243,249,250,260,266,269,311,],[51,51,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,51,108,108,51,51,108,51,51,51,108,]),'post_increment_exp':([21,25,57,66,70,71,91,92,103,127,128,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,190,196,224,225,226,231,239,243,249,250,260,266,269,311,],[52,52,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,52,117,117,52,52,117,52,52,52,117,]),'post_decrement_exp':([21,25,57,66,70,71,91,92,103,127,128,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,190,196,224,225,226,231,239,243,249,250,260,266,269,311,],[53,53,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,53,118,118,53,53,118,53,53,53,118,]),'pre_increment_exp':([21,25,57,66,70,71,91,92,103,127,128,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,190,196,224,225,226,231,239,243,249,250,260,266,269,311,],[54,54,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,54,112,112,54,54,112,54,54,54,112,]),'pre_decrement_exp':([21,25,57,66,70,71,91,92,103,127,128,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,190,196,224,225,226,231,239,243,249,250,260,266,269,311,],[55,55,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,55,113,113,55,55,113,55,55,55,113,]),'primary_exp':([21,25,57,66,70,71,91,92,103,127,128,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,190,196,224,225,226,231,239,243,249,250,260,266,269,311,],[67,67,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,67,111,111,67,67,111,67,67,67,111,]),'unary_exp':([21,25,57,66,70,71,91,92,103,127,128,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,190,196,224,225,226,231,239,243,249,250,260,266,269,311,],[69,69,105,105,142,143,145,146,105,105,105,105,105,105,105,200,105,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,219,220,221,105,105,105,105,105,69,105,105,69,69,105,69,69,69,105,]),'primary_no_array_creation_exp':([21,25,57,66,70,71,91,92,103,127,128,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,190,196,224,225,226,231,239,243,249,250,260,266,269,311,],[72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,]),'cast_exp':([21,25,57,66,70,71,91,92,103,127,128,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,190,196,224,225,226,231,239,243,249,250,260,266,269,311,],[73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,]),'minus_exp':([21,25,57,66,70,71,91,92,103,127,128,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,190,196,224,225,226,231,239,243,249,250,260,266,269,311,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'plus_exp':([21,25,57,66,70,71,91,92,103,127,128,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,190,196,224,225,226,231,239,243,249,250,260,266,269,311,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'parenthesized_exp':([21,25,57,66,70,71,91,92,103,127,128,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,190,196,224,225,226,231,239,243,249,250,260,266,269,311,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'member_access':([21,25,57,66,70,71,91,92,103,127,128,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,190,196,224,225,226,231,239,243,249,250,260,266,269,311,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'element_access':([21,25,57,66,70,71,91,92,103,127,128,136,141,144,154,156,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,182,190,196,224,225,226,231,239,243,249,250,260,266,269,311,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'var_declarators':([38,153,],[99,197,]),'var_declarator':([38,153,],[100,100,]),'exp':([57,66,103,127,128,136,141,144,154,158,182,190,196,224,225,231,239,250,311,],[106,135,155,178,179,188,191,192,198,201,228,188,237,242,228,188,257,272,323,]),'non_assignment_exp':([57,66,103,127,128,136,141,144,154,158,182,190,196,224,225,231,239,250,311,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'conditional_exp':([57,66,103,127,128,136,141,144,154,158,182,190,196,224,225,231,239,250,311,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'conditional_or_exp':([57,66,103,127,128,136,141,144,154,158,182,190,196,224,225,231,239,250,311,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'conditional_and_exp':([57,66,103,127,128,136,141,144,154,158,159,182,190,196,224,225,231,239,250,311,],[114,114,114,114,114,114,114,114,114,114,202,114,114,114,114,114,114,114,114,114,]),'inclusive_or_exp':([57,66,103,127,128,136,141,144,154,158,159,160,182,190,196,224,225,231,239,250,311,],[115,115,115,115,115,115,115,115,115,115,115,204,115,115,115,115,115,115,115,115,115,]),'exclusive_or_exp':([57,66,103,127,128,136,141,144,154,158,159,160,161,182,190,196,224,225,231,239,250,311,],[120,120,120,120,120,120,120,120,120,120,120,120,205,120,120,120,120,120,120,120,120,120,]),'and_exp':([57,66,103,127,128,136,141,144,154,158,159,160,161,162,182,190,196,224,225,231,239,250,311,],[121,121,121,121,121,121,121,121,121,121,121,121,121,206,121,121,121,121,121,121,121,121,121,]),'equality_exp':([57,66,103,127,128,136,141,144,154,158,159,160,161,162,163,182,190,196,224,225,231,239,250,311,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,207,122,122,122,122,122,122,122,122,122,]),'relational_exp':([57,66,103,127,128,136,141,144,154,158,159,160,161,162,163,164,165,182,190,196,224,225,231,239,250,311,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,208,209,123,123,123,123,123,123,123,123,123,]),'shift_exp':([57,66,103,127,128,136,141,144,154,158,159,160,161,162,163,164,165,166,167,168,169,182,190,196,224,225,231,239,250,311,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,210,211,212,213,124,124,124,124,124,124,124,124,124,]),'additive_exp':([57,66,103,127,128,136,141,144,154,158,159,160,161,162,163,164,165,166,167,168,169,171,172,182,190,196,224,225,231,239,250,311,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,215,216,125,125,125,125,125,125,125,125,125,]),'multiplicative_exp':([57,66,103,127,128,136,141,144,154,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,182,190,196,224,225,231,239,250,311,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,217,218,126,126,126,126,126,126,126,126,126,]),'param_list':([93,235,],[148,255,]),'const_declarators':([98,195,],[150,236,]),'const_declarator':([98,195,],[151,151,]),'for_initializer':([130,],[181,]),'arg_list':([136,190,231,],[187,233,251,]),'for_condition':([182,225,],[227,244,]),'for_iterator':([226,243,249,266,],[245,264,270,302,]),'statement_exp_list':([226,243,249,266,269,],[247,247,247,247,305,]),'object_initializer':([232,254,],[252,277,]),'switch_body':([240,259,],[258,280,]),'switch_section':([240,259,260,],[259,259,282,]),'switch_label':([240,259,260,],[260,260,260,]),'member_initializer_list':([253,310,],[274,322,]),'member_initializer':([253,310,],[275,275,]),'pattern':([261,],[283,]),'relational_pattern':([261,],[284,]),'constant_pattern':([261,],[285,]),'relational_operator':([261,],[286,]),'constant_exp':([286,],[313,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> func_declaration','program',1,'p_program','LanguageParser.py',9),
  ('program -> func_declaration program','program',2,'p_program','LanguageParser.py',10),
  ('type -> class_type','type',1,'p_type','LanguageParser.py',25),
  ('type -> value_type','type',1,'p_type','LanguageParser.py',26),
  ('class_type -> OBJECT','class_type',1,'p_class_type','LanguageParser.py',33),
  ('class_type -> STRING','class_type',1,'p_class_type','LanguageParser.py',34),
  ('value_type -> integral_type','value_type',1,'p_value_type','LanguageParser.py',41),
  ('value_type -> floating_point_type','value_type',1,'p_value_type','LanguageParser.py',42),
  ('value_type -> BOOL','value_type',1,'p_value_type','LanguageParser.py',43),
  ('value_type -> VOID','value_type',1,'p_value_type','LanguageParser.py',44),
  ('integral_type -> INT','integral_type',1,'p_integral_type_int','LanguageParser.py',55),
  ('integral_type -> LONG','integral_type',1,'p_integral_type_long','LanguageParser.py',59),
  ('integral_type -> CHAR','integral_type',1,'p_integral_type_char','LanguageParser.py',63),
  ('floating_point_type -> FLOAT','floating_point_type',1,'p_integral_type_float','LanguageParser.py',67),
  ('floating_point_type -> DOUBLE','floating_point_type',1,'p_integral_type_double','LanguageParser.py',71),
  ('floating_point_type -> DECIMAL','floating_point_type',1,'p_integral_type_decimal','LanguageParser.py',75),
  ('func_declaration -> signature block','func_declaration',2,'p_func_declaration','LanguageParser.py',79),
  ('signature -> type ID LPAREN param_list RPAREN','signature',5,'p_signature','LanguageParser.py',83),
  ('signature -> type ID LPAREN RPAREN','signature',4,'p_signature','LanguageParser.py',84),
  ('param_list -> type ID','param_list',2,'p_param_list','LanguageParser.py',91),
  ('param_list -> type ID COMMA param_list','param_list',4,'p_param_list','LanguageParser.py',92),
  ('statement_list -> statement','statement_list',1,'p_statement_list','LanguageParser.py',99),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','LanguageParser.py',100),
  ('statement -> declaration_statement','statement',1,'p_statement','LanguageParser.py',107),
  ('statement -> embedded_statement','statement',1,'p_statement','LanguageParser.py',108),
  ('declaration_statement -> const_declaration SEMI','declaration_statement',2,'p_declaration_stmt','LanguageParser.py',115),
  ('declaration_statement -> var_declaration SEMI','declaration_statement',2,'p_declaration_stmt','LanguageParser.py',116),
  ('const_declaration -> CONST type const_declarators','const_declaration',3,'p_const_declaration','LanguageParser.py',123),
  ('const_declarators -> const_declarator','const_declarators',1,'p_const_declarators','LanguageParser.py',127),
  ('const_declarators -> const_declarator COMMA const_declarators','const_declarators',3,'p_const_declarators','LanguageParser.py',128),
  ('const_declarator -> ID EQUAL exp','const_declarator',3,'p_const_declarator','LanguageParser.py',135),
  ('var_declaration -> type var_declarators','var_declaration',2,'p_var_declaration','LanguageParser.py',139),
  ('var_declarators -> var_declarator','var_declarators',1,'p_var_declarators','LanguageParser.py',143),
  ('var_declarators -> var_declarator COMMA var_declarators','var_declarators',3,'p_var_declarators','LanguageParser.py',144),
  ('var_declarator -> ID','var_declarator',1,'p_var_declarator','LanguageParser.py',151),
  ('var_declarator -> ID EQUAL exp','var_declarator',3,'p_var_declarator','LanguageParser.py',152),
  ('embedded_statement -> block','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',159),
  ('embedded_statement -> empty_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',160),
  ('embedded_statement -> exp_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',161),
  ('embedded_statement -> selection_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',162),
  ('embedded_statement -> iteration_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',163),
  ('embedded_statement -> jump_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',164),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','LanguageParser.py',179),
  ('block -> LBRACE RBRACE','block',2,'p_block','LanguageParser.py',180),
  ('empty_statement -> SEMI','empty_statement',1,'p_empty_stmt','LanguageParser.py',187),
  ('exp_statement -> statement_exp SEMI','exp_statement',2,'p_exp_statement','LanguageParser.py',191),
  ('statement_exp -> invocation_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',195),
  ('statement_exp -> object_creation_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',196),
  ('statement_exp -> assignment','statement_exp',1,'p_statement_exp','LanguageParser.py',197),
  ('statement_exp -> post_increment_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',198),
  ('statement_exp -> post_decrement_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',199),
  ('statement_exp -> pre_increment_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',200),
  ('statement_exp -> pre_decrement_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',201),
  ('object_creation_exp -> NEW type LPAREN RPAREN','object_creation_exp',4,'p_object_creation','LanguageParser.py',218),
  ('object_creation_exp -> NEW type LPAREN RPAREN object_initializer','object_creation_exp',5,'p_object_creation','LanguageParser.py',219),
  ('object_creation_exp -> NEW type LPAREN arg_list RPAREN','object_creation_exp',5,'p_object_creation','LanguageParser.py',220),
  ('object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer','object_creation_exp',6,'p_object_creation','LanguageParser.py',221),
  ('object_initializer -> LBRACE RBRACE','object_initializer',2,'p_object_initializer','LanguageParser.py',233),
  ('object_initializer -> LBRACE member_initializer_list RBRACE','object_initializer',3,'p_object_initializer','LanguageParser.py',234),
  ('member_initializer_list -> member_initializer','member_initializer_list',1,'p_member_initializer_list','LanguageParser.py',241),
  ('member_initializer_list -> member_initializer COMMA member_initializer_list','member_initializer_list',3,'p_member_initializer_list','LanguageParser.py',242),
  ('member_initializer -> ID EQUAL exp','member_initializer',3,'p_member_initializer','LanguageParser.py',249),
  ('post_increment_exp -> primary_exp PLUSPLUS','post_increment_exp',2,'p_post_increment_exp','LanguageParser.py',253),
  ('post_decrement_exp -> primary_exp MINUSMINUS','post_decrement_exp',2,'p_post_decrement_exp','LanguageParser.py',257),
  ('pre_increment_exp -> PLUSPLUS unary_exp','pre_increment_exp',2,'p_pre_increment_exp','LanguageParser.py',261),
  ('pre_decrement_exp -> MINUSMINUS unary_exp','pre_decrement_exp',2,'p_pre_decrement_exp','LanguageParser.py',265),
  ('selection_statement -> if_statement','selection_statement',1,'p_selection_statement','LanguageParser.py',269),
  ('selection_statement -> switch_statement','selection_statement',1,'p_selection_statement','LanguageParser.py',270),
  ('if_statement -> IF LPAREN exp RPAREN block','if_statement',5,'p_if_statement','LanguageParser.py',277),
  ('if_statement -> IF LPAREN exp RPAREN block ELSE block','if_statement',7,'p_if_statement','LanguageParser.py',278),
  ('switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE','switch_statement',7,'p_switch_statement','LanguageParser.py',285),
  ('switch_body -> switch_section','switch_body',1,'p_switch_body','LanguageParser.py',289),
  ('switch_body -> switch_section switch_body','switch_body',2,'p_switch_body','LanguageParser.py',290),
  ('switch_section -> switch_label statement_list','switch_section',2,'p_switch_section_simple','LanguageParser.py',297),
  ('switch_section -> switch_label switch_section','switch_section',2,'p_switch_section_compound','LanguageParser.py',301),
  ('switch_label -> CASE pattern COLON','switch_label',3,'p_switch_label','LanguageParser.py',305),
  ('switch_label -> DEFAULT COLON','switch_label',2,'p_switch_label','LanguageParser.py',306),
  ('pattern -> relational_pattern','pattern',1,'p_pattern','LanguageParser.py',313),
  ('pattern -> constant_pattern','pattern',1,'p_pattern','LanguageParser.py',314),
  ('relational_pattern -> relational_operator constant_exp','relational_pattern',2,'p_relational_pattern','LanguageParser.py',321),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','LanguageParser.py',325),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','LanguageParser.py',326),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','LanguageParser.py',327),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','LanguageParser.py',328),
  ('constant_exp -> INTNUM','constant_exp',1,'p_constant_exp','LanguageParser.py',332),
  ('constant_exp -> FLOATNUM','constant_exp',1,'p_constant_exp','LanguageParser.py',333),
  ('constant_exp -> CHARLITERAL','constant_exp',1,'p_constant_exp','LanguageParser.py',334),
  ('constant_pattern -> INTNUM','constant_pattern',1,'p_constant_pattern','LanguageParser.py',338),
  ('constant_pattern -> FLOATNUM','constant_pattern',1,'p_constant_pattern','LanguageParser.py',339),
  ('constant_pattern -> CHARLITERAL','constant_pattern',1,'p_constant_pattern','LanguageParser.py',340),
  ('constant_pattern -> STRINGLITERAL','constant_pattern',1,'p_constant_pattern','LanguageParser.py',341),
  ('constant_pattern -> TRUE','constant_pattern',1,'p_constant_pattern','LanguageParser.py',342),
  ('constant_pattern -> FALSE','constant_pattern',1,'p_constant_pattern','LanguageParser.py',343),
  ('constant_pattern -> NULL','constant_pattern',1,'p_constant_pattern','LanguageParser.py',344),
  ('iteration_statement -> while_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',348),
  ('iteration_statement -> do_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',349),
  ('iteration_statement -> for_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',350),
  ('iteration_statement -> foreach_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',351),
  ('while_statement -> WHILE LPAREN exp RPAREN block','while_statement',5,'p_while_statement','LanguageParser.py',362),
  ('do_statement -> DO block WHILE LPAREN exp RPAREN SEMI','do_statement',7,'p_do_statement','LanguageParser.py',366),
  ('for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN block','for_statement',9,'p_for_statement_full','LanguageParser.py',370),
  ('for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN block','for_statement',8,'p_for_statement_12','LanguageParser.py',374),
  ('for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN block','for_statement',8,'p_for_statement_13','LanguageParser.py',378),
  ('for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN block','for_statement',7,'p_for_statement_1','LanguageParser.py',382),
  ('for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN block','for_statement',8,'p_for_statement_23','LanguageParser.py',386),
  ('for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN block','for_statement',7,'p_for_statement_2','LanguageParser.py',390),
  ('for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN block','for_statement',7,'p_for_statement_3','LanguageParser.py',394),
  ('for_statement -> FOR LPAREN SEMI SEMI RPAREN block','for_statement',6,'p_for_statement_empty','LanguageParser.py',398),
  ('for_initializer -> var_declaration','for_initializer',1,'p_for_initializer','LanguageParser.py',402),
  ('for_condition -> exp','for_condition',1,'p_for_condition','LanguageParser.py',406),
  ('for_iterator -> statement_exp_list','for_iterator',1,'p_for_iterator','LanguageParser.py',410),
  ('statement_exp_list -> statement_exp','statement_exp_list',1,'p_statement_exp_list','LanguageParser.py',414),
  ('statement_exp_list -> statement_exp COMMA statement_exp_list','statement_exp_list',3,'p_statement_exp_list','LanguageParser.py',415),
  ('foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN block','foreach_statement',8,'p_foreach_statement','LanguageParser.py',422),
  ('jump_statement -> break_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',426),
  ('jump_statement -> continue_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',427),
  ('jump_statement -> return_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',428),
  ('break_statement -> BREAK SEMI','break_statement',2,'p_break_statement','LanguageParser.py',437),
  ('continue_statement -> CONTINUE SEMI','continue_statement',2,'p_continue_statement','LanguageParser.py',441),
  ('return_statement -> RETURN SEMI','return_statement',2,'p_return_statement','LanguageParser.py',445),
  ('return_statement -> RETURN exp SEMI','return_statement',3,'p_return_statement','LanguageParser.py',446),
  ('arg_list -> exp','arg_list',1,'p_arg_list','LanguageParser.py',453),
  ('arg_list -> exp COMMA arg_list','arg_list',3,'p_arg_list','LanguageParser.py',454),
  ('primary_exp -> primary_no_array_creation_exp','primary_exp',1,'p_primary_exp','LanguageParser.py',461),
  ('primary_no_array_creation_exp -> TRUE','primary_no_array_creation_exp',1,'p_boolean_exp','LanguageParser.py',465),
  ('primary_no_array_creation_exp -> FALSE','primary_no_array_creation_exp',1,'p_boolean_exp','LanguageParser.py',466),
  ('primary_no_array_creation_exp -> NULL','primary_no_array_creation_exp',1,'p_null_exp','LanguageParser.py',470),
  ('primary_no_array_creation_exp -> INTNUM','primary_no_array_creation_exp',1,'p_intnum_exp','LanguageParser.py',474),
  ('primary_no_array_creation_exp -> HEXADECIMALNUM','primary_no_array_creation_exp',1,'p_hexnum_exp','LanguageParser.py',478),
  ('primary_no_array_creation_exp -> BINARYNUM','primary_no_array_creation_exp',1,'p_binnum_exp','LanguageParser.py',482),
  ('primary_no_array_creation_exp -> FLOATNUM','primary_no_array_creation_exp',1,'p_floatnum_exp','LanguageParser.py',486),
  ('primary_no_array_creation_exp -> DOUBLENUM','primary_no_array_creation_exp',1,'p_doublenum_exp','LanguageParser.py',490),
  ('primary_no_array_creation_exp -> DECIMALNUM','primary_no_array_creation_exp',1,'p_decimalnum_exp','LanguageParser.py',494),
  ('primary_no_array_creation_exp -> CHARLITERAL','primary_no_array_creation_exp',1,'p_charliteral_exp','LanguageParser.py',498),
  ('primary_no_array_creation_exp -> STRINGLITERAL','primary_no_array_creation_exp',1,'p_stringliteral_exp','LanguageParser.py',502),
  ('primary_no_array_creation_exp -> ID','primary_no_array_creation_exp',1,'p_id_exp','LanguageParser.py',506),
  ('primary_no_array_creation_exp -> parenthesized_exp','primary_no_array_creation_exp',1,'p_primary_parenthesized_exp','LanguageParser.py',510),
  ('parenthesized_exp -> LPAREN exp RPAREN','parenthesized_exp',3,'p_parenthesized_exp','LanguageParser.py',514),
  ('primary_no_array_creation_exp -> member_access','primary_no_array_creation_exp',1,'p_primary_member_access_exp','LanguageParser.py',518),
  ('member_access -> primary_exp DOT ID','member_access',3,'p_member_access_exp','LanguageParser.py',522),
  ('primary_no_array_creation_exp -> invocation_exp','primary_no_array_creation_exp',1,'p_primary_invocation_exp','LanguageParser.py',526),
  ('invocation_exp -> primary_exp LPAREN RPAREN','invocation_exp',3,'p_invocation_exp','LanguageParser.py',530),
  ('invocation_exp -> primary_exp LPAREN arg_list RPAREN','invocation_exp',4,'p_invocation_exp','LanguageParser.py',531),
  ('primary_no_array_creation_exp -> element_access','primary_no_array_creation_exp',1,'p_primary_element_access_exp','LanguageParser.py',538),
  ('element_access -> primary_no_array_creation_exp LSB exp RSB','element_access',4,'p_element_access_exp','LanguageParser.py',542),
  ('primary_no_array_creation_exp -> THIS','primary_no_array_creation_exp',1,'p_this_exp','LanguageParser.py',546),
  ('primary_no_array_creation_exp -> post_increment_exp','primary_no_array_creation_exp',1,'p_primary_post_increment_exp','LanguageParser.py',551),
  ('primary_no_array_creation_exp -> post_decrement_exp','primary_no_array_creation_exp',1,'p_primary_post_decrement_exp','LanguageParser.py',556),
  ('primary_no_array_creation_exp -> object_creation_exp','primary_no_array_creation_exp',1,'p_primary_object_creation_exp','LanguageParser.py',561),
  ('unary_exp -> primary_exp','unary_exp',1,'p_unary_primary_exp','LanguageParser.py',573),
  ('unary_exp -> pre_increment_exp','unary_exp',1,'p_unary_pre_increment_exp','LanguageParser.py',577),
  ('unary_exp -> pre_decrement_exp','unary_exp',1,'p_unary_pre_decrement_exp','LanguageParser.py',581),
  ('unary_exp -> cast_exp','unary_exp',1,'p_unary_cast_exp','LanguageParser.py',585),
  ('cast_exp -> LPAREN type RPAREN unary_exp','cast_exp',4,'p_cast_exp','LanguageParser.py',589),
  ('unary_exp -> minus_exp','unary_exp',1,'p_unary_minus_exp','LanguageParser.py',593),
  ('minus_exp -> MINUS unary_exp','minus_exp',2,'p_minus_exp','LanguageParser.py',597),
  ('unary_exp -> plus_exp','unary_exp',1,'p_unary_plus_exp','LanguageParser.py',601),
  ('plus_exp -> PLUS unary_exp','plus_exp',2,'p_plus_exp','LanguageParser.py',605),
  ('exp -> non_assignment_exp','exp',1,'p_exp_non_assignment_exp','LanguageParser.py',609),
  ('exp -> assignment','exp',1,'p_exp_assignment_exp','LanguageParser.py',613),
  ('non_assignment_exp -> conditional_exp','non_assignment_exp',1,'p_non_assignment_conditional_exp','LanguageParser.py',617),
  ('conditional_exp -> conditional_or_exp HOOK exp COLON exp','conditional_exp',5,'p_conditional_exp','LanguageParser.py',621),
  ('conditional_exp -> conditional_or_exp','conditional_exp',1,'p_conditional_exp','LanguageParser.py',622),
  ('conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp','conditional_or_exp',3,'p_conditional_or_exp','LanguageParser.py',629),
  ('conditional_or_exp -> conditional_and_exp','conditional_or_exp',1,'p_conditional_or_exp','LanguageParser.py',630),
  ('conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp','conditional_and_exp',3,'p_conditional_and_exp','LanguageParser.py',637),
  ('conditional_and_exp -> inclusive_or_exp','conditional_and_exp',1,'p_conditional_and_exp','LanguageParser.py',638),
  ('inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp','inclusive_or_exp',3,'p_inclusive_or_exp','LanguageParser.py',645),
  ('inclusive_or_exp -> exclusive_or_exp','inclusive_or_exp',1,'p_inclusive_or_exp','LanguageParser.py',646),
  ('exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp','exclusive_or_exp',3,'p_exclusive_or_exp','LanguageParser.py',653),
  ('exclusive_or_exp -> and_exp','exclusive_or_exp',1,'p_exclusive_or_exp','LanguageParser.py',654),
  ('and_exp -> and_exp AMPER equality_exp','and_exp',3,'p_and_exp','LanguageParser.py',661),
  ('and_exp -> equality_exp','and_exp',1,'p_and_exp','LanguageParser.py',662),
  ('equality_exp -> equality_exp EQEQUAL relational_exp','equality_exp',3,'p_equality_exp','LanguageParser.py',669),
  ('equality_exp -> equality_exp NOTEQUAL relational_exp','equality_exp',3,'p_equality_exp','LanguageParser.py',670),
  ('equality_exp -> relational_exp','equality_exp',1,'p_equality_exp','LanguageParser.py',671),
  ('relational_exp -> relational_exp LT shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',680),
  ('relational_exp -> relational_exp GT shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',681),
  ('relational_exp -> relational_exp LEQ shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',682),
  ('relational_exp -> relational_exp GEQ shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',683),
  ('relational_exp -> relational_exp IS type','relational_exp',3,'p_relational_exp','LanguageParser.py',684),
  ('relational_exp -> shift_exp','relational_exp',1,'p_relational_exp','LanguageParser.py',685),
  ('shift_exp -> shift_exp LSHIFT additive_exp','shift_exp',3,'p_shift_exp','LanguageParser.py',700),
  ('shift_exp -> shift_exp RSHIFT additive_exp','shift_exp',3,'p_shift_exp','LanguageParser.py',701),
  ('shift_exp -> additive_exp','shift_exp',1,'p_shift_exp','LanguageParser.py',702),
  ('additive_exp -> additive_exp PLUS multiplicative_exp','additive_exp',3,'p_additive_exp','LanguageParser.py',711),
  ('additive_exp -> additive_exp MINUS multiplicative_exp','additive_exp',3,'p_additive_exp','LanguageParser.py',712),
  ('additive_exp -> multiplicative_exp','additive_exp',1,'p_additive_exp','LanguageParser.py',713),
  ('multiplicative_exp -> multiplicative_exp STAR unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',722),
  ('multiplicative_exp -> multiplicative_exp SLASH unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',723),
  ('multiplicative_exp -> multiplicative_exp PERCENT unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',724),
  ('multiplicative_exp -> unary_exp','multiplicative_exp',1,'p_multiplicative_exp','LanguageParser.py',725),
  ('assignment -> unary_exp EQUAL exp','assignment',3,'p_assignment_simple','LanguageParser.py',736),
]
