Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPEREQUAL
    BANG
    CATCH
    CIRCUMEQUAL
    CLASS
    ENUM
    FINALLY
    HOOKHOOK
    HOOKHOOKEQUAL
    INTERFACE
    LSHIFTEQUAL
    MINUSEQUAL
    NAMESPACE
    OUT
    OVERRIDE
    PARAMS
    PERCENTEQUAL
    PIPEEQUAL
    PLUSEQUAL
    PRIVATE
    PROTECTED
    PUBLIC
    READONLY
    REF
    RSHIFTEQUAL
    SHORT
    SLASHEQUAL
    STAREQUAL
    STATIC
    STRUCT
    THROW
    TILDE
    TRY
    UINT
    ULONG
    USHORT

Grammar

Rule 0     S' -> program
Rule 1     program -> func_declaration
Rule 2     program -> func_declaration program
Rule 3     type_name -> ID
Rule 4     type_name -> type_name DOT ID
Rule 5     type -> class_type
Rule 6     type -> value_type
Rule 7     class_type -> OBJECT
Rule 8     class_type -> STRING
Rule 9     class_type -> type_name
Rule 10    value_type -> integral_type
Rule 11    value_type -> floating_point_type
Rule 12    value_type -> BOOL
Rule 13    value_type -> VOID
Rule 14    integral_type -> INT
Rule 15    integral_type -> LONG
Rule 16    integral_type -> CHAR
Rule 17    floating_point_type -> FLOAT
Rule 18    floating_point_type -> DOUBLE
Rule 19    floating_point_type -> DECIMAL
Rule 20    func_declaration -> signature block
Rule 21    signature -> type ID LPAREN param_list RPAREN
Rule 22    signature -> type ID LPAREN RPAREN
Rule 23    param_list -> type ID
Rule 24    param_list -> type ID COMMA param_list
Rule 25    statement_list -> statement
Rule 26    statement_list -> statement statement_list
Rule 27    statement -> declaration_statement
Rule 28    statement -> embedded_statement
Rule 29    declaration_statement -> const_declaration SEMI
Rule 30    declaration_statement -> var_declaration SEMI
Rule 31    const_declaration -> CONST type const_declarators
Rule 32    const_declarators -> const_declarator
Rule 33    const_declarators -> const_declarator COMMA const_declarators
Rule 34    const_declarator -> ID EQUAL exp
Rule 35    var_declaration -> type var_declarators
Rule 36    var_declarators -> var_declarator
Rule 37    var_declarators -> var_declarator COMMA var_declarators
Rule 38    var_declarator -> ID
Rule 39    var_declarator -> ID EQUAL exp
Rule 40    embedded_statement -> block
Rule 41    embedded_statement -> empty_statement
Rule 42    embedded_statement -> exp_statement
Rule 43    embedded_statement -> selection_statement
Rule 44    embedded_statement -> iteration_statement
Rule 45    embedded_statement -> jump_statement
Rule 46    block -> LBRACE statement_list RBRACE
Rule 47    block -> LBRACE RBRACE
Rule 48    empty_statement -> SEMI
Rule 49    exp_statement -> statement_exp SEMI
Rule 50    statement_exp -> invocation_exp
Rule 51    statement_exp -> object_creation_exp
Rule 52    statement_exp -> assignment
Rule 53    statement_exp -> post_increment_exp
Rule 54    statement_exp -> post_decrement_exp
Rule 55    statement_exp -> pre_increment_exp
Rule 56    statement_exp -> pre_decrement_exp
Rule 57    object_creation_exp -> NEW type LPAREN RPAREN
Rule 58    object_creation_exp -> NEW type LPAREN RPAREN object_initializer
Rule 59    object_creation_exp -> NEW type LPAREN arg_list RPAREN
Rule 60    object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer
Rule 61    object_initializer -> LBRACE RBRACE
Rule 62    object_initializer -> LBRACE member_initializer_list RBRACE
Rule 63    member_initializer_list -> member_initializer
Rule 64    member_initializer_list -> member_initializer COMMA member_initializer_list
Rule 65    member_initializer -> ID EQUAL exp
Rule 66    post_increment_exp -> primary_exp PLUSPLUS
Rule 67    post_decrement_exp -> primary_exp MINUSMINUS
Rule 68    pre_increment_exp -> PLUSPLUS unary_exp
Rule 69    pre_decrement_exp -> MINUSMINUS unary_exp
Rule 70    selection_statement -> if_statement
Rule 71    selection_statement -> switch_statement
Rule 72    if_statement -> IF LPAREN exp RPAREN embedded_statement
Rule 73    if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
Rule 74    switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
Rule 75    switch_body -> switch_section
Rule 76    switch_body -> switch_section switch_body
Rule 77    switch_section -> switch_label statement_list
Rule 78    switch_section -> switch_label switch_section
Rule 79    switch_label -> CASE pattern COLON
Rule 80    switch_label -> DEFAULT COLON
Rule 81    pattern -> exp
Rule 82    iteration_statement -> while_statement
Rule 83    iteration_statement -> do_statement
Rule 84    iteration_statement -> for_statement
Rule 85    iteration_statement -> foreach_statement
Rule 86    while_statement -> WHILE LPAREN exp RPAREN embedded_statement
Rule 87    do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI
Rule 88    for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
Rule 89    for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
Rule 90    for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
Rule 91    for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
Rule 92    for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
Rule 93    for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
Rule 94    for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
Rule 95    for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement
Rule 96    for_initializer -> var_declaration
Rule 97    for_initializer -> var_declaration COMMA for_initializer
Rule 98    for_condition -> exp
Rule 99    for_iterator -> statement_exp_list
Rule 100   statement_exp_list -> statement_exp
Rule 101   statement_exp_list -> statement_exp COMMA statement_exp_list
Rule 102   foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement
Rule 103   jump_statement -> break_statement
Rule 104   jump_statement -> continue_statement
Rule 105   jump_statement -> return_statement
Rule 106   break_statement -> BREAK SEMI
Rule 107   continue_statement -> CONTINUE SEMI
Rule 108   return_statement -> RETURN SEMI
Rule 109   return_statement -> RETURN exp SEMI
Rule 110   arg_list -> exp
Rule 111   arg_list -> exp COMMA arg_list
Rule 112   primary_exp -> primary_no_array_creation_exp
Rule 113   primary_no_array_creation_exp -> TRUE
Rule 114   primary_no_array_creation_exp -> FALSE
Rule 115   primary_no_array_creation_exp -> NULL
Rule 116   primary_no_array_creation_exp -> INTNUM
Rule 117   primary_no_array_creation_exp -> HEXADECIMALNUM
Rule 118   primary_no_array_creation_exp -> BINARYNUM
Rule 119   primary_no_array_creation_exp -> FLOATNUM
Rule 120   primary_no_array_creation_exp -> DOUBLENUM
Rule 121   primary_no_array_creation_exp -> DECIMALNUM
Rule 122   primary_no_array_creation_exp -> CHARLITERAL
Rule 123   primary_no_array_creation_exp -> STRINGLITERAL
Rule 124   primary_no_array_creation_exp -> ID
Rule 125   primary_no_array_creation_exp -> parenthesized_exp
Rule 126   parenthesized_exp -> LPAREN exp RPAREN
Rule 127   primary_no_array_creation_exp -> invocation_exp
Rule 128   invocation_exp -> primary_exp LPAREN RPAREN
Rule 129   invocation_exp -> primary_exp LPAREN arg_list RPAREN
Rule 130   primary_no_array_creation_exp -> element_access
Rule 131   element_access -> primary_no_array_creation_exp LSB exp RSB
Rule 132   primary_no_array_creation_exp -> THIS
Rule 133   primary_no_array_creation_exp -> post_increment_exp
Rule 134   primary_no_array_creation_exp -> post_decrement_exp
Rule 135   primary_no_array_creation_exp -> object_creation_exp
Rule 136   primary_no_array_creation_exp -> typeof_exp
Rule 137   typeof_exp -> TYPEOF LPAREN type RPAREN
Rule 138   primary_no_array_creation_exp -> sizeof_exp
Rule 139   sizeof_exp -> SIZEOF LPAREN value_type RPAREN
Rule 140   primary_no_array_creation_exp -> default_exp
Rule 141   default_exp -> DEFAULT LPAREN type RPAREN
Rule 142   exp_list -> exp
Rule 143   exp_list -> exp_list COMMA exp
Rule 144   unary_exp -> primary_exp
Rule 145   unary_exp -> pre_increment_exp
Rule 146   unary_exp -> pre_decrement_exp
Rule 147   unary_exp -> cast_exp
Rule 148   cast_exp -> LPAREN type RPAREN unary_exp
Rule 149   exp -> non_assignment_exp
Rule 150   exp -> assignment
Rule 151   non_assignment_exp -> conditional_exp
Rule 152   conditional_exp -> conditional_or_exp HOOK exp COLON exp
Rule 153   conditional_exp -> conditional_or_exp
Rule 154   conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp
Rule 155   conditional_or_exp -> conditional_and_exp
Rule 156   conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp
Rule 157   conditional_and_exp -> inclusive_or_exp
Rule 158   inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp
Rule 159   inclusive_or_exp -> exclusive_or_exp
Rule 160   exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp
Rule 161   exclusive_or_exp -> and_exp
Rule 162   and_exp -> and_exp AMPER equality_exp
Rule 163   and_exp -> equality_exp
Rule 164   equality_exp -> equality_exp EQEQUAL relational_exp
Rule 165   equality_exp -> equality_exp NOTEQUAL relational_exp
Rule 166   equality_exp -> relational_exp
Rule 167   relational_exp -> relational_exp LT shift_exp
Rule 168   relational_exp -> relational_exp GT shift_exp
Rule 169   relational_exp -> relational_exp LEQ shift_exp
Rule 170   relational_exp -> relational_exp GEQ shift_exp
Rule 171   relational_exp -> relational_exp IS type
Rule 172   relational_exp -> shift_exp
Rule 173   shift_exp -> shift_exp LSHIFT additive_exp
Rule 174   shift_exp -> shift_exp RSHIFT additive_exp
Rule 175   shift_exp -> additive_exp
Rule 176   additive_exp -> additive_exp PLUS multiplicative_exp
Rule 177   additive_exp -> additive_exp MINUS multiplicative_exp
Rule 178   additive_exp -> multiplicative_exp
Rule 179   multiplicative_exp -> multiplicative_exp STAR unary_exp
Rule 180   multiplicative_exp -> multiplicative_exp SLASH unary_exp
Rule 181   multiplicative_exp -> multiplicative_exp PERCENT unary_exp
Rule 182   multiplicative_exp -> unary_exp
Rule 183   assignment -> unary_exp EQUAL exp

Terminals, with rules where they appear

AMPER                : 162
AMPERAMPER           : 156
AMPEREQUAL           : 
BANG                 : 
BINARYNUM            : 118
BOOL                 : 12
BREAK                : 106
CASE                 : 79
CATCH                : 
CHAR                 : 16
CHARLITERAL          : 122
CIRCUMEQUAL          : 
CIRCUMFLEX           : 160
CLASS                : 
COLON                : 79 80 152
COMMA                : 24 33 37 64 97 101 111 143
CONST                : 31
CONTINUE             : 107
DECIMAL              : 19
DECIMALNUM           : 121
DEFAULT              : 80 141
DO                   : 87
DOT                  : 4
DOUBLE               : 18
DOUBLENUM            : 120
ELSE                 : 73
ENUM                 : 
EQEQUAL              : 164
EQUAL                : 34 39 65 183
FALSE                : 114
FINALLY              : 
FLOAT                : 17
FLOATNUM             : 119
FOR                  : 88 89 90 91 92 93 94 95
FOREACH              : 102
GEQ                  : 170
GT                   : 168
HEXADECIMALNUM       : 117
HOOK                 : 152
HOOKHOOK             : 
HOOKHOOKEQUAL        : 
ID                   : 3 4 21 22 23 24 34 38 39 65 102 124
IF                   : 72 73
IN                   : 102
INT                  : 14
INTERFACE            : 
INTNUM               : 116
IS                   : 171
LBRACE               : 46 47 61 62 74
LEQ                  : 169
LONG                 : 15
LPAREN               : 21 22 57 58 59 60 72 73 74 86 87 88 89 90 91 92 93 94 95 102 126 128 129 137 139 141 148
LSB                  : 131
LSHIFT               : 173
LSHIFTEQUAL          : 
LT                   : 167
MINUS                : 177
MINUSEQUAL           : 
MINUSMINUS           : 67 69
NAMESPACE            : 
NEW                  : 57 58 59 60
NOTEQUAL             : 165
NULL                 : 115
OBJECT               : 7
OUT                  : 
OVERRIDE             : 
PARAMS               : 
PERCENT              : 181
PERCENTEQUAL         : 
PIPE                 : 158
PIPEEQUAL            : 
PIPEPIPE             : 154
PLUS                 : 176
PLUSEQUAL            : 
PLUSPLUS             : 66 68
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
RBRACE               : 46 47 61 62 74
READONLY             : 
REF                  : 
RETURN               : 108 109
RPAREN               : 21 22 57 58 59 60 72 73 74 86 87 88 89 90 91 92 93 94 95 102 126 128 129 137 139 141 148
RSB                  : 131
RSHIFT               : 174
RSHIFTEQUAL          : 
SEMI                 : 29 30 48 49 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 106 107 108 109
SHORT                : 
SIZEOF               : 139
SLASH                : 180
SLASHEQUAL           : 
STAR                 : 179
STAREQUAL            : 
STATIC               : 
STRING               : 8
STRINGLITERAL        : 123
STRUCT               : 
SWITCH               : 74
THIS                 : 132
THROW                : 
TILDE                : 
TRUE                 : 113
TRY                  : 
TYPEOF               : 137
UINT                 : 
ULONG                : 
USHORT               : 
VOID                 : 13
WHILE                : 86 87
error                : 

Nonterminals, with rules where they appear

additive_exp         : 173 174 175 176 177
and_exp              : 160 161 162
arg_list             : 59 60 111 129
assignment           : 52 150
block                : 20 40
break_statement      : 103
cast_exp             : 147
class_type           : 5
conditional_and_exp  : 154 155 156
conditional_exp      : 151
conditional_or_exp   : 152 153 154
const_declaration    : 29
const_declarator     : 32 33
const_declarators    : 31 33
continue_statement   : 104
declaration_statement : 27
default_exp          : 140
do_statement         : 83
element_access       : 130
embedded_statement   : 28 72 73 73 86 87 88 89 90 91 92 93 94 95 102
empty_statement      : 41
equality_exp         : 162 163 164 165
exclusive_or_exp     : 158 159 160
exp                  : 34 39 65 72 73 74 81 86 87 98 102 109 110 111 126 131 142 143 152 152 183
exp_list             : 143
exp_statement        : 42
floating_point_type  : 11
for_condition        : 88 89 92 93
for_initializer      : 88 89 90 91 97
for_iterator         : 88 90 92 94
for_statement        : 84
foreach_statement    : 85
func_declaration     : 1 2
if_statement         : 70
inclusive_or_exp     : 156 157 158
integral_type        : 10
invocation_exp       : 50 127
iteration_statement  : 44
jump_statement       : 45
member_initializer   : 63 64
member_initializer_list : 62 64
multiplicative_exp   : 176 177 178 179 180 181
non_assignment_exp   : 149
object_creation_exp  : 51 135
object_initializer   : 58 60
param_list           : 21 24
parenthesized_exp    : 125
pattern              : 79
post_decrement_exp   : 54 134
post_increment_exp   : 53 133
pre_decrement_exp    : 56 146
pre_increment_exp    : 55 145
primary_exp          : 66 67 128 129 144
primary_no_array_creation_exp : 112 131
program              : 2 0
relational_exp       : 164 165 166 167 168 169 170 171
return_statement     : 105
selection_statement  : 43
shift_exp            : 167 168 169 170 172 173 174
signature            : 20
sizeof_exp           : 138
statement            : 25 26
statement_exp        : 49 100 101
statement_exp_list   : 99 101
statement_list       : 26 46 77
switch_body          : 74 76
switch_label         : 77 78
switch_section       : 75 76 78
switch_statement     : 71
type                 : 21 22 23 24 31 35 57 58 59 60 102 137 141 148 171
type_name            : 4 9
typeof_exp           : 136
unary_exp            : 68 69 148 179 180 181 182 183
value_type           : 6 139
var_declaration      : 30 96 97
var_declarator       : 36 37
var_declarators      : 35 37
while_statement      : 82

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . func_declaration
    (2) program -> . func_declaration program
    (20) func_declaration -> . signature block
    (21) signature -> . type ID LPAREN param_list RPAREN
    (22) signature -> . type ID LPAREN RPAREN
    (5) type -> . class_type
    (6) type -> . value_type
    (7) class_type -> . OBJECT
    (8) class_type -> . STRING
    (9) class_type -> . type_name
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (3) type_name -> . ID
    (4) type_name -> . type_name DOT ID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL

    OBJECT          shift and go to state 8
    STRING          shift and go to state 9
    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    ID              shift and go to state 5
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20

    program                        shift and go to state 1
    func_declaration               shift and go to state 2
    signature                      shift and go to state 3
    type                           shift and go to state 4
    class_type                     shift and go to state 6
    value_type                     shift and go to state 7
    type_name                      shift and go to state 10
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12

state 1

    (0) S' -> program .



state 2

    (1) program -> func_declaration .
    (2) program -> func_declaration . program
    (1) program -> . func_declaration
    (2) program -> . func_declaration program
    (20) func_declaration -> . signature block
    (21) signature -> . type ID LPAREN param_list RPAREN
    (22) signature -> . type ID LPAREN RPAREN
    (5) type -> . class_type
    (6) type -> . value_type
    (7) class_type -> . OBJECT
    (8) class_type -> . STRING
    (9) class_type -> . type_name
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (3) type_name -> . ID
    (4) type_name -> . type_name DOT ID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL

    $end            reduce using rule 1 (program -> func_declaration .)
    OBJECT          shift and go to state 8
    STRING          shift and go to state 9
    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    ID              shift and go to state 5
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20

    func_declaration               shift and go to state 2
    program                        shift and go to state 21
    signature                      shift and go to state 3
    type                           shift and go to state 4
    class_type                     shift and go to state 6
    value_type                     shift and go to state 7
    type_name                      shift and go to state 10
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12

state 3

    (20) func_declaration -> signature . block
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE

    LBRACE          shift and go to state 23

    block                          shift and go to state 22

state 4

    (21) signature -> type . ID LPAREN param_list RPAREN
    (22) signature -> type . ID LPAREN RPAREN

    ID              shift and go to state 24


state 5

    (3) type_name -> ID .

    DOT             reduce using rule 3 (type_name -> ID .)
    ID              reduce using rule 3 (type_name -> ID .)
    LPAREN          reduce using rule 3 (type_name -> ID .)
    RPAREN          reduce using rule 3 (type_name -> ID .)
    LT              reduce using rule 3 (type_name -> ID .)
    GT              reduce using rule 3 (type_name -> ID .)
    LEQ             reduce using rule 3 (type_name -> ID .)
    GEQ             reduce using rule 3 (type_name -> ID .)
    IS              reduce using rule 3 (type_name -> ID .)
    EQEQUAL         reduce using rule 3 (type_name -> ID .)
    NOTEQUAL        reduce using rule 3 (type_name -> ID .)
    AMPER           reduce using rule 3 (type_name -> ID .)
    CIRCUMFLEX      reduce using rule 3 (type_name -> ID .)
    PIPE            reduce using rule 3 (type_name -> ID .)
    AMPERAMPER      reduce using rule 3 (type_name -> ID .)
    HOOK            reduce using rule 3 (type_name -> ID .)
    PIPEPIPE        reduce using rule 3 (type_name -> ID .)
    SEMI            reduce using rule 3 (type_name -> ID .)
    COMMA           reduce using rule 3 (type_name -> ID .)
    RSB             reduce using rule 3 (type_name -> ID .)
    COLON           reduce using rule 3 (type_name -> ID .)
    RBRACE          reduce using rule 3 (type_name -> ID .)


state 6

    (5) type -> class_type .

    ID              reduce using rule 5 (type -> class_type .)
    RPAREN          reduce using rule 5 (type -> class_type .)
    LPAREN          reduce using rule 5 (type -> class_type .)
    LT              reduce using rule 5 (type -> class_type .)
    GT              reduce using rule 5 (type -> class_type .)
    LEQ             reduce using rule 5 (type -> class_type .)
    GEQ             reduce using rule 5 (type -> class_type .)
    IS              reduce using rule 5 (type -> class_type .)
    EQEQUAL         reduce using rule 5 (type -> class_type .)
    NOTEQUAL        reduce using rule 5 (type -> class_type .)
    AMPER           reduce using rule 5 (type -> class_type .)
    CIRCUMFLEX      reduce using rule 5 (type -> class_type .)
    PIPE            reduce using rule 5 (type -> class_type .)
    AMPERAMPER      reduce using rule 5 (type -> class_type .)
    HOOK            reduce using rule 5 (type -> class_type .)
    PIPEPIPE        reduce using rule 5 (type -> class_type .)
    SEMI            reduce using rule 5 (type -> class_type .)
    COMMA           reduce using rule 5 (type -> class_type .)
    RSB             reduce using rule 5 (type -> class_type .)
    COLON           reduce using rule 5 (type -> class_type .)
    RBRACE          reduce using rule 5 (type -> class_type .)


state 7

    (6) type -> value_type .

    ID              reduce using rule 6 (type -> value_type .)
    RPAREN          reduce using rule 6 (type -> value_type .)
    LPAREN          reduce using rule 6 (type -> value_type .)
    LT              reduce using rule 6 (type -> value_type .)
    GT              reduce using rule 6 (type -> value_type .)
    LEQ             reduce using rule 6 (type -> value_type .)
    GEQ             reduce using rule 6 (type -> value_type .)
    IS              reduce using rule 6 (type -> value_type .)
    EQEQUAL         reduce using rule 6 (type -> value_type .)
    NOTEQUAL        reduce using rule 6 (type -> value_type .)
    AMPER           reduce using rule 6 (type -> value_type .)
    CIRCUMFLEX      reduce using rule 6 (type -> value_type .)
    PIPE            reduce using rule 6 (type -> value_type .)
    AMPERAMPER      reduce using rule 6 (type -> value_type .)
    HOOK            reduce using rule 6 (type -> value_type .)
    PIPEPIPE        reduce using rule 6 (type -> value_type .)
    SEMI            reduce using rule 6 (type -> value_type .)
    COMMA           reduce using rule 6 (type -> value_type .)
    RSB             reduce using rule 6 (type -> value_type .)
    COLON           reduce using rule 6 (type -> value_type .)
    RBRACE          reduce using rule 6 (type -> value_type .)


state 8

    (7) class_type -> OBJECT .

    ID              reduce using rule 7 (class_type -> OBJECT .)
    RPAREN          reduce using rule 7 (class_type -> OBJECT .)
    LPAREN          reduce using rule 7 (class_type -> OBJECT .)
    LT              reduce using rule 7 (class_type -> OBJECT .)
    GT              reduce using rule 7 (class_type -> OBJECT .)
    LEQ             reduce using rule 7 (class_type -> OBJECT .)
    GEQ             reduce using rule 7 (class_type -> OBJECT .)
    IS              reduce using rule 7 (class_type -> OBJECT .)
    EQEQUAL         reduce using rule 7 (class_type -> OBJECT .)
    NOTEQUAL        reduce using rule 7 (class_type -> OBJECT .)
    AMPER           reduce using rule 7 (class_type -> OBJECT .)
    CIRCUMFLEX      reduce using rule 7 (class_type -> OBJECT .)
    PIPE            reduce using rule 7 (class_type -> OBJECT .)
    AMPERAMPER      reduce using rule 7 (class_type -> OBJECT .)
    HOOK            reduce using rule 7 (class_type -> OBJECT .)
    PIPEPIPE        reduce using rule 7 (class_type -> OBJECT .)
    SEMI            reduce using rule 7 (class_type -> OBJECT .)
    COMMA           reduce using rule 7 (class_type -> OBJECT .)
    RSB             reduce using rule 7 (class_type -> OBJECT .)
    COLON           reduce using rule 7 (class_type -> OBJECT .)
    RBRACE          reduce using rule 7 (class_type -> OBJECT .)


state 9

    (8) class_type -> STRING .

    ID              reduce using rule 8 (class_type -> STRING .)
    RPAREN          reduce using rule 8 (class_type -> STRING .)
    LPAREN          reduce using rule 8 (class_type -> STRING .)
    LT              reduce using rule 8 (class_type -> STRING .)
    GT              reduce using rule 8 (class_type -> STRING .)
    LEQ             reduce using rule 8 (class_type -> STRING .)
    GEQ             reduce using rule 8 (class_type -> STRING .)
    IS              reduce using rule 8 (class_type -> STRING .)
    EQEQUAL         reduce using rule 8 (class_type -> STRING .)
    NOTEQUAL        reduce using rule 8 (class_type -> STRING .)
    AMPER           reduce using rule 8 (class_type -> STRING .)
    CIRCUMFLEX      reduce using rule 8 (class_type -> STRING .)
    PIPE            reduce using rule 8 (class_type -> STRING .)
    AMPERAMPER      reduce using rule 8 (class_type -> STRING .)
    HOOK            reduce using rule 8 (class_type -> STRING .)
    PIPEPIPE        reduce using rule 8 (class_type -> STRING .)
    SEMI            reduce using rule 8 (class_type -> STRING .)
    COMMA           reduce using rule 8 (class_type -> STRING .)
    RSB             reduce using rule 8 (class_type -> STRING .)
    COLON           reduce using rule 8 (class_type -> STRING .)
    RBRACE          reduce using rule 8 (class_type -> STRING .)


state 10

    (9) class_type -> type_name .
    (4) type_name -> type_name . DOT ID

    ID              reduce using rule 9 (class_type -> type_name .)
    RPAREN          reduce using rule 9 (class_type -> type_name .)
    LPAREN          reduce using rule 9 (class_type -> type_name .)
    LT              reduce using rule 9 (class_type -> type_name .)
    GT              reduce using rule 9 (class_type -> type_name .)
    LEQ             reduce using rule 9 (class_type -> type_name .)
    GEQ             reduce using rule 9 (class_type -> type_name .)
    IS              reduce using rule 9 (class_type -> type_name .)
    EQEQUAL         reduce using rule 9 (class_type -> type_name .)
    NOTEQUAL        reduce using rule 9 (class_type -> type_name .)
    AMPER           reduce using rule 9 (class_type -> type_name .)
    CIRCUMFLEX      reduce using rule 9 (class_type -> type_name .)
    PIPE            reduce using rule 9 (class_type -> type_name .)
    AMPERAMPER      reduce using rule 9 (class_type -> type_name .)
    HOOK            reduce using rule 9 (class_type -> type_name .)
    PIPEPIPE        reduce using rule 9 (class_type -> type_name .)
    SEMI            reduce using rule 9 (class_type -> type_name .)
    COMMA           reduce using rule 9 (class_type -> type_name .)
    RSB             reduce using rule 9 (class_type -> type_name .)
    COLON           reduce using rule 9 (class_type -> type_name .)
    RBRACE          reduce using rule 9 (class_type -> type_name .)
    DOT             shift and go to state 25


state 11

    (10) value_type -> integral_type .

    ID              reduce using rule 10 (value_type -> integral_type .)
    RPAREN          reduce using rule 10 (value_type -> integral_type .)
    LPAREN          reduce using rule 10 (value_type -> integral_type .)
    LT              reduce using rule 10 (value_type -> integral_type .)
    GT              reduce using rule 10 (value_type -> integral_type .)
    LEQ             reduce using rule 10 (value_type -> integral_type .)
    GEQ             reduce using rule 10 (value_type -> integral_type .)
    IS              reduce using rule 10 (value_type -> integral_type .)
    EQEQUAL         reduce using rule 10 (value_type -> integral_type .)
    NOTEQUAL        reduce using rule 10 (value_type -> integral_type .)
    AMPER           reduce using rule 10 (value_type -> integral_type .)
    CIRCUMFLEX      reduce using rule 10 (value_type -> integral_type .)
    PIPE            reduce using rule 10 (value_type -> integral_type .)
    AMPERAMPER      reduce using rule 10 (value_type -> integral_type .)
    HOOK            reduce using rule 10 (value_type -> integral_type .)
    PIPEPIPE        reduce using rule 10 (value_type -> integral_type .)
    SEMI            reduce using rule 10 (value_type -> integral_type .)
    COMMA           reduce using rule 10 (value_type -> integral_type .)
    RSB             reduce using rule 10 (value_type -> integral_type .)
    COLON           reduce using rule 10 (value_type -> integral_type .)
    RBRACE          reduce using rule 10 (value_type -> integral_type .)


state 12

    (11) value_type -> floating_point_type .

    ID              reduce using rule 11 (value_type -> floating_point_type .)
    RPAREN          reduce using rule 11 (value_type -> floating_point_type .)
    LPAREN          reduce using rule 11 (value_type -> floating_point_type .)
    LT              reduce using rule 11 (value_type -> floating_point_type .)
    GT              reduce using rule 11 (value_type -> floating_point_type .)
    LEQ             reduce using rule 11 (value_type -> floating_point_type .)
    GEQ             reduce using rule 11 (value_type -> floating_point_type .)
    IS              reduce using rule 11 (value_type -> floating_point_type .)
    EQEQUAL         reduce using rule 11 (value_type -> floating_point_type .)
    NOTEQUAL        reduce using rule 11 (value_type -> floating_point_type .)
    AMPER           reduce using rule 11 (value_type -> floating_point_type .)
    CIRCUMFLEX      reduce using rule 11 (value_type -> floating_point_type .)
    PIPE            reduce using rule 11 (value_type -> floating_point_type .)
    AMPERAMPER      reduce using rule 11 (value_type -> floating_point_type .)
    HOOK            reduce using rule 11 (value_type -> floating_point_type .)
    PIPEPIPE        reduce using rule 11 (value_type -> floating_point_type .)
    SEMI            reduce using rule 11 (value_type -> floating_point_type .)
    COMMA           reduce using rule 11 (value_type -> floating_point_type .)
    RSB             reduce using rule 11 (value_type -> floating_point_type .)
    COLON           reduce using rule 11 (value_type -> floating_point_type .)
    RBRACE          reduce using rule 11 (value_type -> floating_point_type .)


state 13

    (12) value_type -> BOOL .

    ID              reduce using rule 12 (value_type -> BOOL .)
    RPAREN          reduce using rule 12 (value_type -> BOOL .)
    LPAREN          reduce using rule 12 (value_type -> BOOL .)
    LT              reduce using rule 12 (value_type -> BOOL .)
    GT              reduce using rule 12 (value_type -> BOOL .)
    LEQ             reduce using rule 12 (value_type -> BOOL .)
    GEQ             reduce using rule 12 (value_type -> BOOL .)
    IS              reduce using rule 12 (value_type -> BOOL .)
    EQEQUAL         reduce using rule 12 (value_type -> BOOL .)
    NOTEQUAL        reduce using rule 12 (value_type -> BOOL .)
    AMPER           reduce using rule 12 (value_type -> BOOL .)
    CIRCUMFLEX      reduce using rule 12 (value_type -> BOOL .)
    PIPE            reduce using rule 12 (value_type -> BOOL .)
    AMPERAMPER      reduce using rule 12 (value_type -> BOOL .)
    HOOK            reduce using rule 12 (value_type -> BOOL .)
    PIPEPIPE        reduce using rule 12 (value_type -> BOOL .)
    SEMI            reduce using rule 12 (value_type -> BOOL .)
    COMMA           reduce using rule 12 (value_type -> BOOL .)
    RSB             reduce using rule 12 (value_type -> BOOL .)
    COLON           reduce using rule 12 (value_type -> BOOL .)
    RBRACE          reduce using rule 12 (value_type -> BOOL .)


state 14

    (13) value_type -> VOID .

    ID              reduce using rule 13 (value_type -> VOID .)
    RPAREN          reduce using rule 13 (value_type -> VOID .)
    LPAREN          reduce using rule 13 (value_type -> VOID .)
    LT              reduce using rule 13 (value_type -> VOID .)
    GT              reduce using rule 13 (value_type -> VOID .)
    LEQ             reduce using rule 13 (value_type -> VOID .)
    GEQ             reduce using rule 13 (value_type -> VOID .)
    IS              reduce using rule 13 (value_type -> VOID .)
    EQEQUAL         reduce using rule 13 (value_type -> VOID .)
    NOTEQUAL        reduce using rule 13 (value_type -> VOID .)
    AMPER           reduce using rule 13 (value_type -> VOID .)
    CIRCUMFLEX      reduce using rule 13 (value_type -> VOID .)
    PIPE            reduce using rule 13 (value_type -> VOID .)
    AMPERAMPER      reduce using rule 13 (value_type -> VOID .)
    HOOK            reduce using rule 13 (value_type -> VOID .)
    PIPEPIPE        reduce using rule 13 (value_type -> VOID .)
    SEMI            reduce using rule 13 (value_type -> VOID .)
    COMMA           reduce using rule 13 (value_type -> VOID .)
    RSB             reduce using rule 13 (value_type -> VOID .)
    COLON           reduce using rule 13 (value_type -> VOID .)
    RBRACE          reduce using rule 13 (value_type -> VOID .)


state 15

    (14) integral_type -> INT .

    ID              reduce using rule 14 (integral_type -> INT .)
    RPAREN          reduce using rule 14 (integral_type -> INT .)
    LPAREN          reduce using rule 14 (integral_type -> INT .)
    LT              reduce using rule 14 (integral_type -> INT .)
    GT              reduce using rule 14 (integral_type -> INT .)
    LEQ             reduce using rule 14 (integral_type -> INT .)
    GEQ             reduce using rule 14 (integral_type -> INT .)
    IS              reduce using rule 14 (integral_type -> INT .)
    EQEQUAL         reduce using rule 14 (integral_type -> INT .)
    NOTEQUAL        reduce using rule 14 (integral_type -> INT .)
    AMPER           reduce using rule 14 (integral_type -> INT .)
    CIRCUMFLEX      reduce using rule 14 (integral_type -> INT .)
    PIPE            reduce using rule 14 (integral_type -> INT .)
    AMPERAMPER      reduce using rule 14 (integral_type -> INT .)
    HOOK            reduce using rule 14 (integral_type -> INT .)
    PIPEPIPE        reduce using rule 14 (integral_type -> INT .)
    SEMI            reduce using rule 14 (integral_type -> INT .)
    COMMA           reduce using rule 14 (integral_type -> INT .)
    RSB             reduce using rule 14 (integral_type -> INT .)
    COLON           reduce using rule 14 (integral_type -> INT .)
    RBRACE          reduce using rule 14 (integral_type -> INT .)


state 16

    (15) integral_type -> LONG .

    ID              reduce using rule 15 (integral_type -> LONG .)
    RPAREN          reduce using rule 15 (integral_type -> LONG .)
    LPAREN          reduce using rule 15 (integral_type -> LONG .)
    LT              reduce using rule 15 (integral_type -> LONG .)
    GT              reduce using rule 15 (integral_type -> LONG .)
    LEQ             reduce using rule 15 (integral_type -> LONG .)
    GEQ             reduce using rule 15 (integral_type -> LONG .)
    IS              reduce using rule 15 (integral_type -> LONG .)
    EQEQUAL         reduce using rule 15 (integral_type -> LONG .)
    NOTEQUAL        reduce using rule 15 (integral_type -> LONG .)
    AMPER           reduce using rule 15 (integral_type -> LONG .)
    CIRCUMFLEX      reduce using rule 15 (integral_type -> LONG .)
    PIPE            reduce using rule 15 (integral_type -> LONG .)
    AMPERAMPER      reduce using rule 15 (integral_type -> LONG .)
    HOOK            reduce using rule 15 (integral_type -> LONG .)
    PIPEPIPE        reduce using rule 15 (integral_type -> LONG .)
    SEMI            reduce using rule 15 (integral_type -> LONG .)
    COMMA           reduce using rule 15 (integral_type -> LONG .)
    RSB             reduce using rule 15 (integral_type -> LONG .)
    COLON           reduce using rule 15 (integral_type -> LONG .)
    RBRACE          reduce using rule 15 (integral_type -> LONG .)


state 17

    (16) integral_type -> CHAR .

    ID              reduce using rule 16 (integral_type -> CHAR .)
    RPAREN          reduce using rule 16 (integral_type -> CHAR .)
    LPAREN          reduce using rule 16 (integral_type -> CHAR .)
    LT              reduce using rule 16 (integral_type -> CHAR .)
    GT              reduce using rule 16 (integral_type -> CHAR .)
    LEQ             reduce using rule 16 (integral_type -> CHAR .)
    GEQ             reduce using rule 16 (integral_type -> CHAR .)
    IS              reduce using rule 16 (integral_type -> CHAR .)
    EQEQUAL         reduce using rule 16 (integral_type -> CHAR .)
    NOTEQUAL        reduce using rule 16 (integral_type -> CHAR .)
    AMPER           reduce using rule 16 (integral_type -> CHAR .)
    CIRCUMFLEX      reduce using rule 16 (integral_type -> CHAR .)
    PIPE            reduce using rule 16 (integral_type -> CHAR .)
    AMPERAMPER      reduce using rule 16 (integral_type -> CHAR .)
    HOOK            reduce using rule 16 (integral_type -> CHAR .)
    PIPEPIPE        reduce using rule 16 (integral_type -> CHAR .)
    SEMI            reduce using rule 16 (integral_type -> CHAR .)
    COMMA           reduce using rule 16 (integral_type -> CHAR .)
    RSB             reduce using rule 16 (integral_type -> CHAR .)
    COLON           reduce using rule 16 (integral_type -> CHAR .)
    RBRACE          reduce using rule 16 (integral_type -> CHAR .)


state 18

    (17) floating_point_type -> FLOAT .

    ID              reduce using rule 17 (floating_point_type -> FLOAT .)
    RPAREN          reduce using rule 17 (floating_point_type -> FLOAT .)
    LPAREN          reduce using rule 17 (floating_point_type -> FLOAT .)
    LT              reduce using rule 17 (floating_point_type -> FLOAT .)
    GT              reduce using rule 17 (floating_point_type -> FLOAT .)
    LEQ             reduce using rule 17 (floating_point_type -> FLOAT .)
    GEQ             reduce using rule 17 (floating_point_type -> FLOAT .)
    IS              reduce using rule 17 (floating_point_type -> FLOAT .)
    EQEQUAL         reduce using rule 17 (floating_point_type -> FLOAT .)
    NOTEQUAL        reduce using rule 17 (floating_point_type -> FLOAT .)
    AMPER           reduce using rule 17 (floating_point_type -> FLOAT .)
    CIRCUMFLEX      reduce using rule 17 (floating_point_type -> FLOAT .)
    PIPE            reduce using rule 17 (floating_point_type -> FLOAT .)
    AMPERAMPER      reduce using rule 17 (floating_point_type -> FLOAT .)
    HOOK            reduce using rule 17 (floating_point_type -> FLOAT .)
    PIPEPIPE        reduce using rule 17 (floating_point_type -> FLOAT .)
    SEMI            reduce using rule 17 (floating_point_type -> FLOAT .)
    COMMA           reduce using rule 17 (floating_point_type -> FLOAT .)
    RSB             reduce using rule 17 (floating_point_type -> FLOAT .)
    COLON           reduce using rule 17 (floating_point_type -> FLOAT .)
    RBRACE          reduce using rule 17 (floating_point_type -> FLOAT .)


state 19

    (18) floating_point_type -> DOUBLE .

    ID              reduce using rule 18 (floating_point_type -> DOUBLE .)
    RPAREN          reduce using rule 18 (floating_point_type -> DOUBLE .)
    LPAREN          reduce using rule 18 (floating_point_type -> DOUBLE .)
    LT              reduce using rule 18 (floating_point_type -> DOUBLE .)
    GT              reduce using rule 18 (floating_point_type -> DOUBLE .)
    LEQ             reduce using rule 18 (floating_point_type -> DOUBLE .)
    GEQ             reduce using rule 18 (floating_point_type -> DOUBLE .)
    IS              reduce using rule 18 (floating_point_type -> DOUBLE .)
    EQEQUAL         reduce using rule 18 (floating_point_type -> DOUBLE .)
    NOTEQUAL        reduce using rule 18 (floating_point_type -> DOUBLE .)
    AMPER           reduce using rule 18 (floating_point_type -> DOUBLE .)
    CIRCUMFLEX      reduce using rule 18 (floating_point_type -> DOUBLE .)
    PIPE            reduce using rule 18 (floating_point_type -> DOUBLE .)
    AMPERAMPER      reduce using rule 18 (floating_point_type -> DOUBLE .)
    HOOK            reduce using rule 18 (floating_point_type -> DOUBLE .)
    PIPEPIPE        reduce using rule 18 (floating_point_type -> DOUBLE .)
    SEMI            reduce using rule 18 (floating_point_type -> DOUBLE .)
    COMMA           reduce using rule 18 (floating_point_type -> DOUBLE .)
    RSB             reduce using rule 18 (floating_point_type -> DOUBLE .)
    COLON           reduce using rule 18 (floating_point_type -> DOUBLE .)
    RBRACE          reduce using rule 18 (floating_point_type -> DOUBLE .)


state 20

    (19) floating_point_type -> DECIMAL .

    ID              reduce using rule 19 (floating_point_type -> DECIMAL .)
    RPAREN          reduce using rule 19 (floating_point_type -> DECIMAL .)
    LPAREN          reduce using rule 19 (floating_point_type -> DECIMAL .)
    LT              reduce using rule 19 (floating_point_type -> DECIMAL .)
    GT              reduce using rule 19 (floating_point_type -> DECIMAL .)
    LEQ             reduce using rule 19 (floating_point_type -> DECIMAL .)
    GEQ             reduce using rule 19 (floating_point_type -> DECIMAL .)
    IS              reduce using rule 19 (floating_point_type -> DECIMAL .)
    EQEQUAL         reduce using rule 19 (floating_point_type -> DECIMAL .)
    NOTEQUAL        reduce using rule 19 (floating_point_type -> DECIMAL .)
    AMPER           reduce using rule 19 (floating_point_type -> DECIMAL .)
    CIRCUMFLEX      reduce using rule 19 (floating_point_type -> DECIMAL .)
    PIPE            reduce using rule 19 (floating_point_type -> DECIMAL .)
    AMPERAMPER      reduce using rule 19 (floating_point_type -> DECIMAL .)
    HOOK            reduce using rule 19 (floating_point_type -> DECIMAL .)
    PIPEPIPE        reduce using rule 19 (floating_point_type -> DECIMAL .)
    SEMI            reduce using rule 19 (floating_point_type -> DECIMAL .)
    COMMA           reduce using rule 19 (floating_point_type -> DECIMAL .)
    RSB             reduce using rule 19 (floating_point_type -> DECIMAL .)
    COLON           reduce using rule 19 (floating_point_type -> DECIMAL .)
    RBRACE          reduce using rule 19 (floating_point_type -> DECIMAL .)


state 21

    (2) program -> func_declaration program .

    $end            reduce using rule 2 (program -> func_declaration program .)


state 22

    (20) func_declaration -> signature block .

    OBJECT          reduce using rule 20 (func_declaration -> signature block .)
    STRING          reduce using rule 20 (func_declaration -> signature block .)
    BOOL            reduce using rule 20 (func_declaration -> signature block .)
    VOID            reduce using rule 20 (func_declaration -> signature block .)
    ID              reduce using rule 20 (func_declaration -> signature block .)
    INT             reduce using rule 20 (func_declaration -> signature block .)
    LONG            reduce using rule 20 (func_declaration -> signature block .)
    CHAR            reduce using rule 20 (func_declaration -> signature block .)
    FLOAT           reduce using rule 20 (func_declaration -> signature block .)
    DOUBLE          reduce using rule 20 (func_declaration -> signature block .)
    DECIMAL         reduce using rule 20 (func_declaration -> signature block .)
    $end            reduce using rule 20 (func_declaration -> signature block .)


state 23

    (46) block -> LBRACE . statement_list RBRACE
    (47) block -> LBRACE . RBRACE
    (25) statement_list -> . statement
    (26) statement_list -> . statement statement_list
    (27) statement -> . declaration_statement
    (28) statement -> . embedded_statement
    (29) declaration_statement -> . const_declaration SEMI
    (30) declaration_statement -> . var_declaration SEMI
    (40) embedded_statement -> . block
    (41) embedded_statement -> . empty_statement
    (42) embedded_statement -> . exp_statement
    (43) embedded_statement -> . selection_statement
    (44) embedded_statement -> . iteration_statement
    (45) embedded_statement -> . jump_statement
    (31) const_declaration -> . CONST type const_declarators
    (35) var_declaration -> . type var_declarators
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE
    (48) empty_statement -> . SEMI
    (49) exp_statement -> . statement_exp SEMI
    (70) selection_statement -> . if_statement
    (71) selection_statement -> . switch_statement
    (82) iteration_statement -> . while_statement
    (83) iteration_statement -> . do_statement
    (84) iteration_statement -> . for_statement
    (85) iteration_statement -> . foreach_statement
    (103) jump_statement -> . break_statement
    (104) jump_statement -> . continue_statement
    (105) jump_statement -> . return_statement
    (5) type -> . class_type
    (6) type -> . value_type
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (72) if_statement -> . IF LPAREN exp RPAREN embedded_statement
    (73) if_statement -> . IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
    (74) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (86) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (87) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (88) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (102) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (106) break_statement -> . BREAK SEMI
    (107) continue_statement -> . CONTINUE SEMI
    (108) return_statement -> . RETURN SEMI
    (109) return_statement -> . RETURN exp SEMI
    (7) class_type -> . OBJECT
    (8) class_type -> . STRING
    (9) class_type -> . type_name
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (3) type_name -> . ID
    (4) type_name -> . type_name DOT ID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    RBRACE          shift and go to state 27
    CONST           shift and go to state 40
    LBRACE          shift and go to state 23
    SEMI            shift and go to state 32
    IF              shift and go to state 59
    SWITCH          shift and go to state 61
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    OBJECT          shift and go to state 8
    STRING          shift and go to state 9
    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    ID              shift and go to state 66
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    statement_list                 shift and go to state 26
    statement                      shift and go to state 28
    declaration_statement          shift and go to state 29
    embedded_statement             shift and go to state 30
    const_declaration              shift and go to state 31
    var_declaration                shift and go to state 33
    block                          shift and go to state 34
    empty_statement                shift and go to state 35
    exp_statement                  shift and go to state 36
    selection_statement            shift and go to state 37
    iteration_statement            shift and go to state 38
    jump_statement                 shift and go to state 39
    type                           shift and go to state 41
    statement_exp                  shift and go to state 42
    if_statement                   shift and go to state 43
    switch_statement               shift and go to state 44
    while_statement                shift and go to state 45
    do_statement                   shift and go to state 46
    for_statement                  shift and go to state 47
    foreach_statement              shift and go to state 48
    break_statement                shift and go to state 49
    continue_statement             shift and go to state 50
    return_statement               shift and go to state 51
    class_type                     shift and go to state 6
    value_type                     shift and go to state 7
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    type_name                      shift and go to state 10
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 24

    (21) signature -> type ID . LPAREN param_list RPAREN
    (22) signature -> type ID . LPAREN RPAREN

    LPAREN          shift and go to state 97


state 25

    (4) type_name -> type_name DOT . ID

    ID              shift and go to state 98


state 26

    (46) block -> LBRACE statement_list . RBRACE

    RBRACE          shift and go to state 99


state 27

    (47) block -> LBRACE RBRACE .

    OBJECT          reduce using rule 47 (block -> LBRACE RBRACE .)
    STRING          reduce using rule 47 (block -> LBRACE RBRACE .)
    BOOL            reduce using rule 47 (block -> LBRACE RBRACE .)
    VOID            reduce using rule 47 (block -> LBRACE RBRACE .)
    ID              reduce using rule 47 (block -> LBRACE RBRACE .)
    INT             reduce using rule 47 (block -> LBRACE RBRACE .)
    LONG            reduce using rule 47 (block -> LBRACE RBRACE .)
    CHAR            reduce using rule 47 (block -> LBRACE RBRACE .)
    FLOAT           reduce using rule 47 (block -> LBRACE RBRACE .)
    DOUBLE          reduce using rule 47 (block -> LBRACE RBRACE .)
    DECIMAL         reduce using rule 47 (block -> LBRACE RBRACE .)
    $end            reduce using rule 47 (block -> LBRACE RBRACE .)
    CONST           reduce using rule 47 (block -> LBRACE RBRACE .)
    LBRACE          reduce using rule 47 (block -> LBRACE RBRACE .)
    SEMI            reduce using rule 47 (block -> LBRACE RBRACE .)
    IF              reduce using rule 47 (block -> LBRACE RBRACE .)
    SWITCH          reduce using rule 47 (block -> LBRACE RBRACE .)
    WHILE           reduce using rule 47 (block -> LBRACE RBRACE .)
    DO              reduce using rule 47 (block -> LBRACE RBRACE .)
    FOR             reduce using rule 47 (block -> LBRACE RBRACE .)
    FOREACH         reduce using rule 47 (block -> LBRACE RBRACE .)
    BREAK           reduce using rule 47 (block -> LBRACE RBRACE .)
    CONTINUE        reduce using rule 47 (block -> LBRACE RBRACE .)
    RETURN          reduce using rule 47 (block -> LBRACE RBRACE .)
    NEW             reduce using rule 47 (block -> LBRACE RBRACE .)
    PLUSPLUS        reduce using rule 47 (block -> LBRACE RBRACE .)
    MINUSMINUS      reduce using rule 47 (block -> LBRACE RBRACE .)
    TRUE            reduce using rule 47 (block -> LBRACE RBRACE .)
    FALSE           reduce using rule 47 (block -> LBRACE RBRACE .)
    NULL            reduce using rule 47 (block -> LBRACE RBRACE .)
    INTNUM          reduce using rule 47 (block -> LBRACE RBRACE .)
    HEXADECIMALNUM  reduce using rule 47 (block -> LBRACE RBRACE .)
    BINARYNUM       reduce using rule 47 (block -> LBRACE RBRACE .)
    FLOATNUM        reduce using rule 47 (block -> LBRACE RBRACE .)
    DOUBLENUM       reduce using rule 47 (block -> LBRACE RBRACE .)
    DECIMALNUM      reduce using rule 47 (block -> LBRACE RBRACE .)
    CHARLITERAL     reduce using rule 47 (block -> LBRACE RBRACE .)
    STRINGLITERAL   reduce using rule 47 (block -> LBRACE RBRACE .)
    THIS            reduce using rule 47 (block -> LBRACE RBRACE .)
    LPAREN          reduce using rule 47 (block -> LBRACE RBRACE .)
    TYPEOF          reduce using rule 47 (block -> LBRACE RBRACE .)
    SIZEOF          reduce using rule 47 (block -> LBRACE RBRACE .)
    DEFAULT         reduce using rule 47 (block -> LBRACE RBRACE .)
    RBRACE          reduce using rule 47 (block -> LBRACE RBRACE .)
    CASE            reduce using rule 47 (block -> LBRACE RBRACE .)
    ELSE            reduce using rule 47 (block -> LBRACE RBRACE .)


state 28

    (25) statement_list -> statement .
    (26) statement_list -> statement . statement_list
    (25) statement_list -> . statement
    (26) statement_list -> . statement statement_list
    (27) statement -> . declaration_statement
    (28) statement -> . embedded_statement
    (29) declaration_statement -> . const_declaration SEMI
    (30) declaration_statement -> . var_declaration SEMI
    (40) embedded_statement -> . block
    (41) embedded_statement -> . empty_statement
    (42) embedded_statement -> . exp_statement
    (43) embedded_statement -> . selection_statement
    (44) embedded_statement -> . iteration_statement
    (45) embedded_statement -> . jump_statement
    (31) const_declaration -> . CONST type const_declarators
    (35) var_declaration -> . type var_declarators
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE
    (48) empty_statement -> . SEMI
    (49) exp_statement -> . statement_exp SEMI
    (70) selection_statement -> . if_statement
    (71) selection_statement -> . switch_statement
    (82) iteration_statement -> . while_statement
    (83) iteration_statement -> . do_statement
    (84) iteration_statement -> . for_statement
    (85) iteration_statement -> . foreach_statement
    (103) jump_statement -> . break_statement
    (104) jump_statement -> . continue_statement
    (105) jump_statement -> . return_statement
    (5) type -> . class_type
    (6) type -> . value_type
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (72) if_statement -> . IF LPAREN exp RPAREN embedded_statement
    (73) if_statement -> . IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
    (74) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (86) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (87) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (88) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (102) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (106) break_statement -> . BREAK SEMI
    (107) continue_statement -> . CONTINUE SEMI
    (108) return_statement -> . RETURN SEMI
    (109) return_statement -> . RETURN exp SEMI
    (7) class_type -> . OBJECT
    (8) class_type -> . STRING
    (9) class_type -> . type_name
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (3) type_name -> . ID
    (4) type_name -> . type_name DOT ID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

  ! shift/reduce conflict for DEFAULT resolved as shift
    RBRACE          reduce using rule 25 (statement_list -> statement .)
    CASE            reduce using rule 25 (statement_list -> statement .)
    CONST           shift and go to state 40
    LBRACE          shift and go to state 23
    SEMI            shift and go to state 32
    IF              shift and go to state 59
    SWITCH          shift and go to state 61
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    OBJECT          shift and go to state 8
    STRING          shift and go to state 9
    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    ID              shift and go to state 66
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

  ! DEFAULT         [ reduce using rule 25 (statement_list -> statement .) ]

    statement                      shift and go to state 28
    statement_list                 shift and go to state 100
    declaration_statement          shift and go to state 29
    embedded_statement             shift and go to state 30
    const_declaration              shift and go to state 31
    var_declaration                shift and go to state 33
    block                          shift and go to state 34
    empty_statement                shift and go to state 35
    exp_statement                  shift and go to state 36
    selection_statement            shift and go to state 37
    iteration_statement            shift and go to state 38
    jump_statement                 shift and go to state 39
    type                           shift and go to state 41
    statement_exp                  shift and go to state 42
    if_statement                   shift and go to state 43
    switch_statement               shift and go to state 44
    while_statement                shift and go to state 45
    do_statement                   shift and go to state 46
    for_statement                  shift and go to state 47
    foreach_statement              shift and go to state 48
    break_statement                shift and go to state 49
    continue_statement             shift and go to state 50
    return_statement               shift and go to state 51
    class_type                     shift and go to state 6
    value_type                     shift and go to state 7
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    type_name                      shift and go to state 10
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 29

    (27) statement -> declaration_statement .

    CONST           reduce using rule 27 (statement -> declaration_statement .)
    LBRACE          reduce using rule 27 (statement -> declaration_statement .)
    SEMI            reduce using rule 27 (statement -> declaration_statement .)
    IF              reduce using rule 27 (statement -> declaration_statement .)
    SWITCH          reduce using rule 27 (statement -> declaration_statement .)
    WHILE           reduce using rule 27 (statement -> declaration_statement .)
    DO              reduce using rule 27 (statement -> declaration_statement .)
    FOR             reduce using rule 27 (statement -> declaration_statement .)
    FOREACH         reduce using rule 27 (statement -> declaration_statement .)
    BREAK           reduce using rule 27 (statement -> declaration_statement .)
    CONTINUE        reduce using rule 27 (statement -> declaration_statement .)
    RETURN          reduce using rule 27 (statement -> declaration_statement .)
    OBJECT          reduce using rule 27 (statement -> declaration_statement .)
    STRING          reduce using rule 27 (statement -> declaration_statement .)
    BOOL            reduce using rule 27 (statement -> declaration_statement .)
    VOID            reduce using rule 27 (statement -> declaration_statement .)
    NEW             reduce using rule 27 (statement -> declaration_statement .)
    PLUSPLUS        reduce using rule 27 (statement -> declaration_statement .)
    MINUSMINUS      reduce using rule 27 (statement -> declaration_statement .)
    ID              reduce using rule 27 (statement -> declaration_statement .)
    INT             reduce using rule 27 (statement -> declaration_statement .)
    LONG            reduce using rule 27 (statement -> declaration_statement .)
    CHAR            reduce using rule 27 (statement -> declaration_statement .)
    FLOAT           reduce using rule 27 (statement -> declaration_statement .)
    DOUBLE          reduce using rule 27 (statement -> declaration_statement .)
    DECIMAL         reduce using rule 27 (statement -> declaration_statement .)
    TRUE            reduce using rule 27 (statement -> declaration_statement .)
    FALSE           reduce using rule 27 (statement -> declaration_statement .)
    NULL            reduce using rule 27 (statement -> declaration_statement .)
    INTNUM          reduce using rule 27 (statement -> declaration_statement .)
    HEXADECIMALNUM  reduce using rule 27 (statement -> declaration_statement .)
    BINARYNUM       reduce using rule 27 (statement -> declaration_statement .)
    FLOATNUM        reduce using rule 27 (statement -> declaration_statement .)
    DOUBLENUM       reduce using rule 27 (statement -> declaration_statement .)
    DECIMALNUM      reduce using rule 27 (statement -> declaration_statement .)
    CHARLITERAL     reduce using rule 27 (statement -> declaration_statement .)
    STRINGLITERAL   reduce using rule 27 (statement -> declaration_statement .)
    THIS            reduce using rule 27 (statement -> declaration_statement .)
    LPAREN          reduce using rule 27 (statement -> declaration_statement .)
    TYPEOF          reduce using rule 27 (statement -> declaration_statement .)
    SIZEOF          reduce using rule 27 (statement -> declaration_statement .)
    DEFAULT         reduce using rule 27 (statement -> declaration_statement .)
    RBRACE          reduce using rule 27 (statement -> declaration_statement .)
    CASE            reduce using rule 27 (statement -> declaration_statement .)


state 30

    (28) statement -> embedded_statement .

    CONST           reduce using rule 28 (statement -> embedded_statement .)
    LBRACE          reduce using rule 28 (statement -> embedded_statement .)
    SEMI            reduce using rule 28 (statement -> embedded_statement .)
    IF              reduce using rule 28 (statement -> embedded_statement .)
    SWITCH          reduce using rule 28 (statement -> embedded_statement .)
    WHILE           reduce using rule 28 (statement -> embedded_statement .)
    DO              reduce using rule 28 (statement -> embedded_statement .)
    FOR             reduce using rule 28 (statement -> embedded_statement .)
    FOREACH         reduce using rule 28 (statement -> embedded_statement .)
    BREAK           reduce using rule 28 (statement -> embedded_statement .)
    CONTINUE        reduce using rule 28 (statement -> embedded_statement .)
    RETURN          reduce using rule 28 (statement -> embedded_statement .)
    OBJECT          reduce using rule 28 (statement -> embedded_statement .)
    STRING          reduce using rule 28 (statement -> embedded_statement .)
    BOOL            reduce using rule 28 (statement -> embedded_statement .)
    VOID            reduce using rule 28 (statement -> embedded_statement .)
    NEW             reduce using rule 28 (statement -> embedded_statement .)
    PLUSPLUS        reduce using rule 28 (statement -> embedded_statement .)
    MINUSMINUS      reduce using rule 28 (statement -> embedded_statement .)
    ID              reduce using rule 28 (statement -> embedded_statement .)
    INT             reduce using rule 28 (statement -> embedded_statement .)
    LONG            reduce using rule 28 (statement -> embedded_statement .)
    CHAR            reduce using rule 28 (statement -> embedded_statement .)
    FLOAT           reduce using rule 28 (statement -> embedded_statement .)
    DOUBLE          reduce using rule 28 (statement -> embedded_statement .)
    DECIMAL         reduce using rule 28 (statement -> embedded_statement .)
    TRUE            reduce using rule 28 (statement -> embedded_statement .)
    FALSE           reduce using rule 28 (statement -> embedded_statement .)
    NULL            reduce using rule 28 (statement -> embedded_statement .)
    INTNUM          reduce using rule 28 (statement -> embedded_statement .)
    HEXADECIMALNUM  reduce using rule 28 (statement -> embedded_statement .)
    BINARYNUM       reduce using rule 28 (statement -> embedded_statement .)
    FLOATNUM        reduce using rule 28 (statement -> embedded_statement .)
    DOUBLENUM       reduce using rule 28 (statement -> embedded_statement .)
    DECIMALNUM      reduce using rule 28 (statement -> embedded_statement .)
    CHARLITERAL     reduce using rule 28 (statement -> embedded_statement .)
    STRINGLITERAL   reduce using rule 28 (statement -> embedded_statement .)
    THIS            reduce using rule 28 (statement -> embedded_statement .)
    LPAREN          reduce using rule 28 (statement -> embedded_statement .)
    TYPEOF          reduce using rule 28 (statement -> embedded_statement .)
    SIZEOF          reduce using rule 28 (statement -> embedded_statement .)
    DEFAULT         reduce using rule 28 (statement -> embedded_statement .)
    RBRACE          reduce using rule 28 (statement -> embedded_statement .)
    CASE            reduce using rule 28 (statement -> embedded_statement .)


state 31

    (29) declaration_statement -> const_declaration . SEMI

    SEMI            shift and go to state 101


state 32

    (48) empty_statement -> SEMI .

    CONST           reduce using rule 48 (empty_statement -> SEMI .)
    LBRACE          reduce using rule 48 (empty_statement -> SEMI .)
    SEMI            reduce using rule 48 (empty_statement -> SEMI .)
    IF              reduce using rule 48 (empty_statement -> SEMI .)
    SWITCH          reduce using rule 48 (empty_statement -> SEMI .)
    WHILE           reduce using rule 48 (empty_statement -> SEMI .)
    DO              reduce using rule 48 (empty_statement -> SEMI .)
    FOR             reduce using rule 48 (empty_statement -> SEMI .)
    FOREACH         reduce using rule 48 (empty_statement -> SEMI .)
    BREAK           reduce using rule 48 (empty_statement -> SEMI .)
    CONTINUE        reduce using rule 48 (empty_statement -> SEMI .)
    RETURN          reduce using rule 48 (empty_statement -> SEMI .)
    OBJECT          reduce using rule 48 (empty_statement -> SEMI .)
    STRING          reduce using rule 48 (empty_statement -> SEMI .)
    BOOL            reduce using rule 48 (empty_statement -> SEMI .)
    VOID            reduce using rule 48 (empty_statement -> SEMI .)
    NEW             reduce using rule 48 (empty_statement -> SEMI .)
    PLUSPLUS        reduce using rule 48 (empty_statement -> SEMI .)
    MINUSMINUS      reduce using rule 48 (empty_statement -> SEMI .)
    ID              reduce using rule 48 (empty_statement -> SEMI .)
    INT             reduce using rule 48 (empty_statement -> SEMI .)
    LONG            reduce using rule 48 (empty_statement -> SEMI .)
    CHAR            reduce using rule 48 (empty_statement -> SEMI .)
    FLOAT           reduce using rule 48 (empty_statement -> SEMI .)
    DOUBLE          reduce using rule 48 (empty_statement -> SEMI .)
    DECIMAL         reduce using rule 48 (empty_statement -> SEMI .)
    TRUE            reduce using rule 48 (empty_statement -> SEMI .)
    FALSE           reduce using rule 48 (empty_statement -> SEMI .)
    NULL            reduce using rule 48 (empty_statement -> SEMI .)
    INTNUM          reduce using rule 48 (empty_statement -> SEMI .)
    HEXADECIMALNUM  reduce using rule 48 (empty_statement -> SEMI .)
    BINARYNUM       reduce using rule 48 (empty_statement -> SEMI .)
    FLOATNUM        reduce using rule 48 (empty_statement -> SEMI .)
    DOUBLENUM       reduce using rule 48 (empty_statement -> SEMI .)
    DECIMALNUM      reduce using rule 48 (empty_statement -> SEMI .)
    CHARLITERAL     reduce using rule 48 (empty_statement -> SEMI .)
    STRINGLITERAL   reduce using rule 48 (empty_statement -> SEMI .)
    THIS            reduce using rule 48 (empty_statement -> SEMI .)
    LPAREN          reduce using rule 48 (empty_statement -> SEMI .)
    TYPEOF          reduce using rule 48 (empty_statement -> SEMI .)
    SIZEOF          reduce using rule 48 (empty_statement -> SEMI .)
    DEFAULT         reduce using rule 48 (empty_statement -> SEMI .)
    RBRACE          reduce using rule 48 (empty_statement -> SEMI .)
    CASE            reduce using rule 48 (empty_statement -> SEMI .)
    ELSE            reduce using rule 48 (empty_statement -> SEMI .)


state 33

    (30) declaration_statement -> var_declaration . SEMI

    SEMI            shift and go to state 102


state 34

    (40) embedded_statement -> block .

    CONST           reduce using rule 40 (embedded_statement -> block .)
    LBRACE          reduce using rule 40 (embedded_statement -> block .)
    SEMI            reduce using rule 40 (embedded_statement -> block .)
    IF              reduce using rule 40 (embedded_statement -> block .)
    SWITCH          reduce using rule 40 (embedded_statement -> block .)
    WHILE           reduce using rule 40 (embedded_statement -> block .)
    DO              reduce using rule 40 (embedded_statement -> block .)
    FOR             reduce using rule 40 (embedded_statement -> block .)
    FOREACH         reduce using rule 40 (embedded_statement -> block .)
    BREAK           reduce using rule 40 (embedded_statement -> block .)
    CONTINUE        reduce using rule 40 (embedded_statement -> block .)
    RETURN          reduce using rule 40 (embedded_statement -> block .)
    OBJECT          reduce using rule 40 (embedded_statement -> block .)
    STRING          reduce using rule 40 (embedded_statement -> block .)
    BOOL            reduce using rule 40 (embedded_statement -> block .)
    VOID            reduce using rule 40 (embedded_statement -> block .)
    NEW             reduce using rule 40 (embedded_statement -> block .)
    PLUSPLUS        reduce using rule 40 (embedded_statement -> block .)
    MINUSMINUS      reduce using rule 40 (embedded_statement -> block .)
    ID              reduce using rule 40 (embedded_statement -> block .)
    INT             reduce using rule 40 (embedded_statement -> block .)
    LONG            reduce using rule 40 (embedded_statement -> block .)
    CHAR            reduce using rule 40 (embedded_statement -> block .)
    FLOAT           reduce using rule 40 (embedded_statement -> block .)
    DOUBLE          reduce using rule 40 (embedded_statement -> block .)
    DECIMAL         reduce using rule 40 (embedded_statement -> block .)
    TRUE            reduce using rule 40 (embedded_statement -> block .)
    FALSE           reduce using rule 40 (embedded_statement -> block .)
    NULL            reduce using rule 40 (embedded_statement -> block .)
    INTNUM          reduce using rule 40 (embedded_statement -> block .)
    HEXADECIMALNUM  reduce using rule 40 (embedded_statement -> block .)
    BINARYNUM       reduce using rule 40 (embedded_statement -> block .)
    FLOATNUM        reduce using rule 40 (embedded_statement -> block .)
    DOUBLENUM       reduce using rule 40 (embedded_statement -> block .)
    DECIMALNUM      reduce using rule 40 (embedded_statement -> block .)
    CHARLITERAL     reduce using rule 40 (embedded_statement -> block .)
    STRINGLITERAL   reduce using rule 40 (embedded_statement -> block .)
    THIS            reduce using rule 40 (embedded_statement -> block .)
    LPAREN          reduce using rule 40 (embedded_statement -> block .)
    TYPEOF          reduce using rule 40 (embedded_statement -> block .)
    SIZEOF          reduce using rule 40 (embedded_statement -> block .)
    DEFAULT         reduce using rule 40 (embedded_statement -> block .)
    RBRACE          reduce using rule 40 (embedded_statement -> block .)
    CASE            reduce using rule 40 (embedded_statement -> block .)
    ELSE            reduce using rule 40 (embedded_statement -> block .)


state 35

    (41) embedded_statement -> empty_statement .

    CONST           reduce using rule 41 (embedded_statement -> empty_statement .)
    LBRACE          reduce using rule 41 (embedded_statement -> empty_statement .)
    SEMI            reduce using rule 41 (embedded_statement -> empty_statement .)
    IF              reduce using rule 41 (embedded_statement -> empty_statement .)
    SWITCH          reduce using rule 41 (embedded_statement -> empty_statement .)
    WHILE           reduce using rule 41 (embedded_statement -> empty_statement .)
    DO              reduce using rule 41 (embedded_statement -> empty_statement .)
    FOR             reduce using rule 41 (embedded_statement -> empty_statement .)
    FOREACH         reduce using rule 41 (embedded_statement -> empty_statement .)
    BREAK           reduce using rule 41 (embedded_statement -> empty_statement .)
    CONTINUE        reduce using rule 41 (embedded_statement -> empty_statement .)
    RETURN          reduce using rule 41 (embedded_statement -> empty_statement .)
    OBJECT          reduce using rule 41 (embedded_statement -> empty_statement .)
    STRING          reduce using rule 41 (embedded_statement -> empty_statement .)
    BOOL            reduce using rule 41 (embedded_statement -> empty_statement .)
    VOID            reduce using rule 41 (embedded_statement -> empty_statement .)
    NEW             reduce using rule 41 (embedded_statement -> empty_statement .)
    PLUSPLUS        reduce using rule 41 (embedded_statement -> empty_statement .)
    MINUSMINUS      reduce using rule 41 (embedded_statement -> empty_statement .)
    ID              reduce using rule 41 (embedded_statement -> empty_statement .)
    INT             reduce using rule 41 (embedded_statement -> empty_statement .)
    LONG            reduce using rule 41 (embedded_statement -> empty_statement .)
    CHAR            reduce using rule 41 (embedded_statement -> empty_statement .)
    FLOAT           reduce using rule 41 (embedded_statement -> empty_statement .)
    DOUBLE          reduce using rule 41 (embedded_statement -> empty_statement .)
    DECIMAL         reduce using rule 41 (embedded_statement -> empty_statement .)
    TRUE            reduce using rule 41 (embedded_statement -> empty_statement .)
    FALSE           reduce using rule 41 (embedded_statement -> empty_statement .)
    NULL            reduce using rule 41 (embedded_statement -> empty_statement .)
    INTNUM          reduce using rule 41 (embedded_statement -> empty_statement .)
    HEXADECIMALNUM  reduce using rule 41 (embedded_statement -> empty_statement .)
    BINARYNUM       reduce using rule 41 (embedded_statement -> empty_statement .)
    FLOATNUM        reduce using rule 41 (embedded_statement -> empty_statement .)
    DOUBLENUM       reduce using rule 41 (embedded_statement -> empty_statement .)
    DECIMALNUM      reduce using rule 41 (embedded_statement -> empty_statement .)
    CHARLITERAL     reduce using rule 41 (embedded_statement -> empty_statement .)
    STRINGLITERAL   reduce using rule 41 (embedded_statement -> empty_statement .)
    THIS            reduce using rule 41 (embedded_statement -> empty_statement .)
    LPAREN          reduce using rule 41 (embedded_statement -> empty_statement .)
    TYPEOF          reduce using rule 41 (embedded_statement -> empty_statement .)
    SIZEOF          reduce using rule 41 (embedded_statement -> empty_statement .)
    DEFAULT         reduce using rule 41 (embedded_statement -> empty_statement .)
    RBRACE          reduce using rule 41 (embedded_statement -> empty_statement .)
    CASE            reduce using rule 41 (embedded_statement -> empty_statement .)
    ELSE            reduce using rule 41 (embedded_statement -> empty_statement .)


state 36

    (42) embedded_statement -> exp_statement .

    CONST           reduce using rule 42 (embedded_statement -> exp_statement .)
    LBRACE          reduce using rule 42 (embedded_statement -> exp_statement .)
    SEMI            reduce using rule 42 (embedded_statement -> exp_statement .)
    IF              reduce using rule 42 (embedded_statement -> exp_statement .)
    SWITCH          reduce using rule 42 (embedded_statement -> exp_statement .)
    WHILE           reduce using rule 42 (embedded_statement -> exp_statement .)
    DO              reduce using rule 42 (embedded_statement -> exp_statement .)
    FOR             reduce using rule 42 (embedded_statement -> exp_statement .)
    FOREACH         reduce using rule 42 (embedded_statement -> exp_statement .)
    BREAK           reduce using rule 42 (embedded_statement -> exp_statement .)
    CONTINUE        reduce using rule 42 (embedded_statement -> exp_statement .)
    RETURN          reduce using rule 42 (embedded_statement -> exp_statement .)
    OBJECT          reduce using rule 42 (embedded_statement -> exp_statement .)
    STRING          reduce using rule 42 (embedded_statement -> exp_statement .)
    BOOL            reduce using rule 42 (embedded_statement -> exp_statement .)
    VOID            reduce using rule 42 (embedded_statement -> exp_statement .)
    NEW             reduce using rule 42 (embedded_statement -> exp_statement .)
    PLUSPLUS        reduce using rule 42 (embedded_statement -> exp_statement .)
    MINUSMINUS      reduce using rule 42 (embedded_statement -> exp_statement .)
    ID              reduce using rule 42 (embedded_statement -> exp_statement .)
    INT             reduce using rule 42 (embedded_statement -> exp_statement .)
    LONG            reduce using rule 42 (embedded_statement -> exp_statement .)
    CHAR            reduce using rule 42 (embedded_statement -> exp_statement .)
    FLOAT           reduce using rule 42 (embedded_statement -> exp_statement .)
    DOUBLE          reduce using rule 42 (embedded_statement -> exp_statement .)
    DECIMAL         reduce using rule 42 (embedded_statement -> exp_statement .)
    TRUE            reduce using rule 42 (embedded_statement -> exp_statement .)
    FALSE           reduce using rule 42 (embedded_statement -> exp_statement .)
    NULL            reduce using rule 42 (embedded_statement -> exp_statement .)
    INTNUM          reduce using rule 42 (embedded_statement -> exp_statement .)
    HEXADECIMALNUM  reduce using rule 42 (embedded_statement -> exp_statement .)
    BINARYNUM       reduce using rule 42 (embedded_statement -> exp_statement .)
    FLOATNUM        reduce using rule 42 (embedded_statement -> exp_statement .)
    DOUBLENUM       reduce using rule 42 (embedded_statement -> exp_statement .)
    DECIMALNUM      reduce using rule 42 (embedded_statement -> exp_statement .)
    CHARLITERAL     reduce using rule 42 (embedded_statement -> exp_statement .)
    STRINGLITERAL   reduce using rule 42 (embedded_statement -> exp_statement .)
    THIS            reduce using rule 42 (embedded_statement -> exp_statement .)
    LPAREN          reduce using rule 42 (embedded_statement -> exp_statement .)
    TYPEOF          reduce using rule 42 (embedded_statement -> exp_statement .)
    SIZEOF          reduce using rule 42 (embedded_statement -> exp_statement .)
    DEFAULT         reduce using rule 42 (embedded_statement -> exp_statement .)
    RBRACE          reduce using rule 42 (embedded_statement -> exp_statement .)
    CASE            reduce using rule 42 (embedded_statement -> exp_statement .)
    ELSE            reduce using rule 42 (embedded_statement -> exp_statement .)


state 37

    (43) embedded_statement -> selection_statement .

    CONST           reduce using rule 43 (embedded_statement -> selection_statement .)
    LBRACE          reduce using rule 43 (embedded_statement -> selection_statement .)
    SEMI            reduce using rule 43 (embedded_statement -> selection_statement .)
    IF              reduce using rule 43 (embedded_statement -> selection_statement .)
    SWITCH          reduce using rule 43 (embedded_statement -> selection_statement .)
    WHILE           reduce using rule 43 (embedded_statement -> selection_statement .)
    DO              reduce using rule 43 (embedded_statement -> selection_statement .)
    FOR             reduce using rule 43 (embedded_statement -> selection_statement .)
    FOREACH         reduce using rule 43 (embedded_statement -> selection_statement .)
    BREAK           reduce using rule 43 (embedded_statement -> selection_statement .)
    CONTINUE        reduce using rule 43 (embedded_statement -> selection_statement .)
    RETURN          reduce using rule 43 (embedded_statement -> selection_statement .)
    OBJECT          reduce using rule 43 (embedded_statement -> selection_statement .)
    STRING          reduce using rule 43 (embedded_statement -> selection_statement .)
    BOOL            reduce using rule 43 (embedded_statement -> selection_statement .)
    VOID            reduce using rule 43 (embedded_statement -> selection_statement .)
    NEW             reduce using rule 43 (embedded_statement -> selection_statement .)
    PLUSPLUS        reduce using rule 43 (embedded_statement -> selection_statement .)
    MINUSMINUS      reduce using rule 43 (embedded_statement -> selection_statement .)
    ID              reduce using rule 43 (embedded_statement -> selection_statement .)
    INT             reduce using rule 43 (embedded_statement -> selection_statement .)
    LONG            reduce using rule 43 (embedded_statement -> selection_statement .)
    CHAR            reduce using rule 43 (embedded_statement -> selection_statement .)
    FLOAT           reduce using rule 43 (embedded_statement -> selection_statement .)
    DOUBLE          reduce using rule 43 (embedded_statement -> selection_statement .)
    DECIMAL         reduce using rule 43 (embedded_statement -> selection_statement .)
    TRUE            reduce using rule 43 (embedded_statement -> selection_statement .)
    FALSE           reduce using rule 43 (embedded_statement -> selection_statement .)
    NULL            reduce using rule 43 (embedded_statement -> selection_statement .)
    INTNUM          reduce using rule 43 (embedded_statement -> selection_statement .)
    HEXADECIMALNUM  reduce using rule 43 (embedded_statement -> selection_statement .)
    BINARYNUM       reduce using rule 43 (embedded_statement -> selection_statement .)
    FLOATNUM        reduce using rule 43 (embedded_statement -> selection_statement .)
    DOUBLENUM       reduce using rule 43 (embedded_statement -> selection_statement .)
    DECIMALNUM      reduce using rule 43 (embedded_statement -> selection_statement .)
    CHARLITERAL     reduce using rule 43 (embedded_statement -> selection_statement .)
    STRINGLITERAL   reduce using rule 43 (embedded_statement -> selection_statement .)
    THIS            reduce using rule 43 (embedded_statement -> selection_statement .)
    LPAREN          reduce using rule 43 (embedded_statement -> selection_statement .)
    TYPEOF          reduce using rule 43 (embedded_statement -> selection_statement .)
    SIZEOF          reduce using rule 43 (embedded_statement -> selection_statement .)
    DEFAULT         reduce using rule 43 (embedded_statement -> selection_statement .)
    RBRACE          reduce using rule 43 (embedded_statement -> selection_statement .)
    CASE            reduce using rule 43 (embedded_statement -> selection_statement .)
    ELSE            reduce using rule 43 (embedded_statement -> selection_statement .)


state 38

    (44) embedded_statement -> iteration_statement .

    CONST           reduce using rule 44 (embedded_statement -> iteration_statement .)
    LBRACE          reduce using rule 44 (embedded_statement -> iteration_statement .)
    SEMI            reduce using rule 44 (embedded_statement -> iteration_statement .)
    IF              reduce using rule 44 (embedded_statement -> iteration_statement .)
    SWITCH          reduce using rule 44 (embedded_statement -> iteration_statement .)
    WHILE           reduce using rule 44 (embedded_statement -> iteration_statement .)
    DO              reduce using rule 44 (embedded_statement -> iteration_statement .)
    FOR             reduce using rule 44 (embedded_statement -> iteration_statement .)
    FOREACH         reduce using rule 44 (embedded_statement -> iteration_statement .)
    BREAK           reduce using rule 44 (embedded_statement -> iteration_statement .)
    CONTINUE        reduce using rule 44 (embedded_statement -> iteration_statement .)
    RETURN          reduce using rule 44 (embedded_statement -> iteration_statement .)
    OBJECT          reduce using rule 44 (embedded_statement -> iteration_statement .)
    STRING          reduce using rule 44 (embedded_statement -> iteration_statement .)
    BOOL            reduce using rule 44 (embedded_statement -> iteration_statement .)
    VOID            reduce using rule 44 (embedded_statement -> iteration_statement .)
    NEW             reduce using rule 44 (embedded_statement -> iteration_statement .)
    PLUSPLUS        reduce using rule 44 (embedded_statement -> iteration_statement .)
    MINUSMINUS      reduce using rule 44 (embedded_statement -> iteration_statement .)
    ID              reduce using rule 44 (embedded_statement -> iteration_statement .)
    INT             reduce using rule 44 (embedded_statement -> iteration_statement .)
    LONG            reduce using rule 44 (embedded_statement -> iteration_statement .)
    CHAR            reduce using rule 44 (embedded_statement -> iteration_statement .)
    FLOAT           reduce using rule 44 (embedded_statement -> iteration_statement .)
    DOUBLE          reduce using rule 44 (embedded_statement -> iteration_statement .)
    DECIMAL         reduce using rule 44 (embedded_statement -> iteration_statement .)
    TRUE            reduce using rule 44 (embedded_statement -> iteration_statement .)
    FALSE           reduce using rule 44 (embedded_statement -> iteration_statement .)
    NULL            reduce using rule 44 (embedded_statement -> iteration_statement .)
    INTNUM          reduce using rule 44 (embedded_statement -> iteration_statement .)
    HEXADECIMALNUM  reduce using rule 44 (embedded_statement -> iteration_statement .)
    BINARYNUM       reduce using rule 44 (embedded_statement -> iteration_statement .)
    FLOATNUM        reduce using rule 44 (embedded_statement -> iteration_statement .)
    DOUBLENUM       reduce using rule 44 (embedded_statement -> iteration_statement .)
    DECIMALNUM      reduce using rule 44 (embedded_statement -> iteration_statement .)
    CHARLITERAL     reduce using rule 44 (embedded_statement -> iteration_statement .)
    STRINGLITERAL   reduce using rule 44 (embedded_statement -> iteration_statement .)
    THIS            reduce using rule 44 (embedded_statement -> iteration_statement .)
    LPAREN          reduce using rule 44 (embedded_statement -> iteration_statement .)
    TYPEOF          reduce using rule 44 (embedded_statement -> iteration_statement .)
    SIZEOF          reduce using rule 44 (embedded_statement -> iteration_statement .)
    DEFAULT         reduce using rule 44 (embedded_statement -> iteration_statement .)
    RBRACE          reduce using rule 44 (embedded_statement -> iteration_statement .)
    CASE            reduce using rule 44 (embedded_statement -> iteration_statement .)
    ELSE            reduce using rule 44 (embedded_statement -> iteration_statement .)


state 39

    (45) embedded_statement -> jump_statement .

    CONST           reduce using rule 45 (embedded_statement -> jump_statement .)
    LBRACE          reduce using rule 45 (embedded_statement -> jump_statement .)
    SEMI            reduce using rule 45 (embedded_statement -> jump_statement .)
    IF              reduce using rule 45 (embedded_statement -> jump_statement .)
    SWITCH          reduce using rule 45 (embedded_statement -> jump_statement .)
    WHILE           reduce using rule 45 (embedded_statement -> jump_statement .)
    DO              reduce using rule 45 (embedded_statement -> jump_statement .)
    FOR             reduce using rule 45 (embedded_statement -> jump_statement .)
    FOREACH         reduce using rule 45 (embedded_statement -> jump_statement .)
    BREAK           reduce using rule 45 (embedded_statement -> jump_statement .)
    CONTINUE        reduce using rule 45 (embedded_statement -> jump_statement .)
    RETURN          reduce using rule 45 (embedded_statement -> jump_statement .)
    OBJECT          reduce using rule 45 (embedded_statement -> jump_statement .)
    STRING          reduce using rule 45 (embedded_statement -> jump_statement .)
    BOOL            reduce using rule 45 (embedded_statement -> jump_statement .)
    VOID            reduce using rule 45 (embedded_statement -> jump_statement .)
    NEW             reduce using rule 45 (embedded_statement -> jump_statement .)
    PLUSPLUS        reduce using rule 45 (embedded_statement -> jump_statement .)
    MINUSMINUS      reduce using rule 45 (embedded_statement -> jump_statement .)
    ID              reduce using rule 45 (embedded_statement -> jump_statement .)
    INT             reduce using rule 45 (embedded_statement -> jump_statement .)
    LONG            reduce using rule 45 (embedded_statement -> jump_statement .)
    CHAR            reduce using rule 45 (embedded_statement -> jump_statement .)
    FLOAT           reduce using rule 45 (embedded_statement -> jump_statement .)
    DOUBLE          reduce using rule 45 (embedded_statement -> jump_statement .)
    DECIMAL         reduce using rule 45 (embedded_statement -> jump_statement .)
    TRUE            reduce using rule 45 (embedded_statement -> jump_statement .)
    FALSE           reduce using rule 45 (embedded_statement -> jump_statement .)
    NULL            reduce using rule 45 (embedded_statement -> jump_statement .)
    INTNUM          reduce using rule 45 (embedded_statement -> jump_statement .)
    HEXADECIMALNUM  reduce using rule 45 (embedded_statement -> jump_statement .)
    BINARYNUM       reduce using rule 45 (embedded_statement -> jump_statement .)
    FLOATNUM        reduce using rule 45 (embedded_statement -> jump_statement .)
    DOUBLENUM       reduce using rule 45 (embedded_statement -> jump_statement .)
    DECIMALNUM      reduce using rule 45 (embedded_statement -> jump_statement .)
    CHARLITERAL     reduce using rule 45 (embedded_statement -> jump_statement .)
    STRINGLITERAL   reduce using rule 45 (embedded_statement -> jump_statement .)
    THIS            reduce using rule 45 (embedded_statement -> jump_statement .)
    LPAREN          reduce using rule 45 (embedded_statement -> jump_statement .)
    TYPEOF          reduce using rule 45 (embedded_statement -> jump_statement .)
    SIZEOF          reduce using rule 45 (embedded_statement -> jump_statement .)
    DEFAULT         reduce using rule 45 (embedded_statement -> jump_statement .)
    RBRACE          reduce using rule 45 (embedded_statement -> jump_statement .)
    CASE            reduce using rule 45 (embedded_statement -> jump_statement .)
    ELSE            reduce using rule 45 (embedded_statement -> jump_statement .)


state 40

    (31) const_declaration -> CONST . type const_declarators
    (5) type -> . class_type
    (6) type -> . value_type
    (7) class_type -> . OBJECT
    (8) class_type -> . STRING
    (9) class_type -> . type_name
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (3) type_name -> . ID
    (4) type_name -> . type_name DOT ID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL

    OBJECT          shift and go to state 8
    STRING          shift and go to state 9
    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    ID              shift and go to state 5
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20

    type                           shift and go to state 103
    class_type                     shift and go to state 6
    value_type                     shift and go to state 7
    type_name                      shift and go to state 10
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12

state 41

    (35) var_declaration -> type . var_declarators
    (36) var_declarators -> . var_declarator
    (37) var_declarators -> . var_declarator COMMA var_declarators
    (38) var_declarator -> . ID
    (39) var_declarator -> . ID EQUAL exp

    ID              shift and go to state 106

    var_declarators                shift and go to state 104
    var_declarator                 shift and go to state 105

state 42

    (49) exp_statement -> statement_exp . SEMI

    SEMI            shift and go to state 107


state 43

    (70) selection_statement -> if_statement .

    CONST           reduce using rule 70 (selection_statement -> if_statement .)
    LBRACE          reduce using rule 70 (selection_statement -> if_statement .)
    SEMI            reduce using rule 70 (selection_statement -> if_statement .)
    IF              reduce using rule 70 (selection_statement -> if_statement .)
    SWITCH          reduce using rule 70 (selection_statement -> if_statement .)
    WHILE           reduce using rule 70 (selection_statement -> if_statement .)
    DO              reduce using rule 70 (selection_statement -> if_statement .)
    FOR             reduce using rule 70 (selection_statement -> if_statement .)
    FOREACH         reduce using rule 70 (selection_statement -> if_statement .)
    BREAK           reduce using rule 70 (selection_statement -> if_statement .)
    CONTINUE        reduce using rule 70 (selection_statement -> if_statement .)
    RETURN          reduce using rule 70 (selection_statement -> if_statement .)
    OBJECT          reduce using rule 70 (selection_statement -> if_statement .)
    STRING          reduce using rule 70 (selection_statement -> if_statement .)
    BOOL            reduce using rule 70 (selection_statement -> if_statement .)
    VOID            reduce using rule 70 (selection_statement -> if_statement .)
    NEW             reduce using rule 70 (selection_statement -> if_statement .)
    PLUSPLUS        reduce using rule 70 (selection_statement -> if_statement .)
    MINUSMINUS      reduce using rule 70 (selection_statement -> if_statement .)
    ID              reduce using rule 70 (selection_statement -> if_statement .)
    INT             reduce using rule 70 (selection_statement -> if_statement .)
    LONG            reduce using rule 70 (selection_statement -> if_statement .)
    CHAR            reduce using rule 70 (selection_statement -> if_statement .)
    FLOAT           reduce using rule 70 (selection_statement -> if_statement .)
    DOUBLE          reduce using rule 70 (selection_statement -> if_statement .)
    DECIMAL         reduce using rule 70 (selection_statement -> if_statement .)
    TRUE            reduce using rule 70 (selection_statement -> if_statement .)
    FALSE           reduce using rule 70 (selection_statement -> if_statement .)
    NULL            reduce using rule 70 (selection_statement -> if_statement .)
    INTNUM          reduce using rule 70 (selection_statement -> if_statement .)
    HEXADECIMALNUM  reduce using rule 70 (selection_statement -> if_statement .)
    BINARYNUM       reduce using rule 70 (selection_statement -> if_statement .)
    FLOATNUM        reduce using rule 70 (selection_statement -> if_statement .)
    DOUBLENUM       reduce using rule 70 (selection_statement -> if_statement .)
    DECIMALNUM      reduce using rule 70 (selection_statement -> if_statement .)
    CHARLITERAL     reduce using rule 70 (selection_statement -> if_statement .)
    STRINGLITERAL   reduce using rule 70 (selection_statement -> if_statement .)
    THIS            reduce using rule 70 (selection_statement -> if_statement .)
    LPAREN          reduce using rule 70 (selection_statement -> if_statement .)
    TYPEOF          reduce using rule 70 (selection_statement -> if_statement .)
    SIZEOF          reduce using rule 70 (selection_statement -> if_statement .)
    DEFAULT         reduce using rule 70 (selection_statement -> if_statement .)
    RBRACE          reduce using rule 70 (selection_statement -> if_statement .)
    CASE            reduce using rule 70 (selection_statement -> if_statement .)
    ELSE            reduce using rule 70 (selection_statement -> if_statement .)


state 44

    (71) selection_statement -> switch_statement .

    CONST           reduce using rule 71 (selection_statement -> switch_statement .)
    LBRACE          reduce using rule 71 (selection_statement -> switch_statement .)
    SEMI            reduce using rule 71 (selection_statement -> switch_statement .)
    IF              reduce using rule 71 (selection_statement -> switch_statement .)
    SWITCH          reduce using rule 71 (selection_statement -> switch_statement .)
    WHILE           reduce using rule 71 (selection_statement -> switch_statement .)
    DO              reduce using rule 71 (selection_statement -> switch_statement .)
    FOR             reduce using rule 71 (selection_statement -> switch_statement .)
    FOREACH         reduce using rule 71 (selection_statement -> switch_statement .)
    BREAK           reduce using rule 71 (selection_statement -> switch_statement .)
    CONTINUE        reduce using rule 71 (selection_statement -> switch_statement .)
    RETURN          reduce using rule 71 (selection_statement -> switch_statement .)
    OBJECT          reduce using rule 71 (selection_statement -> switch_statement .)
    STRING          reduce using rule 71 (selection_statement -> switch_statement .)
    BOOL            reduce using rule 71 (selection_statement -> switch_statement .)
    VOID            reduce using rule 71 (selection_statement -> switch_statement .)
    NEW             reduce using rule 71 (selection_statement -> switch_statement .)
    PLUSPLUS        reduce using rule 71 (selection_statement -> switch_statement .)
    MINUSMINUS      reduce using rule 71 (selection_statement -> switch_statement .)
    ID              reduce using rule 71 (selection_statement -> switch_statement .)
    INT             reduce using rule 71 (selection_statement -> switch_statement .)
    LONG            reduce using rule 71 (selection_statement -> switch_statement .)
    CHAR            reduce using rule 71 (selection_statement -> switch_statement .)
    FLOAT           reduce using rule 71 (selection_statement -> switch_statement .)
    DOUBLE          reduce using rule 71 (selection_statement -> switch_statement .)
    DECIMAL         reduce using rule 71 (selection_statement -> switch_statement .)
    TRUE            reduce using rule 71 (selection_statement -> switch_statement .)
    FALSE           reduce using rule 71 (selection_statement -> switch_statement .)
    NULL            reduce using rule 71 (selection_statement -> switch_statement .)
    INTNUM          reduce using rule 71 (selection_statement -> switch_statement .)
    HEXADECIMALNUM  reduce using rule 71 (selection_statement -> switch_statement .)
    BINARYNUM       reduce using rule 71 (selection_statement -> switch_statement .)
    FLOATNUM        reduce using rule 71 (selection_statement -> switch_statement .)
    DOUBLENUM       reduce using rule 71 (selection_statement -> switch_statement .)
    DECIMALNUM      reduce using rule 71 (selection_statement -> switch_statement .)
    CHARLITERAL     reduce using rule 71 (selection_statement -> switch_statement .)
    STRINGLITERAL   reduce using rule 71 (selection_statement -> switch_statement .)
    THIS            reduce using rule 71 (selection_statement -> switch_statement .)
    LPAREN          reduce using rule 71 (selection_statement -> switch_statement .)
    TYPEOF          reduce using rule 71 (selection_statement -> switch_statement .)
    SIZEOF          reduce using rule 71 (selection_statement -> switch_statement .)
    DEFAULT         reduce using rule 71 (selection_statement -> switch_statement .)
    RBRACE          reduce using rule 71 (selection_statement -> switch_statement .)
    CASE            reduce using rule 71 (selection_statement -> switch_statement .)
    ELSE            reduce using rule 71 (selection_statement -> switch_statement .)


state 45

    (82) iteration_statement -> while_statement .

    CONST           reduce using rule 82 (iteration_statement -> while_statement .)
    LBRACE          reduce using rule 82 (iteration_statement -> while_statement .)
    SEMI            reduce using rule 82 (iteration_statement -> while_statement .)
    IF              reduce using rule 82 (iteration_statement -> while_statement .)
    SWITCH          reduce using rule 82 (iteration_statement -> while_statement .)
    WHILE           reduce using rule 82 (iteration_statement -> while_statement .)
    DO              reduce using rule 82 (iteration_statement -> while_statement .)
    FOR             reduce using rule 82 (iteration_statement -> while_statement .)
    FOREACH         reduce using rule 82 (iteration_statement -> while_statement .)
    BREAK           reduce using rule 82 (iteration_statement -> while_statement .)
    CONTINUE        reduce using rule 82 (iteration_statement -> while_statement .)
    RETURN          reduce using rule 82 (iteration_statement -> while_statement .)
    OBJECT          reduce using rule 82 (iteration_statement -> while_statement .)
    STRING          reduce using rule 82 (iteration_statement -> while_statement .)
    BOOL            reduce using rule 82 (iteration_statement -> while_statement .)
    VOID            reduce using rule 82 (iteration_statement -> while_statement .)
    NEW             reduce using rule 82 (iteration_statement -> while_statement .)
    PLUSPLUS        reduce using rule 82 (iteration_statement -> while_statement .)
    MINUSMINUS      reduce using rule 82 (iteration_statement -> while_statement .)
    ID              reduce using rule 82 (iteration_statement -> while_statement .)
    INT             reduce using rule 82 (iteration_statement -> while_statement .)
    LONG            reduce using rule 82 (iteration_statement -> while_statement .)
    CHAR            reduce using rule 82 (iteration_statement -> while_statement .)
    FLOAT           reduce using rule 82 (iteration_statement -> while_statement .)
    DOUBLE          reduce using rule 82 (iteration_statement -> while_statement .)
    DECIMAL         reduce using rule 82 (iteration_statement -> while_statement .)
    TRUE            reduce using rule 82 (iteration_statement -> while_statement .)
    FALSE           reduce using rule 82 (iteration_statement -> while_statement .)
    NULL            reduce using rule 82 (iteration_statement -> while_statement .)
    INTNUM          reduce using rule 82 (iteration_statement -> while_statement .)
    HEXADECIMALNUM  reduce using rule 82 (iteration_statement -> while_statement .)
    BINARYNUM       reduce using rule 82 (iteration_statement -> while_statement .)
    FLOATNUM        reduce using rule 82 (iteration_statement -> while_statement .)
    DOUBLENUM       reduce using rule 82 (iteration_statement -> while_statement .)
    DECIMALNUM      reduce using rule 82 (iteration_statement -> while_statement .)
    CHARLITERAL     reduce using rule 82 (iteration_statement -> while_statement .)
    STRINGLITERAL   reduce using rule 82 (iteration_statement -> while_statement .)
    THIS            reduce using rule 82 (iteration_statement -> while_statement .)
    LPAREN          reduce using rule 82 (iteration_statement -> while_statement .)
    TYPEOF          reduce using rule 82 (iteration_statement -> while_statement .)
    SIZEOF          reduce using rule 82 (iteration_statement -> while_statement .)
    DEFAULT         reduce using rule 82 (iteration_statement -> while_statement .)
    RBRACE          reduce using rule 82 (iteration_statement -> while_statement .)
    CASE            reduce using rule 82 (iteration_statement -> while_statement .)
    ELSE            reduce using rule 82 (iteration_statement -> while_statement .)


state 46

    (83) iteration_statement -> do_statement .

    CONST           reduce using rule 83 (iteration_statement -> do_statement .)
    LBRACE          reduce using rule 83 (iteration_statement -> do_statement .)
    SEMI            reduce using rule 83 (iteration_statement -> do_statement .)
    IF              reduce using rule 83 (iteration_statement -> do_statement .)
    SWITCH          reduce using rule 83 (iteration_statement -> do_statement .)
    WHILE           reduce using rule 83 (iteration_statement -> do_statement .)
    DO              reduce using rule 83 (iteration_statement -> do_statement .)
    FOR             reduce using rule 83 (iteration_statement -> do_statement .)
    FOREACH         reduce using rule 83 (iteration_statement -> do_statement .)
    BREAK           reduce using rule 83 (iteration_statement -> do_statement .)
    CONTINUE        reduce using rule 83 (iteration_statement -> do_statement .)
    RETURN          reduce using rule 83 (iteration_statement -> do_statement .)
    OBJECT          reduce using rule 83 (iteration_statement -> do_statement .)
    STRING          reduce using rule 83 (iteration_statement -> do_statement .)
    BOOL            reduce using rule 83 (iteration_statement -> do_statement .)
    VOID            reduce using rule 83 (iteration_statement -> do_statement .)
    NEW             reduce using rule 83 (iteration_statement -> do_statement .)
    PLUSPLUS        reduce using rule 83 (iteration_statement -> do_statement .)
    MINUSMINUS      reduce using rule 83 (iteration_statement -> do_statement .)
    ID              reduce using rule 83 (iteration_statement -> do_statement .)
    INT             reduce using rule 83 (iteration_statement -> do_statement .)
    LONG            reduce using rule 83 (iteration_statement -> do_statement .)
    CHAR            reduce using rule 83 (iteration_statement -> do_statement .)
    FLOAT           reduce using rule 83 (iteration_statement -> do_statement .)
    DOUBLE          reduce using rule 83 (iteration_statement -> do_statement .)
    DECIMAL         reduce using rule 83 (iteration_statement -> do_statement .)
    TRUE            reduce using rule 83 (iteration_statement -> do_statement .)
    FALSE           reduce using rule 83 (iteration_statement -> do_statement .)
    NULL            reduce using rule 83 (iteration_statement -> do_statement .)
    INTNUM          reduce using rule 83 (iteration_statement -> do_statement .)
    HEXADECIMALNUM  reduce using rule 83 (iteration_statement -> do_statement .)
    BINARYNUM       reduce using rule 83 (iteration_statement -> do_statement .)
    FLOATNUM        reduce using rule 83 (iteration_statement -> do_statement .)
    DOUBLENUM       reduce using rule 83 (iteration_statement -> do_statement .)
    DECIMALNUM      reduce using rule 83 (iteration_statement -> do_statement .)
    CHARLITERAL     reduce using rule 83 (iteration_statement -> do_statement .)
    STRINGLITERAL   reduce using rule 83 (iteration_statement -> do_statement .)
    THIS            reduce using rule 83 (iteration_statement -> do_statement .)
    LPAREN          reduce using rule 83 (iteration_statement -> do_statement .)
    TYPEOF          reduce using rule 83 (iteration_statement -> do_statement .)
    SIZEOF          reduce using rule 83 (iteration_statement -> do_statement .)
    DEFAULT         reduce using rule 83 (iteration_statement -> do_statement .)
    RBRACE          reduce using rule 83 (iteration_statement -> do_statement .)
    CASE            reduce using rule 83 (iteration_statement -> do_statement .)
    ELSE            reduce using rule 83 (iteration_statement -> do_statement .)


state 47

    (84) iteration_statement -> for_statement .

    CONST           reduce using rule 84 (iteration_statement -> for_statement .)
    LBRACE          reduce using rule 84 (iteration_statement -> for_statement .)
    SEMI            reduce using rule 84 (iteration_statement -> for_statement .)
    IF              reduce using rule 84 (iteration_statement -> for_statement .)
    SWITCH          reduce using rule 84 (iteration_statement -> for_statement .)
    WHILE           reduce using rule 84 (iteration_statement -> for_statement .)
    DO              reduce using rule 84 (iteration_statement -> for_statement .)
    FOR             reduce using rule 84 (iteration_statement -> for_statement .)
    FOREACH         reduce using rule 84 (iteration_statement -> for_statement .)
    BREAK           reduce using rule 84 (iteration_statement -> for_statement .)
    CONTINUE        reduce using rule 84 (iteration_statement -> for_statement .)
    RETURN          reduce using rule 84 (iteration_statement -> for_statement .)
    OBJECT          reduce using rule 84 (iteration_statement -> for_statement .)
    STRING          reduce using rule 84 (iteration_statement -> for_statement .)
    BOOL            reduce using rule 84 (iteration_statement -> for_statement .)
    VOID            reduce using rule 84 (iteration_statement -> for_statement .)
    NEW             reduce using rule 84 (iteration_statement -> for_statement .)
    PLUSPLUS        reduce using rule 84 (iteration_statement -> for_statement .)
    MINUSMINUS      reduce using rule 84 (iteration_statement -> for_statement .)
    ID              reduce using rule 84 (iteration_statement -> for_statement .)
    INT             reduce using rule 84 (iteration_statement -> for_statement .)
    LONG            reduce using rule 84 (iteration_statement -> for_statement .)
    CHAR            reduce using rule 84 (iteration_statement -> for_statement .)
    FLOAT           reduce using rule 84 (iteration_statement -> for_statement .)
    DOUBLE          reduce using rule 84 (iteration_statement -> for_statement .)
    DECIMAL         reduce using rule 84 (iteration_statement -> for_statement .)
    TRUE            reduce using rule 84 (iteration_statement -> for_statement .)
    FALSE           reduce using rule 84 (iteration_statement -> for_statement .)
    NULL            reduce using rule 84 (iteration_statement -> for_statement .)
    INTNUM          reduce using rule 84 (iteration_statement -> for_statement .)
    HEXADECIMALNUM  reduce using rule 84 (iteration_statement -> for_statement .)
    BINARYNUM       reduce using rule 84 (iteration_statement -> for_statement .)
    FLOATNUM        reduce using rule 84 (iteration_statement -> for_statement .)
    DOUBLENUM       reduce using rule 84 (iteration_statement -> for_statement .)
    DECIMALNUM      reduce using rule 84 (iteration_statement -> for_statement .)
    CHARLITERAL     reduce using rule 84 (iteration_statement -> for_statement .)
    STRINGLITERAL   reduce using rule 84 (iteration_statement -> for_statement .)
    THIS            reduce using rule 84 (iteration_statement -> for_statement .)
    LPAREN          reduce using rule 84 (iteration_statement -> for_statement .)
    TYPEOF          reduce using rule 84 (iteration_statement -> for_statement .)
    SIZEOF          reduce using rule 84 (iteration_statement -> for_statement .)
    DEFAULT         reduce using rule 84 (iteration_statement -> for_statement .)
    RBRACE          reduce using rule 84 (iteration_statement -> for_statement .)
    CASE            reduce using rule 84 (iteration_statement -> for_statement .)
    ELSE            reduce using rule 84 (iteration_statement -> for_statement .)


state 48

    (85) iteration_statement -> foreach_statement .

    CONST           reduce using rule 85 (iteration_statement -> foreach_statement .)
    LBRACE          reduce using rule 85 (iteration_statement -> foreach_statement .)
    SEMI            reduce using rule 85 (iteration_statement -> foreach_statement .)
    IF              reduce using rule 85 (iteration_statement -> foreach_statement .)
    SWITCH          reduce using rule 85 (iteration_statement -> foreach_statement .)
    WHILE           reduce using rule 85 (iteration_statement -> foreach_statement .)
    DO              reduce using rule 85 (iteration_statement -> foreach_statement .)
    FOR             reduce using rule 85 (iteration_statement -> foreach_statement .)
    FOREACH         reduce using rule 85 (iteration_statement -> foreach_statement .)
    BREAK           reduce using rule 85 (iteration_statement -> foreach_statement .)
    CONTINUE        reduce using rule 85 (iteration_statement -> foreach_statement .)
    RETURN          reduce using rule 85 (iteration_statement -> foreach_statement .)
    OBJECT          reduce using rule 85 (iteration_statement -> foreach_statement .)
    STRING          reduce using rule 85 (iteration_statement -> foreach_statement .)
    BOOL            reduce using rule 85 (iteration_statement -> foreach_statement .)
    VOID            reduce using rule 85 (iteration_statement -> foreach_statement .)
    NEW             reduce using rule 85 (iteration_statement -> foreach_statement .)
    PLUSPLUS        reduce using rule 85 (iteration_statement -> foreach_statement .)
    MINUSMINUS      reduce using rule 85 (iteration_statement -> foreach_statement .)
    ID              reduce using rule 85 (iteration_statement -> foreach_statement .)
    INT             reduce using rule 85 (iteration_statement -> foreach_statement .)
    LONG            reduce using rule 85 (iteration_statement -> foreach_statement .)
    CHAR            reduce using rule 85 (iteration_statement -> foreach_statement .)
    FLOAT           reduce using rule 85 (iteration_statement -> foreach_statement .)
    DOUBLE          reduce using rule 85 (iteration_statement -> foreach_statement .)
    DECIMAL         reduce using rule 85 (iteration_statement -> foreach_statement .)
    TRUE            reduce using rule 85 (iteration_statement -> foreach_statement .)
    FALSE           reduce using rule 85 (iteration_statement -> foreach_statement .)
    NULL            reduce using rule 85 (iteration_statement -> foreach_statement .)
    INTNUM          reduce using rule 85 (iteration_statement -> foreach_statement .)
    HEXADECIMALNUM  reduce using rule 85 (iteration_statement -> foreach_statement .)
    BINARYNUM       reduce using rule 85 (iteration_statement -> foreach_statement .)
    FLOATNUM        reduce using rule 85 (iteration_statement -> foreach_statement .)
    DOUBLENUM       reduce using rule 85 (iteration_statement -> foreach_statement .)
    DECIMALNUM      reduce using rule 85 (iteration_statement -> foreach_statement .)
    CHARLITERAL     reduce using rule 85 (iteration_statement -> foreach_statement .)
    STRINGLITERAL   reduce using rule 85 (iteration_statement -> foreach_statement .)
    THIS            reduce using rule 85 (iteration_statement -> foreach_statement .)
    LPAREN          reduce using rule 85 (iteration_statement -> foreach_statement .)
    TYPEOF          reduce using rule 85 (iteration_statement -> foreach_statement .)
    SIZEOF          reduce using rule 85 (iteration_statement -> foreach_statement .)
    DEFAULT         reduce using rule 85 (iteration_statement -> foreach_statement .)
    RBRACE          reduce using rule 85 (iteration_statement -> foreach_statement .)
    CASE            reduce using rule 85 (iteration_statement -> foreach_statement .)
    ELSE            reduce using rule 85 (iteration_statement -> foreach_statement .)


state 49

    (103) jump_statement -> break_statement .

    CONST           reduce using rule 103 (jump_statement -> break_statement .)
    LBRACE          reduce using rule 103 (jump_statement -> break_statement .)
    SEMI            reduce using rule 103 (jump_statement -> break_statement .)
    IF              reduce using rule 103 (jump_statement -> break_statement .)
    SWITCH          reduce using rule 103 (jump_statement -> break_statement .)
    WHILE           reduce using rule 103 (jump_statement -> break_statement .)
    DO              reduce using rule 103 (jump_statement -> break_statement .)
    FOR             reduce using rule 103 (jump_statement -> break_statement .)
    FOREACH         reduce using rule 103 (jump_statement -> break_statement .)
    BREAK           reduce using rule 103 (jump_statement -> break_statement .)
    CONTINUE        reduce using rule 103 (jump_statement -> break_statement .)
    RETURN          reduce using rule 103 (jump_statement -> break_statement .)
    OBJECT          reduce using rule 103 (jump_statement -> break_statement .)
    STRING          reduce using rule 103 (jump_statement -> break_statement .)
    BOOL            reduce using rule 103 (jump_statement -> break_statement .)
    VOID            reduce using rule 103 (jump_statement -> break_statement .)
    NEW             reduce using rule 103 (jump_statement -> break_statement .)
    PLUSPLUS        reduce using rule 103 (jump_statement -> break_statement .)
    MINUSMINUS      reduce using rule 103 (jump_statement -> break_statement .)
    ID              reduce using rule 103 (jump_statement -> break_statement .)
    INT             reduce using rule 103 (jump_statement -> break_statement .)
    LONG            reduce using rule 103 (jump_statement -> break_statement .)
    CHAR            reduce using rule 103 (jump_statement -> break_statement .)
    FLOAT           reduce using rule 103 (jump_statement -> break_statement .)
    DOUBLE          reduce using rule 103 (jump_statement -> break_statement .)
    DECIMAL         reduce using rule 103 (jump_statement -> break_statement .)
    TRUE            reduce using rule 103 (jump_statement -> break_statement .)
    FALSE           reduce using rule 103 (jump_statement -> break_statement .)
    NULL            reduce using rule 103 (jump_statement -> break_statement .)
    INTNUM          reduce using rule 103 (jump_statement -> break_statement .)
    HEXADECIMALNUM  reduce using rule 103 (jump_statement -> break_statement .)
    BINARYNUM       reduce using rule 103 (jump_statement -> break_statement .)
    FLOATNUM        reduce using rule 103 (jump_statement -> break_statement .)
    DOUBLENUM       reduce using rule 103 (jump_statement -> break_statement .)
    DECIMALNUM      reduce using rule 103 (jump_statement -> break_statement .)
    CHARLITERAL     reduce using rule 103 (jump_statement -> break_statement .)
    STRINGLITERAL   reduce using rule 103 (jump_statement -> break_statement .)
    THIS            reduce using rule 103 (jump_statement -> break_statement .)
    LPAREN          reduce using rule 103 (jump_statement -> break_statement .)
    TYPEOF          reduce using rule 103 (jump_statement -> break_statement .)
    SIZEOF          reduce using rule 103 (jump_statement -> break_statement .)
    DEFAULT         reduce using rule 103 (jump_statement -> break_statement .)
    RBRACE          reduce using rule 103 (jump_statement -> break_statement .)
    CASE            reduce using rule 103 (jump_statement -> break_statement .)
    ELSE            reduce using rule 103 (jump_statement -> break_statement .)


state 50

    (104) jump_statement -> continue_statement .

    CONST           reduce using rule 104 (jump_statement -> continue_statement .)
    LBRACE          reduce using rule 104 (jump_statement -> continue_statement .)
    SEMI            reduce using rule 104 (jump_statement -> continue_statement .)
    IF              reduce using rule 104 (jump_statement -> continue_statement .)
    SWITCH          reduce using rule 104 (jump_statement -> continue_statement .)
    WHILE           reduce using rule 104 (jump_statement -> continue_statement .)
    DO              reduce using rule 104 (jump_statement -> continue_statement .)
    FOR             reduce using rule 104 (jump_statement -> continue_statement .)
    FOREACH         reduce using rule 104 (jump_statement -> continue_statement .)
    BREAK           reduce using rule 104 (jump_statement -> continue_statement .)
    CONTINUE        reduce using rule 104 (jump_statement -> continue_statement .)
    RETURN          reduce using rule 104 (jump_statement -> continue_statement .)
    OBJECT          reduce using rule 104 (jump_statement -> continue_statement .)
    STRING          reduce using rule 104 (jump_statement -> continue_statement .)
    BOOL            reduce using rule 104 (jump_statement -> continue_statement .)
    VOID            reduce using rule 104 (jump_statement -> continue_statement .)
    NEW             reduce using rule 104 (jump_statement -> continue_statement .)
    PLUSPLUS        reduce using rule 104 (jump_statement -> continue_statement .)
    MINUSMINUS      reduce using rule 104 (jump_statement -> continue_statement .)
    ID              reduce using rule 104 (jump_statement -> continue_statement .)
    INT             reduce using rule 104 (jump_statement -> continue_statement .)
    LONG            reduce using rule 104 (jump_statement -> continue_statement .)
    CHAR            reduce using rule 104 (jump_statement -> continue_statement .)
    FLOAT           reduce using rule 104 (jump_statement -> continue_statement .)
    DOUBLE          reduce using rule 104 (jump_statement -> continue_statement .)
    DECIMAL         reduce using rule 104 (jump_statement -> continue_statement .)
    TRUE            reduce using rule 104 (jump_statement -> continue_statement .)
    FALSE           reduce using rule 104 (jump_statement -> continue_statement .)
    NULL            reduce using rule 104 (jump_statement -> continue_statement .)
    INTNUM          reduce using rule 104 (jump_statement -> continue_statement .)
    HEXADECIMALNUM  reduce using rule 104 (jump_statement -> continue_statement .)
    BINARYNUM       reduce using rule 104 (jump_statement -> continue_statement .)
    FLOATNUM        reduce using rule 104 (jump_statement -> continue_statement .)
    DOUBLENUM       reduce using rule 104 (jump_statement -> continue_statement .)
    DECIMALNUM      reduce using rule 104 (jump_statement -> continue_statement .)
    CHARLITERAL     reduce using rule 104 (jump_statement -> continue_statement .)
    STRINGLITERAL   reduce using rule 104 (jump_statement -> continue_statement .)
    THIS            reduce using rule 104 (jump_statement -> continue_statement .)
    LPAREN          reduce using rule 104 (jump_statement -> continue_statement .)
    TYPEOF          reduce using rule 104 (jump_statement -> continue_statement .)
    SIZEOF          reduce using rule 104 (jump_statement -> continue_statement .)
    DEFAULT         reduce using rule 104 (jump_statement -> continue_statement .)
    RBRACE          reduce using rule 104 (jump_statement -> continue_statement .)
    CASE            reduce using rule 104 (jump_statement -> continue_statement .)
    ELSE            reduce using rule 104 (jump_statement -> continue_statement .)


state 51

    (105) jump_statement -> return_statement .

    CONST           reduce using rule 105 (jump_statement -> return_statement .)
    LBRACE          reduce using rule 105 (jump_statement -> return_statement .)
    SEMI            reduce using rule 105 (jump_statement -> return_statement .)
    IF              reduce using rule 105 (jump_statement -> return_statement .)
    SWITCH          reduce using rule 105 (jump_statement -> return_statement .)
    WHILE           reduce using rule 105 (jump_statement -> return_statement .)
    DO              reduce using rule 105 (jump_statement -> return_statement .)
    FOR             reduce using rule 105 (jump_statement -> return_statement .)
    FOREACH         reduce using rule 105 (jump_statement -> return_statement .)
    BREAK           reduce using rule 105 (jump_statement -> return_statement .)
    CONTINUE        reduce using rule 105 (jump_statement -> return_statement .)
    RETURN          reduce using rule 105 (jump_statement -> return_statement .)
    OBJECT          reduce using rule 105 (jump_statement -> return_statement .)
    STRING          reduce using rule 105 (jump_statement -> return_statement .)
    BOOL            reduce using rule 105 (jump_statement -> return_statement .)
    VOID            reduce using rule 105 (jump_statement -> return_statement .)
    NEW             reduce using rule 105 (jump_statement -> return_statement .)
    PLUSPLUS        reduce using rule 105 (jump_statement -> return_statement .)
    MINUSMINUS      reduce using rule 105 (jump_statement -> return_statement .)
    ID              reduce using rule 105 (jump_statement -> return_statement .)
    INT             reduce using rule 105 (jump_statement -> return_statement .)
    LONG            reduce using rule 105 (jump_statement -> return_statement .)
    CHAR            reduce using rule 105 (jump_statement -> return_statement .)
    FLOAT           reduce using rule 105 (jump_statement -> return_statement .)
    DOUBLE          reduce using rule 105 (jump_statement -> return_statement .)
    DECIMAL         reduce using rule 105 (jump_statement -> return_statement .)
    TRUE            reduce using rule 105 (jump_statement -> return_statement .)
    FALSE           reduce using rule 105 (jump_statement -> return_statement .)
    NULL            reduce using rule 105 (jump_statement -> return_statement .)
    INTNUM          reduce using rule 105 (jump_statement -> return_statement .)
    HEXADECIMALNUM  reduce using rule 105 (jump_statement -> return_statement .)
    BINARYNUM       reduce using rule 105 (jump_statement -> return_statement .)
    FLOATNUM        reduce using rule 105 (jump_statement -> return_statement .)
    DOUBLENUM       reduce using rule 105 (jump_statement -> return_statement .)
    DECIMALNUM      reduce using rule 105 (jump_statement -> return_statement .)
    CHARLITERAL     reduce using rule 105 (jump_statement -> return_statement .)
    STRINGLITERAL   reduce using rule 105 (jump_statement -> return_statement .)
    THIS            reduce using rule 105 (jump_statement -> return_statement .)
    LPAREN          reduce using rule 105 (jump_statement -> return_statement .)
    TYPEOF          reduce using rule 105 (jump_statement -> return_statement .)
    SIZEOF          reduce using rule 105 (jump_statement -> return_statement .)
    DEFAULT         reduce using rule 105 (jump_statement -> return_statement .)
    RBRACE          reduce using rule 105 (jump_statement -> return_statement .)
    CASE            reduce using rule 105 (jump_statement -> return_statement .)
    ELSE            reduce using rule 105 (jump_statement -> return_statement .)


state 52

    (50) statement_exp -> invocation_exp .
    (127) primary_no_array_creation_exp -> invocation_exp .

    SEMI            reduce using rule 50 (statement_exp -> invocation_exp .)
    COMMA           reduce using rule 50 (statement_exp -> invocation_exp .)
    RPAREN          reduce using rule 50 (statement_exp -> invocation_exp .)
    LSB             reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    LPAREN          reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    PLUSPLUS        reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    MINUSMINUS      reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    EQUAL           reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)


state 53

    (51) statement_exp -> object_creation_exp .
    (135) primary_no_array_creation_exp -> object_creation_exp .

    SEMI            reduce using rule 51 (statement_exp -> object_creation_exp .)
    COMMA           reduce using rule 51 (statement_exp -> object_creation_exp .)
    RPAREN          reduce using rule 51 (statement_exp -> object_creation_exp .)
    LSB             reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    LPAREN          reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    PLUSPLUS        reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    MINUSMINUS      reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    EQUAL           reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)


state 54

    (52) statement_exp -> assignment .

    SEMI            reduce using rule 52 (statement_exp -> assignment .)
    COMMA           reduce using rule 52 (statement_exp -> assignment .)
    RPAREN          reduce using rule 52 (statement_exp -> assignment .)


state 55

    (53) statement_exp -> post_increment_exp .
    (133) primary_no_array_creation_exp -> post_increment_exp .

    SEMI            reduce using rule 53 (statement_exp -> post_increment_exp .)
    COMMA           reduce using rule 53 (statement_exp -> post_increment_exp .)
    RPAREN          reduce using rule 53 (statement_exp -> post_increment_exp .)
    LSB             reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    LPAREN          reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    PLUSPLUS        reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    MINUSMINUS      reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    EQUAL           reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)


state 56

    (54) statement_exp -> post_decrement_exp .
    (134) primary_no_array_creation_exp -> post_decrement_exp .

    SEMI            reduce using rule 54 (statement_exp -> post_decrement_exp .)
    COMMA           reduce using rule 54 (statement_exp -> post_decrement_exp .)
    RPAREN          reduce using rule 54 (statement_exp -> post_decrement_exp .)
    LSB             reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    LPAREN          reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    PLUSPLUS        reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    MINUSMINUS      reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    EQUAL           reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)


state 57

    (55) statement_exp -> pre_increment_exp .
    (145) unary_exp -> pre_increment_exp .

    SEMI            reduce using rule 55 (statement_exp -> pre_increment_exp .)
    COMMA           reduce using rule 55 (statement_exp -> pre_increment_exp .)
    RPAREN          reduce using rule 55 (statement_exp -> pre_increment_exp .)
    EQUAL           reduce using rule 145 (unary_exp -> pre_increment_exp .)


state 58

    (56) statement_exp -> pre_decrement_exp .
    (146) unary_exp -> pre_decrement_exp .

    SEMI            reduce using rule 56 (statement_exp -> pre_decrement_exp .)
    COMMA           reduce using rule 56 (statement_exp -> pre_decrement_exp .)
    RPAREN          reduce using rule 56 (statement_exp -> pre_decrement_exp .)
    EQUAL           reduce using rule 146 (unary_exp -> pre_decrement_exp .)


state 59

    (72) if_statement -> IF . LPAREN exp RPAREN embedded_statement
    (73) if_statement -> IF . LPAREN exp RPAREN embedded_statement ELSE embedded_statement

    LPAREN          shift and go to state 108


state 60

    (148) cast_exp -> LPAREN . type RPAREN unary_exp
    (126) parenthesized_exp -> LPAREN . exp RPAREN
    (5) type -> . class_type
    (6) type -> . value_type
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (7) class_type -> . OBJECT
    (8) class_type -> . STRING
    (9) class_type -> . type_name
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (3) type_name -> . ID
    (4) type_name -> . type_name DOT ID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    OBJECT          shift and go to state 8
    STRING          shift and go to state 9
    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    ID              shift and go to state 66
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    type                           shift and go to state 109
    unary_exp                      shift and go to state 110
    exp                            shift and go to state 111
    class_type                     shift and go to state 6
    value_type                     shift and go to state 7
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    type_name                      shift and go to state 10
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12
    conditional_exp                shift and go to state 114
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 61

    (74) switch_statement -> SWITCH . LPAREN exp RPAREN LBRACE switch_body RBRACE

    LPAREN          shift and go to state 132


state 62

    (86) while_statement -> WHILE . LPAREN exp RPAREN embedded_statement

    LPAREN          shift and go to state 133


state 63

    (87) do_statement -> DO . embedded_statement WHILE LPAREN exp RPAREN SEMI
    (40) embedded_statement -> . block
    (41) embedded_statement -> . empty_statement
    (42) embedded_statement -> . exp_statement
    (43) embedded_statement -> . selection_statement
    (44) embedded_statement -> . iteration_statement
    (45) embedded_statement -> . jump_statement
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE
    (48) empty_statement -> . SEMI
    (49) exp_statement -> . statement_exp SEMI
    (70) selection_statement -> . if_statement
    (71) selection_statement -> . switch_statement
    (82) iteration_statement -> . while_statement
    (83) iteration_statement -> . do_statement
    (84) iteration_statement -> . for_statement
    (85) iteration_statement -> . foreach_statement
    (103) jump_statement -> . break_statement
    (104) jump_statement -> . continue_statement
    (105) jump_statement -> . return_statement
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (72) if_statement -> . IF LPAREN exp RPAREN embedded_statement
    (73) if_statement -> . IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
    (74) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (86) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (87) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (88) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (102) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (106) break_statement -> . BREAK SEMI
    (107) continue_statement -> . CONTINUE SEMI
    (108) return_statement -> . RETURN SEMI
    (109) return_statement -> . RETURN exp SEMI
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    LBRACE          shift and go to state 23
    SEMI            shift and go to state 32
    IF              shift and go to state 59
    SWITCH          shift and go to state 61
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    embedded_statement             shift and go to state 134
    block                          shift and go to state 34
    empty_statement                shift and go to state 35
    exp_statement                  shift and go to state 36
    selection_statement            shift and go to state 37
    iteration_statement            shift and go to state 38
    jump_statement                 shift and go to state 39
    statement_exp                  shift and go to state 42
    if_statement                   shift and go to state 43
    switch_statement               shift and go to state 44
    while_statement                shift and go to state 45
    do_statement                   shift and go to state 46
    for_statement                  shift and go to state 47
    foreach_statement              shift and go to state 48
    break_statement                shift and go to state 49
    continue_statement             shift and go to state 50
    return_statement               shift and go to state 51
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 64

    (88) for_statement -> FOR . LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> FOR . LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> FOR . LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> FOR . LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> FOR . LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> FOR . LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> FOR . LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> FOR . LPAREN SEMI SEMI RPAREN embedded_statement

    LPAREN          shift and go to state 136


state 65

    (102) foreach_statement -> FOREACH . LPAREN type ID IN exp RPAREN embedded_statement

    LPAREN          shift and go to state 137


state 66

    (3) type_name -> ID .
    (124) primary_no_array_creation_exp -> ID .

  ! reduce/reduce conflict for RPAREN resolved using rule 3 (type_name -> ID .)
    DOT             reduce using rule 3 (type_name -> ID .)
    ID              reduce using rule 3 (type_name -> ID .)
    RPAREN          reduce using rule 3 (type_name -> ID .)
    LSB             reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    LPAREN          reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    PLUSPLUS        reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    MINUSMINUS      reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    EQUAL           reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    STAR            reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    SLASH           reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    PERCENT         reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    PLUS            reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    MINUS           reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    LSHIFT          reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    RSHIFT          reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    LT              reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    GT              reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    LEQ             reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    GEQ             reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    IS              reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    EQEQUAL         reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    NOTEQUAL        reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    AMPER           reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    CIRCUMFLEX      reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    PIPE            reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    AMPERAMPER      reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    HOOK            reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    PIPEPIPE        reduce using rule 124 (primary_no_array_creation_exp -> ID .)

  ! RPAREN          [ reduce using rule 124 (primary_no_array_creation_exp -> ID .) ]


state 67

    (106) break_statement -> BREAK . SEMI

    SEMI            shift and go to state 138


state 68

    (107) continue_statement -> CONTINUE . SEMI

    SEMI            shift and go to state 139


state 69

    (108) return_statement -> RETURN . SEMI
    (109) return_statement -> RETURN . exp SEMI
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    SEMI            shift and go to state 140
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    exp                            shift and go to state 141
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 70

    (128) invocation_exp -> primary_exp . LPAREN RPAREN
    (129) invocation_exp -> primary_exp . LPAREN arg_list RPAREN
    (66) post_increment_exp -> primary_exp . PLUSPLUS
    (67) post_decrement_exp -> primary_exp . MINUSMINUS
    (144) unary_exp -> primary_exp .

    LPAREN          shift and go to state 142
    PLUSPLUS        shift and go to state 143
    MINUSMINUS      shift and go to state 144
    EQUAL           reduce using rule 144 (unary_exp -> primary_exp .)


state 71

    (57) object_creation_exp -> NEW . type LPAREN RPAREN
    (58) object_creation_exp -> NEW . type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> NEW . type LPAREN arg_list RPAREN
    (60) object_creation_exp -> NEW . type LPAREN arg_list RPAREN object_initializer
    (5) type -> . class_type
    (6) type -> . value_type
    (7) class_type -> . OBJECT
    (8) class_type -> . STRING
    (9) class_type -> . type_name
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (3) type_name -> . ID
    (4) type_name -> . type_name DOT ID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL

    OBJECT          shift and go to state 8
    STRING          shift and go to state 9
    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    ID              shift and go to state 5
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20

    type                           shift and go to state 145
    class_type                     shift and go to state 6
    value_type                     shift and go to state 7
    type_name                      shift and go to state 10
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12

state 72

    (183) assignment -> unary_exp . EQUAL exp

    EQUAL           shift and go to state 146


state 73

    (68) pre_increment_exp -> PLUSPLUS . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    unary_exp                      shift and go to state 147
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 74

    (69) pre_decrement_exp -> MINUSMINUS . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    unary_exp                      shift and go to state 148
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 75

    (112) primary_exp -> primary_no_array_creation_exp .
    (131) element_access -> primary_no_array_creation_exp . LSB exp RSB

    LPAREN          reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    PLUSPLUS        reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    MINUSMINUS      reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    EQUAL           reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    STAR            reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    SLASH           reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    PERCENT         reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    PLUS            reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    MINUS           reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    LSHIFT          reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    RSHIFT          reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    LT              reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    GT              reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    LEQ             reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    GEQ             reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    IS              reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    EQEQUAL         reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    NOTEQUAL        reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    AMPER           reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    CIRCUMFLEX      reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    PIPE            reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    AMPERAMPER      reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    HOOK            reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    PIPEPIPE        reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    RPAREN          reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    SEMI            reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    COMMA           reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    RSB             reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    COLON           reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    RBRACE          reduce using rule 112 (primary_exp -> primary_no_array_creation_exp .)
    LSB             shift and go to state 149


state 76

    (147) unary_exp -> cast_exp .

    EQUAL           reduce using rule 147 (unary_exp -> cast_exp .)
    STAR            reduce using rule 147 (unary_exp -> cast_exp .)
    SLASH           reduce using rule 147 (unary_exp -> cast_exp .)
    PERCENT         reduce using rule 147 (unary_exp -> cast_exp .)
    PLUS            reduce using rule 147 (unary_exp -> cast_exp .)
    MINUS           reduce using rule 147 (unary_exp -> cast_exp .)
    LSHIFT          reduce using rule 147 (unary_exp -> cast_exp .)
    RSHIFT          reduce using rule 147 (unary_exp -> cast_exp .)
    LT              reduce using rule 147 (unary_exp -> cast_exp .)
    GT              reduce using rule 147 (unary_exp -> cast_exp .)
    LEQ             reduce using rule 147 (unary_exp -> cast_exp .)
    GEQ             reduce using rule 147 (unary_exp -> cast_exp .)
    IS              reduce using rule 147 (unary_exp -> cast_exp .)
    EQEQUAL         reduce using rule 147 (unary_exp -> cast_exp .)
    NOTEQUAL        reduce using rule 147 (unary_exp -> cast_exp .)
    AMPER           reduce using rule 147 (unary_exp -> cast_exp .)
    CIRCUMFLEX      reduce using rule 147 (unary_exp -> cast_exp .)
    PIPE            reduce using rule 147 (unary_exp -> cast_exp .)
    AMPERAMPER      reduce using rule 147 (unary_exp -> cast_exp .)
    HOOK            reduce using rule 147 (unary_exp -> cast_exp .)
    PIPEPIPE        reduce using rule 147 (unary_exp -> cast_exp .)
    RPAREN          reduce using rule 147 (unary_exp -> cast_exp .)
    SEMI            reduce using rule 147 (unary_exp -> cast_exp .)
    COMMA           reduce using rule 147 (unary_exp -> cast_exp .)
    RSB             reduce using rule 147 (unary_exp -> cast_exp .)
    COLON           reduce using rule 147 (unary_exp -> cast_exp .)
    RBRACE          reduce using rule 147 (unary_exp -> cast_exp .)


state 77

    (113) primary_no_array_creation_exp -> TRUE .

    LSB             reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    LPAREN          reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    PLUSPLUS        reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    MINUSMINUS      reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    EQUAL           reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    STAR            reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    SLASH           reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    PERCENT         reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    PLUS            reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    MINUS           reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    LSHIFT          reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    RSHIFT          reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    LT              reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    GT              reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    LEQ             reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    GEQ             reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    IS              reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    EQEQUAL         reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    NOTEQUAL        reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    AMPER           reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    CIRCUMFLEX      reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    PIPE            reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    AMPERAMPER      reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    HOOK            reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    PIPEPIPE        reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    RPAREN          reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    SEMI            reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    COMMA           reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    RSB             reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    COLON           reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)
    RBRACE          reduce using rule 113 (primary_no_array_creation_exp -> TRUE .)


state 78

    (114) primary_no_array_creation_exp -> FALSE .

    LSB             reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    LPAREN          reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    PLUSPLUS        reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    MINUSMINUS      reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    EQUAL           reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    STAR            reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    SLASH           reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    PERCENT         reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    PLUS            reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    MINUS           reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    LSHIFT          reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    RSHIFT          reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    LT              reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    GT              reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    LEQ             reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    GEQ             reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    IS              reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    EQEQUAL         reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    NOTEQUAL        reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    AMPER           reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    CIRCUMFLEX      reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    PIPE            reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    AMPERAMPER      reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    HOOK            reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    PIPEPIPE        reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    RPAREN          reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    SEMI            reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    COMMA           reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    RSB             reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    COLON           reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)
    RBRACE          reduce using rule 114 (primary_no_array_creation_exp -> FALSE .)


state 79

    (115) primary_no_array_creation_exp -> NULL .

    LSB             reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    LPAREN          reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    PLUSPLUS        reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    MINUSMINUS      reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    EQUAL           reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    STAR            reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    SLASH           reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    PERCENT         reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    PLUS            reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    MINUS           reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    LSHIFT          reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    RSHIFT          reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    LT              reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    GT              reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    LEQ             reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    GEQ             reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    IS              reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    EQEQUAL         reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    NOTEQUAL        reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    AMPER           reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    CIRCUMFLEX      reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    PIPE            reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    AMPERAMPER      reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    HOOK            reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    PIPEPIPE        reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    RPAREN          reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    SEMI            reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    COMMA           reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    RSB             reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    COLON           reduce using rule 115 (primary_no_array_creation_exp -> NULL .)
    RBRACE          reduce using rule 115 (primary_no_array_creation_exp -> NULL .)


state 80

    (116) primary_no_array_creation_exp -> INTNUM .

    LSB             reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    LPAREN          reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    PLUSPLUS        reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    MINUSMINUS      reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    EQUAL           reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    STAR            reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    SLASH           reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    PERCENT         reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    PLUS            reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    MINUS           reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    LSHIFT          reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    RSHIFT          reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    LT              reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    GT              reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    LEQ             reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    GEQ             reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    IS              reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    EQEQUAL         reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    NOTEQUAL        reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    AMPER           reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    CIRCUMFLEX      reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    PIPE            reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    AMPERAMPER      reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    HOOK            reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    PIPEPIPE        reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    RPAREN          reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    SEMI            reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    COMMA           reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    RSB             reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    COLON           reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)
    RBRACE          reduce using rule 116 (primary_no_array_creation_exp -> INTNUM .)


state 81

    (117) primary_no_array_creation_exp -> HEXADECIMALNUM .

    LSB             reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    LPAREN          reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    PLUSPLUS        reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    MINUSMINUS      reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    EQUAL           reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    STAR            reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    SLASH           reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    PERCENT         reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    PLUS            reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    MINUS           reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    LSHIFT          reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    RSHIFT          reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    LT              reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    GT              reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    LEQ             reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    GEQ             reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    IS              reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    EQEQUAL         reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    NOTEQUAL        reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    AMPER           reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    CIRCUMFLEX      reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    PIPE            reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    AMPERAMPER      reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    HOOK            reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    PIPEPIPE        reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    RPAREN          reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    SEMI            reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    COMMA           reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    RSB             reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    COLON           reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    RBRACE          reduce using rule 117 (primary_no_array_creation_exp -> HEXADECIMALNUM .)


state 82

    (118) primary_no_array_creation_exp -> BINARYNUM .

    LSB             reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    LPAREN          reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    PLUSPLUS        reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    MINUSMINUS      reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    EQUAL           reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    STAR            reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    SLASH           reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    PERCENT         reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    PLUS            reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    MINUS           reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    LSHIFT          reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    RSHIFT          reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    LT              reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    GT              reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    LEQ             reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    GEQ             reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    IS              reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    EQEQUAL         reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    NOTEQUAL        reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    AMPER           reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    CIRCUMFLEX      reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    PIPE            reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    AMPERAMPER      reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    HOOK            reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    PIPEPIPE        reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    RPAREN          reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    SEMI            reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    COMMA           reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    RSB             reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    COLON           reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)
    RBRACE          reduce using rule 118 (primary_no_array_creation_exp -> BINARYNUM .)


state 83

    (119) primary_no_array_creation_exp -> FLOATNUM .

    LSB             reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    LPAREN          reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    PLUSPLUS        reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    MINUSMINUS      reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    EQUAL           reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    STAR            reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    SLASH           reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    PERCENT         reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    PLUS            reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    MINUS           reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    LSHIFT          reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    RSHIFT          reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    LT              reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    GT              reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    LEQ             reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    GEQ             reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    IS              reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    EQEQUAL         reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    NOTEQUAL        reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    AMPER           reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    CIRCUMFLEX      reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    PIPE            reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    AMPERAMPER      reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    HOOK            reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    PIPEPIPE        reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    RPAREN          reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    SEMI            reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    COMMA           reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    RSB             reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    COLON           reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)
    RBRACE          reduce using rule 119 (primary_no_array_creation_exp -> FLOATNUM .)


state 84

    (120) primary_no_array_creation_exp -> DOUBLENUM .

    LSB             reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    LPAREN          reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    PLUSPLUS        reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    MINUSMINUS      reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    EQUAL           reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    STAR            reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    SLASH           reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    PERCENT         reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    PLUS            reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    MINUS           reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    LSHIFT          reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    RSHIFT          reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    LT              reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    GT              reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    LEQ             reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    GEQ             reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    IS              reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    EQEQUAL         reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    NOTEQUAL        reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    AMPER           reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    CIRCUMFLEX      reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    PIPE            reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    AMPERAMPER      reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    HOOK            reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    PIPEPIPE        reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    RPAREN          reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    SEMI            reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    COMMA           reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    RSB             reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    COLON           reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)
    RBRACE          reduce using rule 120 (primary_no_array_creation_exp -> DOUBLENUM .)


state 85

    (121) primary_no_array_creation_exp -> DECIMALNUM .

    LSB             reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    LPAREN          reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    PLUSPLUS        reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    MINUSMINUS      reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    EQUAL           reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    STAR            reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    SLASH           reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    PERCENT         reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    PLUS            reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    MINUS           reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    LSHIFT          reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    RSHIFT          reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    LT              reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    GT              reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    LEQ             reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    GEQ             reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    IS              reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    EQEQUAL         reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    NOTEQUAL        reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    AMPER           reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    CIRCUMFLEX      reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    PIPE            reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    AMPERAMPER      reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    HOOK            reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    PIPEPIPE        reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    RPAREN          reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    SEMI            reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    COMMA           reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    RSB             reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    COLON           reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)
    RBRACE          reduce using rule 121 (primary_no_array_creation_exp -> DECIMALNUM .)


state 86

    (122) primary_no_array_creation_exp -> CHARLITERAL .

    LSB             reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    LPAREN          reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    PLUSPLUS        reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    MINUSMINUS      reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    EQUAL           reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    STAR            reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    SLASH           reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    PERCENT         reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    PLUS            reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    MINUS           reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    LSHIFT          reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    RSHIFT          reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    LT              reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    GT              reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    LEQ             reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    GEQ             reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    IS              reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    EQEQUAL         reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    NOTEQUAL        reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    AMPER           reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    CIRCUMFLEX      reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    PIPE            reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    AMPERAMPER      reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    HOOK            reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    PIPEPIPE        reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    RPAREN          reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    SEMI            reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    COMMA           reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    RSB             reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    COLON           reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)
    RBRACE          reduce using rule 122 (primary_no_array_creation_exp -> CHARLITERAL .)


state 87

    (123) primary_no_array_creation_exp -> STRINGLITERAL .

    LSB             reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    LPAREN          reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    PLUSPLUS        reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    MINUSMINUS      reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    EQUAL           reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    STAR            reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    SLASH           reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    PERCENT         reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    PLUS            reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    MINUS           reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    LSHIFT          reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    RSHIFT          reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    LT              reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    GT              reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    LEQ             reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    GEQ             reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    IS              reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    EQEQUAL         reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    NOTEQUAL        reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    AMPER           reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    CIRCUMFLEX      reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    PIPE            reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    AMPERAMPER      reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    HOOK            reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    PIPEPIPE        reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    RPAREN          reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    SEMI            reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    COMMA           reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    RSB             reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    COLON           reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)
    RBRACE          reduce using rule 123 (primary_no_array_creation_exp -> STRINGLITERAL .)


state 88

    (125) primary_no_array_creation_exp -> parenthesized_exp .

    LSB             reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    LPAREN          reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    PLUSPLUS        reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    MINUSMINUS      reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    EQUAL           reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    STAR            reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    SLASH           reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    PERCENT         reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    PLUS            reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    MINUS           reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    LSHIFT          reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    RSHIFT          reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    LT              reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    GT              reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    LEQ             reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    GEQ             reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    IS              reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    EQEQUAL         reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    NOTEQUAL        reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    AMPER           reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    CIRCUMFLEX      reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    PIPE            reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    AMPERAMPER      reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    HOOK            reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    PIPEPIPE        reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    RPAREN          reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    SEMI            reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    COMMA           reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    RSB             reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    COLON           reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)
    RBRACE          reduce using rule 125 (primary_no_array_creation_exp -> parenthesized_exp .)


state 89

    (130) primary_no_array_creation_exp -> element_access .

    LSB             reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    LPAREN          reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    PLUSPLUS        reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    MINUSMINUS      reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    EQUAL           reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    STAR            reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    SLASH           reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    PERCENT         reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    PLUS            reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    MINUS           reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    LSHIFT          reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    RSHIFT          reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    LT              reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    GT              reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    LEQ             reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    GEQ             reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    IS              reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    EQEQUAL         reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    NOTEQUAL        reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    AMPER           reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    CIRCUMFLEX      reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    PIPE            reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    AMPERAMPER      reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    HOOK            reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    PIPEPIPE        reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    RPAREN          reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    SEMI            reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    COMMA           reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    RSB             reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    COLON           reduce using rule 130 (primary_no_array_creation_exp -> element_access .)
    RBRACE          reduce using rule 130 (primary_no_array_creation_exp -> element_access .)


state 90

    (132) primary_no_array_creation_exp -> THIS .

    LSB             reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    LPAREN          reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    PLUSPLUS        reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    MINUSMINUS      reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    EQUAL           reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    STAR            reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    SLASH           reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    PERCENT         reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    PLUS            reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    MINUS           reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    LSHIFT          reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    RSHIFT          reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    LT              reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    GT              reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    LEQ             reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    GEQ             reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    IS              reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    EQEQUAL         reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    NOTEQUAL        reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    AMPER           reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    CIRCUMFLEX      reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    PIPE            reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    AMPERAMPER      reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    HOOK            reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    PIPEPIPE        reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    RPAREN          reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    SEMI            reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    COMMA           reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    RSB             reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    COLON           reduce using rule 132 (primary_no_array_creation_exp -> THIS .)
    RBRACE          reduce using rule 132 (primary_no_array_creation_exp -> THIS .)


state 91

    (136) primary_no_array_creation_exp -> typeof_exp .

    LSB             reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    LPAREN          reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    PLUSPLUS        reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    MINUSMINUS      reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    EQUAL           reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    STAR            reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    SLASH           reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    PERCENT         reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    PLUS            reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    MINUS           reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    LSHIFT          reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    RSHIFT          reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    LT              reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    GT              reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    LEQ             reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    GEQ             reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    IS              reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    EQEQUAL         reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    NOTEQUAL        reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    AMPER           reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    CIRCUMFLEX      reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    PIPE            reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    AMPERAMPER      reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    HOOK            reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    PIPEPIPE        reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    RPAREN          reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    SEMI            reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    COMMA           reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    RSB             reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    COLON           reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)
    RBRACE          reduce using rule 136 (primary_no_array_creation_exp -> typeof_exp .)


state 92

    (138) primary_no_array_creation_exp -> sizeof_exp .

    LSB             reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    LPAREN          reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    PLUSPLUS        reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    MINUSMINUS      reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    EQUAL           reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    STAR            reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    SLASH           reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    PERCENT         reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    PLUS            reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    MINUS           reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    LSHIFT          reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    RSHIFT          reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    LT              reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    GT              reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    LEQ             reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    GEQ             reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    IS              reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    EQEQUAL         reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    NOTEQUAL        reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    AMPER           reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    CIRCUMFLEX      reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    PIPE            reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    AMPERAMPER      reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    HOOK            reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    PIPEPIPE        reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    RPAREN          reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    SEMI            reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    COMMA           reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    RSB             reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    COLON           reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)
    RBRACE          reduce using rule 138 (primary_no_array_creation_exp -> sizeof_exp .)


state 93

    (140) primary_no_array_creation_exp -> default_exp .

    LSB             reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    LPAREN          reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    PLUSPLUS        reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    MINUSMINUS      reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    EQUAL           reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    STAR            reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    SLASH           reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    PERCENT         reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    PLUS            reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    MINUS           reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    LSHIFT          reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    RSHIFT          reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    LT              reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    GT              reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    LEQ             reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    GEQ             reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    IS              reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    EQEQUAL         reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    NOTEQUAL        reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    AMPER           reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    CIRCUMFLEX      reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    PIPE            reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    AMPERAMPER      reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    HOOK            reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    PIPEPIPE        reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    RPAREN          reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    SEMI            reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    COMMA           reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    RSB             reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    COLON           reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)
    RBRACE          reduce using rule 140 (primary_no_array_creation_exp -> default_exp .)


state 94

    (137) typeof_exp -> TYPEOF . LPAREN type RPAREN

    LPAREN          shift and go to state 150


state 95

    (139) sizeof_exp -> SIZEOF . LPAREN value_type RPAREN

    LPAREN          shift and go to state 151


state 96

    (141) default_exp -> DEFAULT . LPAREN type RPAREN

    LPAREN          shift and go to state 152


state 97

    (21) signature -> type ID LPAREN . param_list RPAREN
    (22) signature -> type ID LPAREN . RPAREN
    (23) param_list -> . type ID
    (24) param_list -> . type ID COMMA param_list
    (5) type -> . class_type
    (6) type -> . value_type
    (7) class_type -> . OBJECT
    (8) class_type -> . STRING
    (9) class_type -> . type_name
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (3) type_name -> . ID
    (4) type_name -> . type_name DOT ID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL

    RPAREN          shift and go to state 155
    OBJECT          shift and go to state 8
    STRING          shift and go to state 9
    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    ID              shift and go to state 5
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20

    type                           shift and go to state 153
    param_list                     shift and go to state 154
    class_type                     shift and go to state 6
    value_type                     shift and go to state 7
    type_name                      shift and go to state 10
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12

state 98

    (4) type_name -> type_name DOT ID .

    DOT             reduce using rule 4 (type_name -> type_name DOT ID .)
    ID              reduce using rule 4 (type_name -> type_name DOT ID .)
    RPAREN          reduce using rule 4 (type_name -> type_name DOT ID .)
    LPAREN          reduce using rule 4 (type_name -> type_name DOT ID .)
    LT              reduce using rule 4 (type_name -> type_name DOT ID .)
    GT              reduce using rule 4 (type_name -> type_name DOT ID .)
    LEQ             reduce using rule 4 (type_name -> type_name DOT ID .)
    GEQ             reduce using rule 4 (type_name -> type_name DOT ID .)
    IS              reduce using rule 4 (type_name -> type_name DOT ID .)
    EQEQUAL         reduce using rule 4 (type_name -> type_name DOT ID .)
    NOTEQUAL        reduce using rule 4 (type_name -> type_name DOT ID .)
    AMPER           reduce using rule 4 (type_name -> type_name DOT ID .)
    CIRCUMFLEX      reduce using rule 4 (type_name -> type_name DOT ID .)
    PIPE            reduce using rule 4 (type_name -> type_name DOT ID .)
    AMPERAMPER      reduce using rule 4 (type_name -> type_name DOT ID .)
    HOOK            reduce using rule 4 (type_name -> type_name DOT ID .)
    PIPEPIPE        reduce using rule 4 (type_name -> type_name DOT ID .)
    SEMI            reduce using rule 4 (type_name -> type_name DOT ID .)
    COMMA           reduce using rule 4 (type_name -> type_name DOT ID .)
    RSB             reduce using rule 4 (type_name -> type_name DOT ID .)
    COLON           reduce using rule 4 (type_name -> type_name DOT ID .)
    RBRACE          reduce using rule 4 (type_name -> type_name DOT ID .)


state 99

    (46) block -> LBRACE statement_list RBRACE .

    OBJECT          reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    STRING          reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    VOID            reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    INT             reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    LONG            reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    CHAR            reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    DOUBLE          reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    DECIMAL         reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    CONST           reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    SEMI            reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    SWITCH          reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    DO              reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    FOREACH         reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    NEW             reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    PLUSPLUS        reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    MINUSMINUS      reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    TRUE            reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    FALSE           reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    NULL            reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    INTNUM          reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    HEXADECIMALNUM  reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    BINARYNUM       reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    FLOATNUM        reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    DOUBLENUM       reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    DECIMALNUM      reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    CHARLITERAL     reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    STRINGLITERAL   reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    THIS            reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    TYPEOF          reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    SIZEOF          reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    DEFAULT         reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    CASE            reduce using rule 46 (block -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 46 (block -> LBRACE statement_list RBRACE .)


state 100

    (26) statement_list -> statement statement_list .

    RBRACE          reduce using rule 26 (statement_list -> statement statement_list .)
    CASE            reduce using rule 26 (statement_list -> statement statement_list .)
    DEFAULT         reduce using rule 26 (statement_list -> statement statement_list .)


state 101

    (29) declaration_statement -> const_declaration SEMI .

    CONST           reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    LBRACE          reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    SEMI            reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    IF              reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    SWITCH          reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    WHILE           reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    DO              reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    FOR             reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    FOREACH         reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    BREAK           reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    CONTINUE        reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    RETURN          reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    OBJECT          reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    STRING          reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    BOOL            reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    VOID            reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    NEW             reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    PLUSPLUS        reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    MINUSMINUS      reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    ID              reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    INT             reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    LONG            reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    CHAR            reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    FLOAT           reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    DOUBLE          reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    DECIMAL         reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    TRUE            reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    FALSE           reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    NULL            reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    INTNUM          reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    HEXADECIMALNUM  reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    BINARYNUM       reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    FLOATNUM        reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    DOUBLENUM       reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    DECIMALNUM      reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    CHARLITERAL     reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    STRINGLITERAL   reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    THIS            reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    LPAREN          reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    TYPEOF          reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    SIZEOF          reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    DEFAULT         reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    RBRACE          reduce using rule 29 (declaration_statement -> const_declaration SEMI .)
    CASE            reduce using rule 29 (declaration_statement -> const_declaration SEMI .)


state 102

    (30) declaration_statement -> var_declaration SEMI .

    CONST           reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    LBRACE          reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    SEMI            reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    IF              reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    SWITCH          reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    WHILE           reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    DO              reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    FOR             reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    FOREACH         reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    BREAK           reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    CONTINUE        reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    RETURN          reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    OBJECT          reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    STRING          reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    BOOL            reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    VOID            reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    NEW             reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    PLUSPLUS        reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    MINUSMINUS      reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    ID              reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    INT             reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    LONG            reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    CHAR            reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    FLOAT           reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    DOUBLE          reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    DECIMAL         reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    TRUE            reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    FALSE           reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    NULL            reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    INTNUM          reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    HEXADECIMALNUM  reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    BINARYNUM       reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    FLOATNUM        reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    DOUBLENUM       reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    DECIMALNUM      reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    CHARLITERAL     reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    STRINGLITERAL   reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    THIS            reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    LPAREN          reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    TYPEOF          reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    SIZEOF          reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    DEFAULT         reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    RBRACE          reduce using rule 30 (declaration_statement -> var_declaration SEMI .)
    CASE            reduce using rule 30 (declaration_statement -> var_declaration SEMI .)


state 103

    (31) const_declaration -> CONST type . const_declarators
    (32) const_declarators -> . const_declarator
    (33) const_declarators -> . const_declarator COMMA const_declarators
    (34) const_declarator -> . ID EQUAL exp

    ID              shift and go to state 158

    const_declarators              shift and go to state 156
    const_declarator               shift and go to state 157

state 104

    (35) var_declaration -> type var_declarators .

    SEMI            reduce using rule 35 (var_declaration -> type var_declarators .)
    COMMA           reduce using rule 35 (var_declaration -> type var_declarators .)


state 105

    (36) var_declarators -> var_declarator .
    (37) var_declarators -> var_declarator . COMMA var_declarators

  ! shift/reduce conflict for COMMA resolved as shift
    SEMI            reduce using rule 36 (var_declarators -> var_declarator .)
    COMMA           shift and go to state 159

  ! COMMA           [ reduce using rule 36 (var_declarators -> var_declarator .) ]


state 106

    (38) var_declarator -> ID .
    (39) var_declarator -> ID . EQUAL exp

    COMMA           reduce using rule 38 (var_declarator -> ID .)
    SEMI            reduce using rule 38 (var_declarator -> ID .)
    EQUAL           shift and go to state 160


state 107

    (49) exp_statement -> statement_exp SEMI .

    CONST           reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    LBRACE          reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    SEMI            reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    IF              reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    SWITCH          reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    WHILE           reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    DO              reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    FOR             reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    FOREACH         reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    BREAK           reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    CONTINUE        reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    RETURN          reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    OBJECT          reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    STRING          reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    BOOL            reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    VOID            reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    NEW             reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    PLUSPLUS        reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    MINUSMINUS      reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    ID              reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    INT             reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    LONG            reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    CHAR            reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    FLOAT           reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    DOUBLE          reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    DECIMAL         reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    TRUE            reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    FALSE           reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    NULL            reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    INTNUM          reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    HEXADECIMALNUM  reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    BINARYNUM       reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    FLOATNUM        reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    DOUBLENUM       reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    DECIMALNUM      reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    CHARLITERAL     reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    STRINGLITERAL   reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    THIS            reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    LPAREN          reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    TYPEOF          reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    SIZEOF          reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    DEFAULT         reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    RBRACE          reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    CASE            reduce using rule 49 (exp_statement -> statement_exp SEMI .)
    ELSE            reduce using rule 49 (exp_statement -> statement_exp SEMI .)


state 108

    (72) if_statement -> IF LPAREN . exp RPAREN embedded_statement
    (73) if_statement -> IF LPAREN . exp RPAREN embedded_statement ELSE embedded_statement
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    exp                            shift and go to state 161
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 109

    (148) cast_exp -> LPAREN type . RPAREN unary_exp

    RPAREN          shift and go to state 162


state 110

    (183) assignment -> unary_exp . EQUAL exp
    (182) multiplicative_exp -> unary_exp .

    EQUAL           shift and go to state 146
    STAR            reduce using rule 182 (multiplicative_exp -> unary_exp .)
    SLASH           reduce using rule 182 (multiplicative_exp -> unary_exp .)
    PERCENT         reduce using rule 182 (multiplicative_exp -> unary_exp .)
    PLUS            reduce using rule 182 (multiplicative_exp -> unary_exp .)
    MINUS           reduce using rule 182 (multiplicative_exp -> unary_exp .)
    LSHIFT          reduce using rule 182 (multiplicative_exp -> unary_exp .)
    RSHIFT          reduce using rule 182 (multiplicative_exp -> unary_exp .)
    LT              reduce using rule 182 (multiplicative_exp -> unary_exp .)
    GT              reduce using rule 182 (multiplicative_exp -> unary_exp .)
    LEQ             reduce using rule 182 (multiplicative_exp -> unary_exp .)
    GEQ             reduce using rule 182 (multiplicative_exp -> unary_exp .)
    IS              reduce using rule 182 (multiplicative_exp -> unary_exp .)
    EQEQUAL         reduce using rule 182 (multiplicative_exp -> unary_exp .)
    NOTEQUAL        reduce using rule 182 (multiplicative_exp -> unary_exp .)
    AMPER           reduce using rule 182 (multiplicative_exp -> unary_exp .)
    CIRCUMFLEX      reduce using rule 182 (multiplicative_exp -> unary_exp .)
    PIPE            reduce using rule 182 (multiplicative_exp -> unary_exp .)
    AMPERAMPER      reduce using rule 182 (multiplicative_exp -> unary_exp .)
    HOOK            reduce using rule 182 (multiplicative_exp -> unary_exp .)
    PIPEPIPE        reduce using rule 182 (multiplicative_exp -> unary_exp .)
    RPAREN          reduce using rule 182 (multiplicative_exp -> unary_exp .)
    SEMI            reduce using rule 182 (multiplicative_exp -> unary_exp .)
    COMMA           reduce using rule 182 (multiplicative_exp -> unary_exp .)
    RSB             reduce using rule 182 (multiplicative_exp -> unary_exp .)
    COLON           reduce using rule 182 (multiplicative_exp -> unary_exp .)
    RBRACE          reduce using rule 182 (multiplicative_exp -> unary_exp .)


state 111

    (126) parenthesized_exp -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 163


state 112

    (149) exp -> non_assignment_exp .

    RPAREN          reduce using rule 149 (exp -> non_assignment_exp .)
    SEMI            reduce using rule 149 (exp -> non_assignment_exp .)
    COMMA           reduce using rule 149 (exp -> non_assignment_exp .)
    RSB             reduce using rule 149 (exp -> non_assignment_exp .)
    COLON           reduce using rule 149 (exp -> non_assignment_exp .)
    RBRACE          reduce using rule 149 (exp -> non_assignment_exp .)


state 113

    (150) exp -> assignment .

    RPAREN          reduce using rule 150 (exp -> assignment .)
    SEMI            reduce using rule 150 (exp -> assignment .)
    COMMA           reduce using rule 150 (exp -> assignment .)
    RSB             reduce using rule 150 (exp -> assignment .)
    COLON           reduce using rule 150 (exp -> assignment .)
    RBRACE          reduce using rule 150 (exp -> assignment .)


state 114

    (151) non_assignment_exp -> conditional_exp .

    RPAREN          reduce using rule 151 (non_assignment_exp -> conditional_exp .)
    SEMI            reduce using rule 151 (non_assignment_exp -> conditional_exp .)
    COMMA           reduce using rule 151 (non_assignment_exp -> conditional_exp .)
    RSB             reduce using rule 151 (non_assignment_exp -> conditional_exp .)
    COLON           reduce using rule 151 (non_assignment_exp -> conditional_exp .)
    RBRACE          reduce using rule 151 (non_assignment_exp -> conditional_exp .)


state 115

    (152) conditional_exp -> conditional_or_exp . HOOK exp COLON exp
    (153) conditional_exp -> conditional_or_exp .
    (154) conditional_or_exp -> conditional_or_exp . PIPEPIPE conditional_and_exp

    HOOK            shift and go to state 164
    RPAREN          reduce using rule 153 (conditional_exp -> conditional_or_exp .)
    SEMI            reduce using rule 153 (conditional_exp -> conditional_or_exp .)
    COMMA           reduce using rule 153 (conditional_exp -> conditional_or_exp .)
    RSB             reduce using rule 153 (conditional_exp -> conditional_or_exp .)
    COLON           reduce using rule 153 (conditional_exp -> conditional_or_exp .)
    RBRACE          reduce using rule 153 (conditional_exp -> conditional_or_exp .)
    PIPEPIPE        shift and go to state 165


state 116

    (144) unary_exp -> primary_exp .
    (128) invocation_exp -> primary_exp . LPAREN RPAREN
    (129) invocation_exp -> primary_exp . LPAREN arg_list RPAREN
    (66) post_increment_exp -> primary_exp . PLUSPLUS
    (67) post_decrement_exp -> primary_exp . MINUSMINUS

    EQUAL           reduce using rule 144 (unary_exp -> primary_exp .)
    STAR            reduce using rule 144 (unary_exp -> primary_exp .)
    SLASH           reduce using rule 144 (unary_exp -> primary_exp .)
    PERCENT         reduce using rule 144 (unary_exp -> primary_exp .)
    PLUS            reduce using rule 144 (unary_exp -> primary_exp .)
    MINUS           reduce using rule 144 (unary_exp -> primary_exp .)
    LSHIFT          reduce using rule 144 (unary_exp -> primary_exp .)
    RSHIFT          reduce using rule 144 (unary_exp -> primary_exp .)
    LT              reduce using rule 144 (unary_exp -> primary_exp .)
    GT              reduce using rule 144 (unary_exp -> primary_exp .)
    LEQ             reduce using rule 144 (unary_exp -> primary_exp .)
    GEQ             reduce using rule 144 (unary_exp -> primary_exp .)
    IS              reduce using rule 144 (unary_exp -> primary_exp .)
    EQEQUAL         reduce using rule 144 (unary_exp -> primary_exp .)
    NOTEQUAL        reduce using rule 144 (unary_exp -> primary_exp .)
    AMPER           reduce using rule 144 (unary_exp -> primary_exp .)
    CIRCUMFLEX      reduce using rule 144 (unary_exp -> primary_exp .)
    PIPE            reduce using rule 144 (unary_exp -> primary_exp .)
    AMPERAMPER      reduce using rule 144 (unary_exp -> primary_exp .)
    HOOK            reduce using rule 144 (unary_exp -> primary_exp .)
    PIPEPIPE        reduce using rule 144 (unary_exp -> primary_exp .)
    RPAREN          reduce using rule 144 (unary_exp -> primary_exp .)
    SEMI            reduce using rule 144 (unary_exp -> primary_exp .)
    COMMA           reduce using rule 144 (unary_exp -> primary_exp .)
    RSB             reduce using rule 144 (unary_exp -> primary_exp .)
    COLON           reduce using rule 144 (unary_exp -> primary_exp .)
    RBRACE          reduce using rule 144 (unary_exp -> primary_exp .)
    LPAREN          shift and go to state 142
    PLUSPLUS        shift and go to state 143
    MINUSMINUS      shift and go to state 144


state 117

    (145) unary_exp -> pre_increment_exp .

    EQUAL           reduce using rule 145 (unary_exp -> pre_increment_exp .)
    STAR            reduce using rule 145 (unary_exp -> pre_increment_exp .)
    SLASH           reduce using rule 145 (unary_exp -> pre_increment_exp .)
    PERCENT         reduce using rule 145 (unary_exp -> pre_increment_exp .)
    PLUS            reduce using rule 145 (unary_exp -> pre_increment_exp .)
    MINUS           reduce using rule 145 (unary_exp -> pre_increment_exp .)
    LSHIFT          reduce using rule 145 (unary_exp -> pre_increment_exp .)
    RSHIFT          reduce using rule 145 (unary_exp -> pre_increment_exp .)
    LT              reduce using rule 145 (unary_exp -> pre_increment_exp .)
    GT              reduce using rule 145 (unary_exp -> pre_increment_exp .)
    LEQ             reduce using rule 145 (unary_exp -> pre_increment_exp .)
    GEQ             reduce using rule 145 (unary_exp -> pre_increment_exp .)
    IS              reduce using rule 145 (unary_exp -> pre_increment_exp .)
    EQEQUAL         reduce using rule 145 (unary_exp -> pre_increment_exp .)
    NOTEQUAL        reduce using rule 145 (unary_exp -> pre_increment_exp .)
    AMPER           reduce using rule 145 (unary_exp -> pre_increment_exp .)
    CIRCUMFLEX      reduce using rule 145 (unary_exp -> pre_increment_exp .)
    PIPE            reduce using rule 145 (unary_exp -> pre_increment_exp .)
    AMPERAMPER      reduce using rule 145 (unary_exp -> pre_increment_exp .)
    HOOK            reduce using rule 145 (unary_exp -> pre_increment_exp .)
    PIPEPIPE        reduce using rule 145 (unary_exp -> pre_increment_exp .)
    RPAREN          reduce using rule 145 (unary_exp -> pre_increment_exp .)
    SEMI            reduce using rule 145 (unary_exp -> pre_increment_exp .)
    COMMA           reduce using rule 145 (unary_exp -> pre_increment_exp .)
    RSB             reduce using rule 145 (unary_exp -> pre_increment_exp .)
    COLON           reduce using rule 145 (unary_exp -> pre_increment_exp .)
    RBRACE          reduce using rule 145 (unary_exp -> pre_increment_exp .)


state 118

    (146) unary_exp -> pre_decrement_exp .

    EQUAL           reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    STAR            reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    SLASH           reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    PERCENT         reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    PLUS            reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    MINUS           reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    LSHIFT          reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    RSHIFT          reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    LT              reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    GT              reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    LEQ             reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    GEQ             reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    IS              reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    EQEQUAL         reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    NOTEQUAL        reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    AMPER           reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    CIRCUMFLEX      reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    PIPE            reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    AMPERAMPER      reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    HOOK            reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    PIPEPIPE        reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    RPAREN          reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    SEMI            reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    COMMA           reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    RSB             reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    COLON           reduce using rule 146 (unary_exp -> pre_decrement_exp .)
    RBRACE          reduce using rule 146 (unary_exp -> pre_decrement_exp .)


state 119

    (155) conditional_or_exp -> conditional_and_exp .
    (156) conditional_and_exp -> conditional_and_exp . AMPERAMPER inclusive_or_exp

    HOOK            reduce using rule 155 (conditional_or_exp -> conditional_and_exp .)
    PIPEPIPE        reduce using rule 155 (conditional_or_exp -> conditional_and_exp .)
    RPAREN          reduce using rule 155 (conditional_or_exp -> conditional_and_exp .)
    SEMI            reduce using rule 155 (conditional_or_exp -> conditional_and_exp .)
    COMMA           reduce using rule 155 (conditional_or_exp -> conditional_and_exp .)
    RSB             reduce using rule 155 (conditional_or_exp -> conditional_and_exp .)
    COLON           reduce using rule 155 (conditional_or_exp -> conditional_and_exp .)
    RBRACE          reduce using rule 155 (conditional_or_exp -> conditional_and_exp .)
    AMPERAMPER      shift and go to state 166


state 120

    (157) conditional_and_exp -> inclusive_or_exp .
    (158) inclusive_or_exp -> inclusive_or_exp . PIPE exclusive_or_exp

    AMPERAMPER      reduce using rule 157 (conditional_and_exp -> inclusive_or_exp .)
    HOOK            reduce using rule 157 (conditional_and_exp -> inclusive_or_exp .)
    PIPEPIPE        reduce using rule 157 (conditional_and_exp -> inclusive_or_exp .)
    RPAREN          reduce using rule 157 (conditional_and_exp -> inclusive_or_exp .)
    SEMI            reduce using rule 157 (conditional_and_exp -> inclusive_or_exp .)
    COMMA           reduce using rule 157 (conditional_and_exp -> inclusive_or_exp .)
    RSB             reduce using rule 157 (conditional_and_exp -> inclusive_or_exp .)
    COLON           reduce using rule 157 (conditional_and_exp -> inclusive_or_exp .)
    RBRACE          reduce using rule 157 (conditional_and_exp -> inclusive_or_exp .)
    PIPE            shift and go to state 167


state 121

    (127) primary_no_array_creation_exp -> invocation_exp .

    LSB             reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    LPAREN          reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    PLUSPLUS        reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    MINUSMINUS      reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    EQUAL           reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    STAR            reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    SLASH           reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    PERCENT         reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    PLUS            reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    MINUS           reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    LSHIFT          reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    RSHIFT          reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    LT              reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    GT              reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    LEQ             reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    GEQ             reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    IS              reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    EQEQUAL         reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    NOTEQUAL        reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    AMPER           reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    CIRCUMFLEX      reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    PIPE            reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    AMPERAMPER      reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    HOOK            reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    PIPEPIPE        reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    RPAREN          reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    SEMI            reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    COMMA           reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    RSB             reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    COLON           reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)
    RBRACE          reduce using rule 127 (primary_no_array_creation_exp -> invocation_exp .)


state 122

    (133) primary_no_array_creation_exp -> post_increment_exp .

    LSB             reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    LPAREN          reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    PLUSPLUS        reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    MINUSMINUS      reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    EQUAL           reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    STAR            reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    SLASH           reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    PERCENT         reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    PLUS            reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    MINUS           reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    LSHIFT          reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    RSHIFT          reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    LT              reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    GT              reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    LEQ             reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    GEQ             reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    IS              reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    EQEQUAL         reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    NOTEQUAL        reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    AMPER           reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    CIRCUMFLEX      reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    PIPE            reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    AMPERAMPER      reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    HOOK            reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    PIPEPIPE        reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    RPAREN          reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    SEMI            reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    COMMA           reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    RSB             reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    COLON           reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)
    RBRACE          reduce using rule 133 (primary_no_array_creation_exp -> post_increment_exp .)


state 123

    (134) primary_no_array_creation_exp -> post_decrement_exp .

    LSB             reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    LPAREN          reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    PLUSPLUS        reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    MINUSMINUS      reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    EQUAL           reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    STAR            reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    SLASH           reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    PERCENT         reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    PLUS            reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    MINUS           reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    LSHIFT          reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    RSHIFT          reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    LT              reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    GT              reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    LEQ             reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    GEQ             reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    IS              reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    EQEQUAL         reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    NOTEQUAL        reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    AMPER           reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    CIRCUMFLEX      reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    PIPE            reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    AMPERAMPER      reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    HOOK            reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    PIPEPIPE        reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    RPAREN          reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    SEMI            reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    COMMA           reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    RSB             reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    COLON           reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)
    RBRACE          reduce using rule 134 (primary_no_array_creation_exp -> post_decrement_exp .)


state 124

    (135) primary_no_array_creation_exp -> object_creation_exp .

    LSB             reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    LPAREN          reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    PLUSPLUS        reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    MINUSMINUS      reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    EQUAL           reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    STAR            reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    SLASH           reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    PERCENT         reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    PLUS            reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    MINUS           reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    LSHIFT          reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    RSHIFT          reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    LT              reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    GT              reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    LEQ             reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    GEQ             reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    IS              reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    EQEQUAL         reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    NOTEQUAL        reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    AMPER           reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    CIRCUMFLEX      reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    PIPE            reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    AMPERAMPER      reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    HOOK            reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    PIPEPIPE        reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    RPAREN          reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    SEMI            reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    COMMA           reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    RSB             reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    COLON           reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)
    RBRACE          reduce using rule 135 (primary_no_array_creation_exp -> object_creation_exp .)


state 125

    (159) inclusive_or_exp -> exclusive_or_exp .
    (160) exclusive_or_exp -> exclusive_or_exp . CIRCUMFLEX and_exp

    PIPE            reduce using rule 159 (inclusive_or_exp -> exclusive_or_exp .)
    AMPERAMPER      reduce using rule 159 (inclusive_or_exp -> exclusive_or_exp .)
    HOOK            reduce using rule 159 (inclusive_or_exp -> exclusive_or_exp .)
    PIPEPIPE        reduce using rule 159 (inclusive_or_exp -> exclusive_or_exp .)
    RPAREN          reduce using rule 159 (inclusive_or_exp -> exclusive_or_exp .)
    SEMI            reduce using rule 159 (inclusive_or_exp -> exclusive_or_exp .)
    COMMA           reduce using rule 159 (inclusive_or_exp -> exclusive_or_exp .)
    RSB             reduce using rule 159 (inclusive_or_exp -> exclusive_or_exp .)
    COLON           reduce using rule 159 (inclusive_or_exp -> exclusive_or_exp .)
    RBRACE          reduce using rule 159 (inclusive_or_exp -> exclusive_or_exp .)
    CIRCUMFLEX      shift and go to state 168


state 126

    (161) exclusive_or_exp -> and_exp .
    (162) and_exp -> and_exp . AMPER equality_exp

    CIRCUMFLEX      reduce using rule 161 (exclusive_or_exp -> and_exp .)
    PIPE            reduce using rule 161 (exclusive_or_exp -> and_exp .)
    AMPERAMPER      reduce using rule 161 (exclusive_or_exp -> and_exp .)
    HOOK            reduce using rule 161 (exclusive_or_exp -> and_exp .)
    PIPEPIPE        reduce using rule 161 (exclusive_or_exp -> and_exp .)
    RPAREN          reduce using rule 161 (exclusive_or_exp -> and_exp .)
    SEMI            reduce using rule 161 (exclusive_or_exp -> and_exp .)
    COMMA           reduce using rule 161 (exclusive_or_exp -> and_exp .)
    RSB             reduce using rule 161 (exclusive_or_exp -> and_exp .)
    COLON           reduce using rule 161 (exclusive_or_exp -> and_exp .)
    RBRACE          reduce using rule 161 (exclusive_or_exp -> and_exp .)
    AMPER           shift and go to state 169


state 127

    (163) and_exp -> equality_exp .
    (164) equality_exp -> equality_exp . EQEQUAL relational_exp
    (165) equality_exp -> equality_exp . NOTEQUAL relational_exp

    AMPER           reduce using rule 163 (and_exp -> equality_exp .)
    CIRCUMFLEX      reduce using rule 163 (and_exp -> equality_exp .)
    PIPE            reduce using rule 163 (and_exp -> equality_exp .)
    AMPERAMPER      reduce using rule 163 (and_exp -> equality_exp .)
    HOOK            reduce using rule 163 (and_exp -> equality_exp .)
    PIPEPIPE        reduce using rule 163 (and_exp -> equality_exp .)
    RPAREN          reduce using rule 163 (and_exp -> equality_exp .)
    SEMI            reduce using rule 163 (and_exp -> equality_exp .)
    COMMA           reduce using rule 163 (and_exp -> equality_exp .)
    RSB             reduce using rule 163 (and_exp -> equality_exp .)
    COLON           reduce using rule 163 (and_exp -> equality_exp .)
    RBRACE          reduce using rule 163 (and_exp -> equality_exp .)
    EQEQUAL         shift and go to state 170
    NOTEQUAL        shift and go to state 171


state 128

    (166) equality_exp -> relational_exp .
    (167) relational_exp -> relational_exp . LT shift_exp
    (168) relational_exp -> relational_exp . GT shift_exp
    (169) relational_exp -> relational_exp . LEQ shift_exp
    (170) relational_exp -> relational_exp . GEQ shift_exp
    (171) relational_exp -> relational_exp . IS type

    EQEQUAL         reduce using rule 166 (equality_exp -> relational_exp .)
    NOTEQUAL        reduce using rule 166 (equality_exp -> relational_exp .)
    AMPER           reduce using rule 166 (equality_exp -> relational_exp .)
    CIRCUMFLEX      reduce using rule 166 (equality_exp -> relational_exp .)
    PIPE            reduce using rule 166 (equality_exp -> relational_exp .)
    AMPERAMPER      reduce using rule 166 (equality_exp -> relational_exp .)
    HOOK            reduce using rule 166 (equality_exp -> relational_exp .)
    PIPEPIPE        reduce using rule 166 (equality_exp -> relational_exp .)
    RPAREN          reduce using rule 166 (equality_exp -> relational_exp .)
    SEMI            reduce using rule 166 (equality_exp -> relational_exp .)
    COMMA           reduce using rule 166 (equality_exp -> relational_exp .)
    RSB             reduce using rule 166 (equality_exp -> relational_exp .)
    COLON           reduce using rule 166 (equality_exp -> relational_exp .)
    RBRACE          reduce using rule 166 (equality_exp -> relational_exp .)
    LT              shift and go to state 172
    GT              shift and go to state 173
    LEQ             shift and go to state 174
    GEQ             shift and go to state 175
    IS              shift and go to state 176


state 129

    (172) relational_exp -> shift_exp .
    (173) shift_exp -> shift_exp . LSHIFT additive_exp
    (174) shift_exp -> shift_exp . RSHIFT additive_exp

    LT              reduce using rule 172 (relational_exp -> shift_exp .)
    GT              reduce using rule 172 (relational_exp -> shift_exp .)
    LEQ             reduce using rule 172 (relational_exp -> shift_exp .)
    GEQ             reduce using rule 172 (relational_exp -> shift_exp .)
    IS              reduce using rule 172 (relational_exp -> shift_exp .)
    EQEQUAL         reduce using rule 172 (relational_exp -> shift_exp .)
    NOTEQUAL        reduce using rule 172 (relational_exp -> shift_exp .)
    AMPER           reduce using rule 172 (relational_exp -> shift_exp .)
    CIRCUMFLEX      reduce using rule 172 (relational_exp -> shift_exp .)
    PIPE            reduce using rule 172 (relational_exp -> shift_exp .)
    AMPERAMPER      reduce using rule 172 (relational_exp -> shift_exp .)
    HOOK            reduce using rule 172 (relational_exp -> shift_exp .)
    PIPEPIPE        reduce using rule 172 (relational_exp -> shift_exp .)
    RPAREN          reduce using rule 172 (relational_exp -> shift_exp .)
    SEMI            reduce using rule 172 (relational_exp -> shift_exp .)
    COMMA           reduce using rule 172 (relational_exp -> shift_exp .)
    RSB             reduce using rule 172 (relational_exp -> shift_exp .)
    COLON           reduce using rule 172 (relational_exp -> shift_exp .)
    RBRACE          reduce using rule 172 (relational_exp -> shift_exp .)
    LSHIFT          shift and go to state 177
    RSHIFT          shift and go to state 178


state 130

    (175) shift_exp -> additive_exp .
    (176) additive_exp -> additive_exp . PLUS multiplicative_exp
    (177) additive_exp -> additive_exp . MINUS multiplicative_exp

    LSHIFT          reduce using rule 175 (shift_exp -> additive_exp .)
    RSHIFT          reduce using rule 175 (shift_exp -> additive_exp .)
    LT              reduce using rule 175 (shift_exp -> additive_exp .)
    GT              reduce using rule 175 (shift_exp -> additive_exp .)
    LEQ             reduce using rule 175 (shift_exp -> additive_exp .)
    GEQ             reduce using rule 175 (shift_exp -> additive_exp .)
    IS              reduce using rule 175 (shift_exp -> additive_exp .)
    EQEQUAL         reduce using rule 175 (shift_exp -> additive_exp .)
    NOTEQUAL        reduce using rule 175 (shift_exp -> additive_exp .)
    AMPER           reduce using rule 175 (shift_exp -> additive_exp .)
    CIRCUMFLEX      reduce using rule 175 (shift_exp -> additive_exp .)
    PIPE            reduce using rule 175 (shift_exp -> additive_exp .)
    AMPERAMPER      reduce using rule 175 (shift_exp -> additive_exp .)
    HOOK            reduce using rule 175 (shift_exp -> additive_exp .)
    PIPEPIPE        reduce using rule 175 (shift_exp -> additive_exp .)
    RPAREN          reduce using rule 175 (shift_exp -> additive_exp .)
    SEMI            reduce using rule 175 (shift_exp -> additive_exp .)
    COMMA           reduce using rule 175 (shift_exp -> additive_exp .)
    RSB             reduce using rule 175 (shift_exp -> additive_exp .)
    COLON           reduce using rule 175 (shift_exp -> additive_exp .)
    RBRACE          reduce using rule 175 (shift_exp -> additive_exp .)
    PLUS            shift and go to state 179
    MINUS           shift and go to state 180


state 131

    (178) additive_exp -> multiplicative_exp .
    (179) multiplicative_exp -> multiplicative_exp . STAR unary_exp
    (180) multiplicative_exp -> multiplicative_exp . SLASH unary_exp
    (181) multiplicative_exp -> multiplicative_exp . PERCENT unary_exp

    PLUS            reduce using rule 178 (additive_exp -> multiplicative_exp .)
    MINUS           reduce using rule 178 (additive_exp -> multiplicative_exp .)
    LSHIFT          reduce using rule 178 (additive_exp -> multiplicative_exp .)
    RSHIFT          reduce using rule 178 (additive_exp -> multiplicative_exp .)
    LT              reduce using rule 178 (additive_exp -> multiplicative_exp .)
    GT              reduce using rule 178 (additive_exp -> multiplicative_exp .)
    LEQ             reduce using rule 178 (additive_exp -> multiplicative_exp .)
    GEQ             reduce using rule 178 (additive_exp -> multiplicative_exp .)
    IS              reduce using rule 178 (additive_exp -> multiplicative_exp .)
    EQEQUAL         reduce using rule 178 (additive_exp -> multiplicative_exp .)
    NOTEQUAL        reduce using rule 178 (additive_exp -> multiplicative_exp .)
    AMPER           reduce using rule 178 (additive_exp -> multiplicative_exp .)
    CIRCUMFLEX      reduce using rule 178 (additive_exp -> multiplicative_exp .)
    PIPE            reduce using rule 178 (additive_exp -> multiplicative_exp .)
    AMPERAMPER      reduce using rule 178 (additive_exp -> multiplicative_exp .)
    HOOK            reduce using rule 178 (additive_exp -> multiplicative_exp .)
    PIPEPIPE        reduce using rule 178 (additive_exp -> multiplicative_exp .)
    RPAREN          reduce using rule 178 (additive_exp -> multiplicative_exp .)
    SEMI            reduce using rule 178 (additive_exp -> multiplicative_exp .)
    COMMA           reduce using rule 178 (additive_exp -> multiplicative_exp .)
    RSB             reduce using rule 178 (additive_exp -> multiplicative_exp .)
    COLON           reduce using rule 178 (additive_exp -> multiplicative_exp .)
    RBRACE          reduce using rule 178 (additive_exp -> multiplicative_exp .)
    STAR            shift and go to state 181
    SLASH           shift and go to state 182
    PERCENT         shift and go to state 183


state 132

    (74) switch_statement -> SWITCH LPAREN . exp RPAREN LBRACE switch_body RBRACE
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    exp                            shift and go to state 184
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 133

    (86) while_statement -> WHILE LPAREN . exp RPAREN embedded_statement
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    exp                            shift and go to state 185
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 134

    (87) do_statement -> DO embedded_statement . WHILE LPAREN exp RPAREN SEMI

    WHILE           shift and go to state 186


state 135

    (124) primary_no_array_creation_exp -> ID .

    LSB             reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    LPAREN          reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    PLUSPLUS        reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    MINUSMINUS      reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    EQUAL           reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    STAR            reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    SLASH           reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    PERCENT         reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    PLUS            reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    MINUS           reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    LSHIFT          reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    RSHIFT          reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    LT              reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    GT              reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    LEQ             reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    GEQ             reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    IS              reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    EQEQUAL         reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    NOTEQUAL        reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    AMPER           reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    CIRCUMFLEX      reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    PIPE            reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    AMPERAMPER      reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    HOOK            reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    PIPEPIPE        reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    SEMI            reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    RPAREN          reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    COMMA           reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    RSB             reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    COLON           reduce using rule 124 (primary_no_array_creation_exp -> ID .)
    RBRACE          reduce using rule 124 (primary_no_array_creation_exp -> ID .)


state 136

    (88) for_statement -> FOR LPAREN . for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> FOR LPAREN . for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> FOR LPAREN . for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> FOR LPAREN . for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> FOR LPAREN . SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> FOR LPAREN . SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> FOR LPAREN . SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> FOR LPAREN . SEMI SEMI RPAREN embedded_statement
    (96) for_initializer -> . var_declaration
    (97) for_initializer -> . var_declaration COMMA for_initializer
    (35) var_declaration -> . type var_declarators
    (5) type -> . class_type
    (6) type -> . value_type
    (7) class_type -> . OBJECT
    (8) class_type -> . STRING
    (9) class_type -> . type_name
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (3) type_name -> . ID
    (4) type_name -> . type_name DOT ID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL

    SEMI            shift and go to state 188
    OBJECT          shift and go to state 8
    STRING          shift and go to state 9
    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    ID              shift and go to state 5
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20

    for_initializer                shift and go to state 187
    var_declaration                shift and go to state 189
    type                           shift and go to state 41
    class_type                     shift and go to state 6
    value_type                     shift and go to state 7
    type_name                      shift and go to state 10
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12

state 137

    (102) foreach_statement -> FOREACH LPAREN . type ID IN exp RPAREN embedded_statement
    (5) type -> . class_type
    (6) type -> . value_type
    (7) class_type -> . OBJECT
    (8) class_type -> . STRING
    (9) class_type -> . type_name
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (3) type_name -> . ID
    (4) type_name -> . type_name DOT ID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL

    OBJECT          shift and go to state 8
    STRING          shift and go to state 9
    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    ID              shift and go to state 5
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20

    type                           shift and go to state 190
    class_type                     shift and go to state 6
    value_type                     shift and go to state 7
    type_name                      shift and go to state 10
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12

state 138

    (106) break_statement -> BREAK SEMI .

    CONST           reduce using rule 106 (break_statement -> BREAK SEMI .)
    LBRACE          reduce using rule 106 (break_statement -> BREAK SEMI .)
    SEMI            reduce using rule 106 (break_statement -> BREAK SEMI .)
    IF              reduce using rule 106 (break_statement -> BREAK SEMI .)
    SWITCH          reduce using rule 106 (break_statement -> BREAK SEMI .)
    WHILE           reduce using rule 106 (break_statement -> BREAK SEMI .)
    DO              reduce using rule 106 (break_statement -> BREAK SEMI .)
    FOR             reduce using rule 106 (break_statement -> BREAK SEMI .)
    FOREACH         reduce using rule 106 (break_statement -> BREAK SEMI .)
    BREAK           reduce using rule 106 (break_statement -> BREAK SEMI .)
    CONTINUE        reduce using rule 106 (break_statement -> BREAK SEMI .)
    RETURN          reduce using rule 106 (break_statement -> BREAK SEMI .)
    OBJECT          reduce using rule 106 (break_statement -> BREAK SEMI .)
    STRING          reduce using rule 106 (break_statement -> BREAK SEMI .)
    BOOL            reduce using rule 106 (break_statement -> BREAK SEMI .)
    VOID            reduce using rule 106 (break_statement -> BREAK SEMI .)
    NEW             reduce using rule 106 (break_statement -> BREAK SEMI .)
    PLUSPLUS        reduce using rule 106 (break_statement -> BREAK SEMI .)
    MINUSMINUS      reduce using rule 106 (break_statement -> BREAK SEMI .)
    ID              reduce using rule 106 (break_statement -> BREAK SEMI .)
    INT             reduce using rule 106 (break_statement -> BREAK SEMI .)
    LONG            reduce using rule 106 (break_statement -> BREAK SEMI .)
    CHAR            reduce using rule 106 (break_statement -> BREAK SEMI .)
    FLOAT           reduce using rule 106 (break_statement -> BREAK SEMI .)
    DOUBLE          reduce using rule 106 (break_statement -> BREAK SEMI .)
    DECIMAL         reduce using rule 106 (break_statement -> BREAK SEMI .)
    TRUE            reduce using rule 106 (break_statement -> BREAK SEMI .)
    FALSE           reduce using rule 106 (break_statement -> BREAK SEMI .)
    NULL            reduce using rule 106 (break_statement -> BREAK SEMI .)
    INTNUM          reduce using rule 106 (break_statement -> BREAK SEMI .)
    HEXADECIMALNUM  reduce using rule 106 (break_statement -> BREAK SEMI .)
    BINARYNUM       reduce using rule 106 (break_statement -> BREAK SEMI .)
    FLOATNUM        reduce using rule 106 (break_statement -> BREAK SEMI .)
    DOUBLENUM       reduce using rule 106 (break_statement -> BREAK SEMI .)
    DECIMALNUM      reduce using rule 106 (break_statement -> BREAK SEMI .)
    CHARLITERAL     reduce using rule 106 (break_statement -> BREAK SEMI .)
    STRINGLITERAL   reduce using rule 106 (break_statement -> BREAK SEMI .)
    THIS            reduce using rule 106 (break_statement -> BREAK SEMI .)
    LPAREN          reduce using rule 106 (break_statement -> BREAK SEMI .)
    TYPEOF          reduce using rule 106 (break_statement -> BREAK SEMI .)
    SIZEOF          reduce using rule 106 (break_statement -> BREAK SEMI .)
    DEFAULT         reduce using rule 106 (break_statement -> BREAK SEMI .)
    RBRACE          reduce using rule 106 (break_statement -> BREAK SEMI .)
    CASE            reduce using rule 106 (break_statement -> BREAK SEMI .)
    ELSE            reduce using rule 106 (break_statement -> BREAK SEMI .)


state 139

    (107) continue_statement -> CONTINUE SEMI .

    CONST           reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    LBRACE          reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    SEMI            reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    IF              reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    SWITCH          reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    WHILE           reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    DO              reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    FOR             reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    FOREACH         reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    BREAK           reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    CONTINUE        reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    RETURN          reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    OBJECT          reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    STRING          reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    BOOL            reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    VOID            reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    NEW             reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    PLUSPLUS        reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    MINUSMINUS      reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    ID              reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    INT             reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    LONG            reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    CHAR            reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    FLOAT           reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    DOUBLE          reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    DECIMAL         reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    TRUE            reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    FALSE           reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    NULL            reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    INTNUM          reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    HEXADECIMALNUM  reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    BINARYNUM       reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    FLOATNUM        reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    DOUBLENUM       reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    DECIMALNUM      reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    CHARLITERAL     reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    STRINGLITERAL   reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    THIS            reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    LPAREN          reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    TYPEOF          reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    SIZEOF          reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    DEFAULT         reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    RBRACE          reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    CASE            reduce using rule 107 (continue_statement -> CONTINUE SEMI .)
    ELSE            reduce using rule 107 (continue_statement -> CONTINUE SEMI .)


state 140

    (108) return_statement -> RETURN SEMI .

    CONST           reduce using rule 108 (return_statement -> RETURN SEMI .)
    LBRACE          reduce using rule 108 (return_statement -> RETURN SEMI .)
    SEMI            reduce using rule 108 (return_statement -> RETURN SEMI .)
    IF              reduce using rule 108 (return_statement -> RETURN SEMI .)
    SWITCH          reduce using rule 108 (return_statement -> RETURN SEMI .)
    WHILE           reduce using rule 108 (return_statement -> RETURN SEMI .)
    DO              reduce using rule 108 (return_statement -> RETURN SEMI .)
    FOR             reduce using rule 108 (return_statement -> RETURN SEMI .)
    FOREACH         reduce using rule 108 (return_statement -> RETURN SEMI .)
    BREAK           reduce using rule 108 (return_statement -> RETURN SEMI .)
    CONTINUE        reduce using rule 108 (return_statement -> RETURN SEMI .)
    RETURN          reduce using rule 108 (return_statement -> RETURN SEMI .)
    OBJECT          reduce using rule 108 (return_statement -> RETURN SEMI .)
    STRING          reduce using rule 108 (return_statement -> RETURN SEMI .)
    BOOL            reduce using rule 108 (return_statement -> RETURN SEMI .)
    VOID            reduce using rule 108 (return_statement -> RETURN SEMI .)
    NEW             reduce using rule 108 (return_statement -> RETURN SEMI .)
    PLUSPLUS        reduce using rule 108 (return_statement -> RETURN SEMI .)
    MINUSMINUS      reduce using rule 108 (return_statement -> RETURN SEMI .)
    ID              reduce using rule 108 (return_statement -> RETURN SEMI .)
    INT             reduce using rule 108 (return_statement -> RETURN SEMI .)
    LONG            reduce using rule 108 (return_statement -> RETURN SEMI .)
    CHAR            reduce using rule 108 (return_statement -> RETURN SEMI .)
    FLOAT           reduce using rule 108 (return_statement -> RETURN SEMI .)
    DOUBLE          reduce using rule 108 (return_statement -> RETURN SEMI .)
    DECIMAL         reduce using rule 108 (return_statement -> RETURN SEMI .)
    TRUE            reduce using rule 108 (return_statement -> RETURN SEMI .)
    FALSE           reduce using rule 108 (return_statement -> RETURN SEMI .)
    NULL            reduce using rule 108 (return_statement -> RETURN SEMI .)
    INTNUM          reduce using rule 108 (return_statement -> RETURN SEMI .)
    HEXADECIMALNUM  reduce using rule 108 (return_statement -> RETURN SEMI .)
    BINARYNUM       reduce using rule 108 (return_statement -> RETURN SEMI .)
    FLOATNUM        reduce using rule 108 (return_statement -> RETURN SEMI .)
    DOUBLENUM       reduce using rule 108 (return_statement -> RETURN SEMI .)
    DECIMALNUM      reduce using rule 108 (return_statement -> RETURN SEMI .)
    CHARLITERAL     reduce using rule 108 (return_statement -> RETURN SEMI .)
    STRINGLITERAL   reduce using rule 108 (return_statement -> RETURN SEMI .)
    THIS            reduce using rule 108 (return_statement -> RETURN SEMI .)
    LPAREN          reduce using rule 108 (return_statement -> RETURN SEMI .)
    TYPEOF          reduce using rule 108 (return_statement -> RETURN SEMI .)
    SIZEOF          reduce using rule 108 (return_statement -> RETURN SEMI .)
    DEFAULT         reduce using rule 108 (return_statement -> RETURN SEMI .)
    RBRACE          reduce using rule 108 (return_statement -> RETURN SEMI .)
    CASE            reduce using rule 108 (return_statement -> RETURN SEMI .)
    ELSE            reduce using rule 108 (return_statement -> RETURN SEMI .)


state 141

    (109) return_statement -> RETURN exp . SEMI

    SEMI            shift and go to state 191


state 142

    (128) invocation_exp -> primary_exp LPAREN . RPAREN
    (129) invocation_exp -> primary_exp LPAREN . arg_list RPAREN
    (110) arg_list -> . exp
    (111) arg_list -> . exp COMMA arg_list
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    RPAREN          shift and go to state 192
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    primary_exp                    shift and go to state 116
    arg_list                       shift and go to state 193
    exp                            shift and go to state 194
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    conditional_or_exp             shift and go to state 115
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 143

    (66) post_increment_exp -> primary_exp PLUSPLUS .

    SEMI            reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    LSB             reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    LPAREN          reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    PLUSPLUS        reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    MINUSMINUS      reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    EQUAL           reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    STAR            reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    SLASH           reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    PERCENT         reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    PLUS            reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    MINUS           reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    LSHIFT          reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    RSHIFT          reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    LT              reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    GT              reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    LEQ             reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    GEQ             reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    IS              reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    EQEQUAL         reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    NOTEQUAL        reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    AMPER           reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    CIRCUMFLEX      reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    PIPE            reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    AMPERAMPER      reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    HOOK            reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    PIPEPIPE        reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    RPAREN          reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    COMMA           reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    RSB             reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    COLON           reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)
    RBRACE          reduce using rule 66 (post_increment_exp -> primary_exp PLUSPLUS .)


state 144

    (67) post_decrement_exp -> primary_exp MINUSMINUS .

    SEMI            reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    LSB             reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    LPAREN          reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    PLUSPLUS        reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    MINUSMINUS      reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    EQUAL           reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    STAR            reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    SLASH           reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    PERCENT         reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    PLUS            reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    MINUS           reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    LSHIFT          reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    RSHIFT          reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    LT              reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    GT              reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    LEQ             reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    GEQ             reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    IS              reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    EQEQUAL         reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    NOTEQUAL        reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    AMPER           reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    CIRCUMFLEX      reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    PIPE            reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    AMPERAMPER      reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    HOOK            reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    PIPEPIPE        reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    RPAREN          reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    COMMA           reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    RSB             reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    COLON           reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)
    RBRACE          reduce using rule 67 (post_decrement_exp -> primary_exp MINUSMINUS .)


state 145

    (57) object_creation_exp -> NEW type . LPAREN RPAREN
    (58) object_creation_exp -> NEW type . LPAREN RPAREN object_initializer
    (59) object_creation_exp -> NEW type . LPAREN arg_list RPAREN
    (60) object_creation_exp -> NEW type . LPAREN arg_list RPAREN object_initializer

    LPAREN          shift and go to state 195


state 146

    (183) assignment -> unary_exp EQUAL . exp
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    unary_exp                      shift and go to state 110
    exp                            shift and go to state 196
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 147

    (68) pre_increment_exp -> PLUSPLUS unary_exp .

    SEMI            reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    EQUAL           reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    STAR            reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    SLASH           reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    PERCENT         reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    PLUS            reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    MINUS           reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    LSHIFT          reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    RSHIFT          reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    LT              reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    GT              reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    LEQ             reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    GEQ             reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    IS              reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    EQEQUAL         reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    NOTEQUAL        reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    AMPER           reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    CIRCUMFLEX      reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    PIPE            reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    AMPERAMPER      reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    HOOK            reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    PIPEPIPE        reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    RPAREN          reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    COMMA           reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    RSB             reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    COLON           reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)
    RBRACE          reduce using rule 68 (pre_increment_exp -> PLUSPLUS unary_exp .)


state 148

    (69) pre_decrement_exp -> MINUSMINUS unary_exp .

    SEMI            reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    EQUAL           reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    STAR            reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    SLASH           reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    PERCENT         reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    PLUS            reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    MINUS           reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    LSHIFT          reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    RSHIFT          reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    LT              reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    GT              reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    LEQ             reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    GEQ             reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    IS              reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    EQEQUAL         reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    NOTEQUAL        reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    AMPER           reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    CIRCUMFLEX      reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    PIPE            reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    AMPERAMPER      reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    HOOK            reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    PIPEPIPE        reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    RPAREN          reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    COMMA           reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    RSB             reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    COLON           reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    RBRACE          reduce using rule 69 (pre_decrement_exp -> MINUSMINUS unary_exp .)


state 149

    (131) element_access -> primary_no_array_creation_exp LSB . exp RSB
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    primary_no_array_creation_exp  shift and go to state 75
    exp                            shift and go to state 197
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 150

    (137) typeof_exp -> TYPEOF LPAREN . type RPAREN
    (5) type -> . class_type
    (6) type -> . value_type
    (7) class_type -> . OBJECT
    (8) class_type -> . STRING
    (9) class_type -> . type_name
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (3) type_name -> . ID
    (4) type_name -> . type_name DOT ID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL

    OBJECT          shift and go to state 8
    STRING          shift and go to state 9
    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    ID              shift and go to state 5
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20

    type                           shift and go to state 198
    class_type                     shift and go to state 6
    value_type                     shift and go to state 7
    type_name                      shift and go to state 10
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12

state 151

    (139) sizeof_exp -> SIZEOF LPAREN . value_type RPAREN
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL

    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20

    value_type                     shift and go to state 199
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12

state 152

    (141) default_exp -> DEFAULT LPAREN . type RPAREN
    (5) type -> . class_type
    (6) type -> . value_type
    (7) class_type -> . OBJECT
    (8) class_type -> . STRING
    (9) class_type -> . type_name
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (3) type_name -> . ID
    (4) type_name -> . type_name DOT ID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL

    OBJECT          shift and go to state 8
    STRING          shift and go to state 9
    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    ID              shift and go to state 5
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20

    type                           shift and go to state 200
    class_type                     shift and go to state 6
    value_type                     shift and go to state 7
    type_name                      shift and go to state 10
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12

state 153

    (23) param_list -> type . ID
    (24) param_list -> type . ID COMMA param_list

    ID              shift and go to state 201


state 154

    (21) signature -> type ID LPAREN param_list . RPAREN

    RPAREN          shift and go to state 202


state 155

    (22) signature -> type ID LPAREN RPAREN .

    LBRACE          reduce using rule 22 (signature -> type ID LPAREN RPAREN .)


state 156

    (31) const_declaration -> CONST type const_declarators .

    SEMI            reduce using rule 31 (const_declaration -> CONST type const_declarators .)


state 157

    (32) const_declarators -> const_declarator .
    (33) const_declarators -> const_declarator . COMMA const_declarators

    SEMI            reduce using rule 32 (const_declarators -> const_declarator .)
    COMMA           shift and go to state 203


state 158

    (34) const_declarator -> ID . EQUAL exp

    EQUAL           shift and go to state 204


state 159

    (37) var_declarators -> var_declarator COMMA . var_declarators
    (36) var_declarators -> . var_declarator
    (37) var_declarators -> . var_declarator COMMA var_declarators
    (38) var_declarator -> . ID
    (39) var_declarator -> . ID EQUAL exp

    ID              shift and go to state 106

    var_declarator                 shift and go to state 105
    var_declarators                shift and go to state 205

state 160

    (39) var_declarator -> ID EQUAL . exp
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    exp                            shift and go to state 206
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 161

    (72) if_statement -> IF LPAREN exp . RPAREN embedded_statement
    (73) if_statement -> IF LPAREN exp . RPAREN embedded_statement ELSE embedded_statement

    RPAREN          shift and go to state 207


state 162

    (148) cast_exp -> LPAREN type RPAREN . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    unary_exp                      shift and go to state 208
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 163

    (126) parenthesized_exp -> LPAREN exp RPAREN .

    LSB             reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    LPAREN          reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    PLUSPLUS        reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    MINUSMINUS      reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    EQUAL           reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    STAR            reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    SLASH           reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    PERCENT         reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    LSHIFT          reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    RSHIFT          reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    LT              reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    GT              reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    LEQ             reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    GEQ             reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    IS              reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    EQEQUAL         reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    NOTEQUAL        reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    AMPER           reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    CIRCUMFLEX      reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    PIPE            reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    AMPERAMPER      reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    HOOK            reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    PIPEPIPE        reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    SEMI            reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    RSB             reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    COLON           reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)
    RBRACE          reduce using rule 126 (parenthesized_exp -> LPAREN exp RPAREN .)


state 164

    (152) conditional_exp -> conditional_or_exp HOOK . exp COLON exp
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    conditional_or_exp             shift and go to state 115
    exp                            shift and go to state 209
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 165

    (154) conditional_or_exp -> conditional_or_exp PIPEPIPE . conditional_and_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    conditional_and_exp            shift and go to state 210
    inclusive_or_exp               shift and go to state 120
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131
    unary_exp                      shift and go to state 211
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 166

    (156) conditional_and_exp -> conditional_and_exp AMPERAMPER . inclusive_or_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    inclusive_or_exp               shift and go to state 212
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131
    unary_exp                      shift and go to state 211
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 167

    (158) inclusive_or_exp -> inclusive_or_exp PIPE . exclusive_or_exp
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    exclusive_or_exp               shift and go to state 213
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131
    unary_exp                      shift and go to state 211
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 168

    (160) exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    and_exp                        shift and go to state 214
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131
    unary_exp                      shift and go to state 211
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 169

    (162) and_exp -> and_exp AMPER . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    equality_exp                   shift and go to state 215
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131
    unary_exp                      shift and go to state 211
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 170

    (164) equality_exp -> equality_exp EQEQUAL . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    relational_exp                 shift and go to state 216
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131
    unary_exp                      shift and go to state 211
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 171

    (165) equality_exp -> equality_exp NOTEQUAL . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    relational_exp                 shift and go to state 217
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131
    unary_exp                      shift and go to state 211
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 172

    (167) relational_exp -> relational_exp LT . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    shift_exp                      shift and go to state 218
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131
    unary_exp                      shift and go to state 211
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 173

    (168) relational_exp -> relational_exp GT . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    shift_exp                      shift and go to state 219
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131
    unary_exp                      shift and go to state 211
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 174

    (169) relational_exp -> relational_exp LEQ . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    shift_exp                      shift and go to state 220
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131
    unary_exp                      shift and go to state 211
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 175

    (170) relational_exp -> relational_exp GEQ . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    shift_exp                      shift and go to state 221
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131
    unary_exp                      shift and go to state 211
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 176

    (171) relational_exp -> relational_exp IS . type
    (5) type -> . class_type
    (6) type -> . value_type
    (7) class_type -> . OBJECT
    (8) class_type -> . STRING
    (9) class_type -> . type_name
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (3) type_name -> . ID
    (4) type_name -> . type_name DOT ID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL

    OBJECT          shift and go to state 8
    STRING          shift and go to state 9
    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    ID              shift and go to state 5
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20

    type                           shift and go to state 222
    class_type                     shift and go to state 6
    value_type                     shift and go to state 7
    type_name                      shift and go to state 10
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12

state 177

    (173) shift_exp -> shift_exp LSHIFT . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    additive_exp                   shift and go to state 223
    multiplicative_exp             shift and go to state 131
    unary_exp                      shift and go to state 211
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 178

    (174) shift_exp -> shift_exp RSHIFT . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    additive_exp                   shift and go to state 224
    multiplicative_exp             shift and go to state 131
    unary_exp                      shift and go to state 211
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 179

    (176) additive_exp -> additive_exp PLUS . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    multiplicative_exp             shift and go to state 225
    unary_exp                      shift and go to state 211
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 180

    (177) additive_exp -> additive_exp MINUS . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    multiplicative_exp             shift and go to state 226
    unary_exp                      shift and go to state 211
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 181

    (179) multiplicative_exp -> multiplicative_exp STAR . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    unary_exp                      shift and go to state 227
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 182

    (180) multiplicative_exp -> multiplicative_exp SLASH . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    unary_exp                      shift and go to state 228
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 183

    (181) multiplicative_exp -> multiplicative_exp PERCENT . unary_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    unary_exp                      shift and go to state 229
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    primary_no_array_creation_exp  shift and go to state 75
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 184

    (74) switch_statement -> SWITCH LPAREN exp . RPAREN LBRACE switch_body RBRACE

    RPAREN          shift and go to state 230


state 185

    (86) while_statement -> WHILE LPAREN exp . RPAREN embedded_statement

    RPAREN          shift and go to state 231


state 186

    (87) do_statement -> DO embedded_statement WHILE . LPAREN exp RPAREN SEMI

    LPAREN          shift and go to state 232


state 187

    (88) for_statement -> FOR LPAREN for_initializer . SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> FOR LPAREN for_initializer . SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> FOR LPAREN for_initializer . SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> FOR LPAREN for_initializer . SEMI SEMI RPAREN embedded_statement

    SEMI            shift and go to state 233


state 188

    (92) for_statement -> FOR LPAREN SEMI . for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> FOR LPAREN SEMI . for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> FOR LPAREN SEMI . SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> FOR LPAREN SEMI . SEMI RPAREN embedded_statement
    (98) for_condition -> . exp
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    SEMI            shift and go to state 234
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    for_condition                  shift and go to state 235
    exp                            shift and go to state 236
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 189

    (96) for_initializer -> var_declaration .
    (97) for_initializer -> var_declaration . COMMA for_initializer

    SEMI            reduce using rule 96 (for_initializer -> var_declaration .)
    COMMA           shift and go to state 237


state 190

    (102) foreach_statement -> FOREACH LPAREN type . ID IN exp RPAREN embedded_statement

    ID              shift and go to state 238


state 191

    (109) return_statement -> RETURN exp SEMI .

    CONST           reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    LBRACE          reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    SEMI            reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    IF              reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    SWITCH          reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    WHILE           reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    DO              reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    FOR             reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    FOREACH         reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    BREAK           reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    CONTINUE        reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    RETURN          reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    OBJECT          reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    STRING          reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    BOOL            reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    VOID            reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    NEW             reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    PLUSPLUS        reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    MINUSMINUS      reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    ID              reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    INT             reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    LONG            reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    CHAR            reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    FLOAT           reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    DOUBLE          reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    DECIMAL         reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    TRUE            reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    FALSE           reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    NULL            reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    INTNUM          reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    HEXADECIMALNUM  reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    BINARYNUM       reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    FLOATNUM        reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    DOUBLENUM       reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    DECIMALNUM      reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    CHARLITERAL     reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    STRINGLITERAL   reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    THIS            reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    LPAREN          reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    TYPEOF          reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    SIZEOF          reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    DEFAULT         reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    RBRACE          reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    CASE            reduce using rule 109 (return_statement -> RETURN exp SEMI .)
    ELSE            reduce using rule 109 (return_statement -> RETURN exp SEMI .)


state 192

    (128) invocation_exp -> primary_exp LPAREN RPAREN .

    SEMI            reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    LSB             reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    LPAREN          reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    PLUSPLUS        reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    MINUSMINUS      reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    EQUAL           reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    STAR            reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    SLASH           reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    PERCENT         reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    PLUS            reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    MINUS           reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    LSHIFT          reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    RSHIFT          reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    LT              reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    GT              reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    LEQ             reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    GEQ             reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    IS              reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    EQEQUAL         reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    AMPER           reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    CIRCUMFLEX      reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    PIPE            reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    AMPERAMPER      reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    HOOK            reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    PIPEPIPE        reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    RPAREN          reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    COMMA           reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    RSB             reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    COLON           reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)
    RBRACE          reduce using rule 128 (invocation_exp -> primary_exp LPAREN RPAREN .)


state 193

    (129) invocation_exp -> primary_exp LPAREN arg_list . RPAREN

    RPAREN          shift and go to state 239


state 194

    (110) arg_list -> exp .
    (111) arg_list -> exp . COMMA arg_list

    RPAREN          reduce using rule 110 (arg_list -> exp .)
    COMMA           shift and go to state 240


state 195

    (57) object_creation_exp -> NEW type LPAREN . RPAREN
    (58) object_creation_exp -> NEW type LPAREN . RPAREN object_initializer
    (59) object_creation_exp -> NEW type LPAREN . arg_list RPAREN
    (60) object_creation_exp -> NEW type LPAREN . arg_list RPAREN object_initializer
    (110) arg_list -> . exp
    (111) arg_list -> . exp COMMA arg_list
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    RPAREN          shift and go to state 241
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    arg_list                       shift and go to state 242
    exp                            shift and go to state 194
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 196

    (183) assignment -> unary_exp EQUAL exp .

    SEMI            reduce using rule 183 (assignment -> unary_exp EQUAL exp .)
    RPAREN          reduce using rule 183 (assignment -> unary_exp EQUAL exp .)
    COMMA           reduce using rule 183 (assignment -> unary_exp EQUAL exp .)
    RSB             reduce using rule 183 (assignment -> unary_exp EQUAL exp .)
    COLON           reduce using rule 183 (assignment -> unary_exp EQUAL exp .)
    RBRACE          reduce using rule 183 (assignment -> unary_exp EQUAL exp .)


state 197

    (131) element_access -> primary_no_array_creation_exp LSB exp . RSB

    RSB             shift and go to state 243


state 198

    (137) typeof_exp -> TYPEOF LPAREN type . RPAREN

    RPAREN          shift and go to state 244


state 199

    (139) sizeof_exp -> SIZEOF LPAREN value_type . RPAREN

    RPAREN          shift and go to state 245


state 200

    (141) default_exp -> DEFAULT LPAREN type . RPAREN

    RPAREN          shift and go to state 246


state 201

    (23) param_list -> type ID .
    (24) param_list -> type ID . COMMA param_list

    RPAREN          reduce using rule 23 (param_list -> type ID .)
    COMMA           shift and go to state 247


state 202

    (21) signature -> type ID LPAREN param_list RPAREN .

    LBRACE          reduce using rule 21 (signature -> type ID LPAREN param_list RPAREN .)


state 203

    (33) const_declarators -> const_declarator COMMA . const_declarators
    (32) const_declarators -> . const_declarator
    (33) const_declarators -> . const_declarator COMMA const_declarators
    (34) const_declarator -> . ID EQUAL exp

    ID              shift and go to state 158

    const_declarator               shift and go to state 157
    const_declarators              shift and go to state 248

state 204

    (34) const_declarator -> ID EQUAL . exp
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    exp                            shift and go to state 249
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 205

    (37) var_declarators -> var_declarator COMMA var_declarators .

    SEMI            reduce using rule 37 (var_declarators -> var_declarator COMMA var_declarators .)
    COMMA           reduce using rule 37 (var_declarators -> var_declarator COMMA var_declarators .)


state 206

    (39) var_declarator -> ID EQUAL exp .

    COMMA           reduce using rule 39 (var_declarator -> ID EQUAL exp .)
    SEMI            reduce using rule 39 (var_declarator -> ID EQUAL exp .)


state 207

    (72) if_statement -> IF LPAREN exp RPAREN . embedded_statement
    (73) if_statement -> IF LPAREN exp RPAREN . embedded_statement ELSE embedded_statement
    (40) embedded_statement -> . block
    (41) embedded_statement -> . empty_statement
    (42) embedded_statement -> . exp_statement
    (43) embedded_statement -> . selection_statement
    (44) embedded_statement -> . iteration_statement
    (45) embedded_statement -> . jump_statement
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE
    (48) empty_statement -> . SEMI
    (49) exp_statement -> . statement_exp SEMI
    (70) selection_statement -> . if_statement
    (71) selection_statement -> . switch_statement
    (82) iteration_statement -> . while_statement
    (83) iteration_statement -> . do_statement
    (84) iteration_statement -> . for_statement
    (85) iteration_statement -> . foreach_statement
    (103) jump_statement -> . break_statement
    (104) jump_statement -> . continue_statement
    (105) jump_statement -> . return_statement
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (72) if_statement -> . IF LPAREN exp RPAREN embedded_statement
    (73) if_statement -> . IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
    (74) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (86) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (87) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (88) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (102) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (106) break_statement -> . BREAK SEMI
    (107) continue_statement -> . CONTINUE SEMI
    (108) return_statement -> . RETURN SEMI
    (109) return_statement -> . RETURN exp SEMI
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    LBRACE          shift and go to state 23
    SEMI            shift and go to state 32
    IF              shift and go to state 59
    SWITCH          shift and go to state 61
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    embedded_statement             shift and go to state 250
    block                          shift and go to state 34
    empty_statement                shift and go to state 35
    exp_statement                  shift and go to state 36
    selection_statement            shift and go to state 37
    iteration_statement            shift and go to state 38
    jump_statement                 shift and go to state 39
    statement_exp                  shift and go to state 42
    if_statement                   shift and go to state 43
    switch_statement               shift and go to state 44
    while_statement                shift and go to state 45
    do_statement                   shift and go to state 46
    for_statement                  shift and go to state 47
    foreach_statement              shift and go to state 48
    break_statement                shift and go to state 49
    continue_statement             shift and go to state 50
    return_statement               shift and go to state 51
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 208

    (148) cast_exp -> LPAREN type RPAREN unary_exp .

    EQUAL           reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    STAR            reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    SLASH           reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    PERCENT         reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    PLUS            reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    MINUS           reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    LSHIFT          reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    RSHIFT          reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    LT              reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    GT              reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    LEQ             reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    GEQ             reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    IS              reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    EQEQUAL         reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    NOTEQUAL        reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    AMPER           reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    CIRCUMFLEX      reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    PIPE            reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    AMPERAMPER      reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    HOOK            reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    PIPEPIPE        reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    RPAREN          reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    SEMI            reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    COMMA           reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    RSB             reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    COLON           reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)
    RBRACE          reduce using rule 148 (cast_exp -> LPAREN type RPAREN unary_exp .)


state 209

    (152) conditional_exp -> conditional_or_exp HOOK exp . COLON exp

    COLON           shift and go to state 251


state 210

    (154) conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .
    (156) conditional_and_exp -> conditional_and_exp . AMPERAMPER inclusive_or_exp

    HOOK            reduce using rule 154 (conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .)
    PIPEPIPE        reduce using rule 154 (conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .)
    RPAREN          reduce using rule 154 (conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .)
    SEMI            reduce using rule 154 (conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .)
    COMMA           reduce using rule 154 (conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .)
    RSB             reduce using rule 154 (conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .)
    COLON           reduce using rule 154 (conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .)
    RBRACE          reduce using rule 154 (conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .)
    AMPERAMPER      shift and go to state 166


state 211

    (182) multiplicative_exp -> unary_exp .

    STAR            reduce using rule 182 (multiplicative_exp -> unary_exp .)
    SLASH           reduce using rule 182 (multiplicative_exp -> unary_exp .)
    PERCENT         reduce using rule 182 (multiplicative_exp -> unary_exp .)
    PLUS            reduce using rule 182 (multiplicative_exp -> unary_exp .)
    MINUS           reduce using rule 182 (multiplicative_exp -> unary_exp .)
    LSHIFT          reduce using rule 182 (multiplicative_exp -> unary_exp .)
    RSHIFT          reduce using rule 182 (multiplicative_exp -> unary_exp .)
    LT              reduce using rule 182 (multiplicative_exp -> unary_exp .)
    GT              reduce using rule 182 (multiplicative_exp -> unary_exp .)
    LEQ             reduce using rule 182 (multiplicative_exp -> unary_exp .)
    GEQ             reduce using rule 182 (multiplicative_exp -> unary_exp .)
    IS              reduce using rule 182 (multiplicative_exp -> unary_exp .)
    EQEQUAL         reduce using rule 182 (multiplicative_exp -> unary_exp .)
    NOTEQUAL        reduce using rule 182 (multiplicative_exp -> unary_exp .)
    AMPER           reduce using rule 182 (multiplicative_exp -> unary_exp .)
    CIRCUMFLEX      reduce using rule 182 (multiplicative_exp -> unary_exp .)
    PIPE            reduce using rule 182 (multiplicative_exp -> unary_exp .)
    AMPERAMPER      reduce using rule 182 (multiplicative_exp -> unary_exp .)
    HOOK            reduce using rule 182 (multiplicative_exp -> unary_exp .)
    PIPEPIPE        reduce using rule 182 (multiplicative_exp -> unary_exp .)
    RPAREN          reduce using rule 182 (multiplicative_exp -> unary_exp .)
    SEMI            reduce using rule 182 (multiplicative_exp -> unary_exp .)
    COMMA           reduce using rule 182 (multiplicative_exp -> unary_exp .)
    RSB             reduce using rule 182 (multiplicative_exp -> unary_exp .)
    COLON           reduce using rule 182 (multiplicative_exp -> unary_exp .)
    RBRACE          reduce using rule 182 (multiplicative_exp -> unary_exp .)


state 212

    (156) conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .
    (158) inclusive_or_exp -> inclusive_or_exp . PIPE exclusive_or_exp

    AMPERAMPER      reduce using rule 156 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    HOOK            reduce using rule 156 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    PIPEPIPE        reduce using rule 156 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    RPAREN          reduce using rule 156 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    SEMI            reduce using rule 156 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    COMMA           reduce using rule 156 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    RSB             reduce using rule 156 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    COLON           reduce using rule 156 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    RBRACE          reduce using rule 156 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    PIPE            shift and go to state 167


state 213

    (158) inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .
    (160) exclusive_or_exp -> exclusive_or_exp . CIRCUMFLEX and_exp

    PIPE            reduce using rule 158 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    AMPERAMPER      reduce using rule 158 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    HOOK            reduce using rule 158 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    PIPEPIPE        reduce using rule 158 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    RPAREN          reduce using rule 158 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    SEMI            reduce using rule 158 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    COMMA           reduce using rule 158 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    RSB             reduce using rule 158 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    COLON           reduce using rule 158 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    RBRACE          reduce using rule 158 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    CIRCUMFLEX      shift and go to state 168


state 214

    (160) exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .
    (162) and_exp -> and_exp . AMPER equality_exp

    CIRCUMFLEX      reduce using rule 160 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    PIPE            reduce using rule 160 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    AMPERAMPER      reduce using rule 160 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    HOOK            reduce using rule 160 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    PIPEPIPE        reduce using rule 160 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    RPAREN          reduce using rule 160 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    SEMI            reduce using rule 160 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    COMMA           reduce using rule 160 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    RSB             reduce using rule 160 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    COLON           reduce using rule 160 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    RBRACE          reduce using rule 160 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    AMPER           shift and go to state 169


state 215

    (162) and_exp -> and_exp AMPER equality_exp .
    (164) equality_exp -> equality_exp . EQEQUAL relational_exp
    (165) equality_exp -> equality_exp . NOTEQUAL relational_exp

    AMPER           reduce using rule 162 (and_exp -> and_exp AMPER equality_exp .)
    CIRCUMFLEX      reduce using rule 162 (and_exp -> and_exp AMPER equality_exp .)
    PIPE            reduce using rule 162 (and_exp -> and_exp AMPER equality_exp .)
    AMPERAMPER      reduce using rule 162 (and_exp -> and_exp AMPER equality_exp .)
    HOOK            reduce using rule 162 (and_exp -> and_exp AMPER equality_exp .)
    PIPEPIPE        reduce using rule 162 (and_exp -> and_exp AMPER equality_exp .)
    RPAREN          reduce using rule 162 (and_exp -> and_exp AMPER equality_exp .)
    SEMI            reduce using rule 162 (and_exp -> and_exp AMPER equality_exp .)
    COMMA           reduce using rule 162 (and_exp -> and_exp AMPER equality_exp .)
    RSB             reduce using rule 162 (and_exp -> and_exp AMPER equality_exp .)
    COLON           reduce using rule 162 (and_exp -> and_exp AMPER equality_exp .)
    RBRACE          reduce using rule 162 (and_exp -> and_exp AMPER equality_exp .)
    EQEQUAL         shift and go to state 170
    NOTEQUAL        shift and go to state 171


state 216

    (164) equality_exp -> equality_exp EQEQUAL relational_exp .
    (167) relational_exp -> relational_exp . LT shift_exp
    (168) relational_exp -> relational_exp . GT shift_exp
    (169) relational_exp -> relational_exp . LEQ shift_exp
    (170) relational_exp -> relational_exp . GEQ shift_exp
    (171) relational_exp -> relational_exp . IS type

    EQEQUAL         reduce using rule 164 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    NOTEQUAL        reduce using rule 164 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    AMPER           reduce using rule 164 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    CIRCUMFLEX      reduce using rule 164 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    PIPE            reduce using rule 164 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    AMPERAMPER      reduce using rule 164 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    HOOK            reduce using rule 164 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    PIPEPIPE        reduce using rule 164 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    RPAREN          reduce using rule 164 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    SEMI            reduce using rule 164 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    COMMA           reduce using rule 164 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    RSB             reduce using rule 164 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    COLON           reduce using rule 164 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    RBRACE          reduce using rule 164 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    LT              shift and go to state 172
    GT              shift and go to state 173
    LEQ             shift and go to state 174
    GEQ             shift and go to state 175
    IS              shift and go to state 176


state 217

    (165) equality_exp -> equality_exp NOTEQUAL relational_exp .
    (167) relational_exp -> relational_exp . LT shift_exp
    (168) relational_exp -> relational_exp . GT shift_exp
    (169) relational_exp -> relational_exp . LEQ shift_exp
    (170) relational_exp -> relational_exp . GEQ shift_exp
    (171) relational_exp -> relational_exp . IS type

    EQEQUAL         reduce using rule 165 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    NOTEQUAL        reduce using rule 165 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    AMPER           reduce using rule 165 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    CIRCUMFLEX      reduce using rule 165 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    PIPE            reduce using rule 165 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    AMPERAMPER      reduce using rule 165 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    HOOK            reduce using rule 165 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    PIPEPIPE        reduce using rule 165 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    RPAREN          reduce using rule 165 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    SEMI            reduce using rule 165 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    COMMA           reduce using rule 165 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    RSB             reduce using rule 165 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    COLON           reduce using rule 165 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    RBRACE          reduce using rule 165 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    LT              shift and go to state 172
    GT              shift and go to state 173
    LEQ             shift and go to state 174
    GEQ             shift and go to state 175
    IS              shift and go to state 176


state 218

    (167) relational_exp -> relational_exp LT shift_exp .
    (173) shift_exp -> shift_exp . LSHIFT additive_exp
    (174) shift_exp -> shift_exp . RSHIFT additive_exp

    LT              reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    GT              reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    LEQ             reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    GEQ             reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    IS              reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    EQEQUAL         reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    NOTEQUAL        reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    AMPER           reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    CIRCUMFLEX      reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    PIPE            reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    AMPERAMPER      reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    HOOK            reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    PIPEPIPE        reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    RPAREN          reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    SEMI            reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    COMMA           reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    RSB             reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    COLON           reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    RBRACE          reduce using rule 167 (relational_exp -> relational_exp LT shift_exp .)
    LSHIFT          shift and go to state 177
    RSHIFT          shift and go to state 178


state 219

    (168) relational_exp -> relational_exp GT shift_exp .
    (173) shift_exp -> shift_exp . LSHIFT additive_exp
    (174) shift_exp -> shift_exp . RSHIFT additive_exp

    LT              reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    GT              reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    LEQ             reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    GEQ             reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    IS              reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    EQEQUAL         reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    NOTEQUAL        reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    AMPER           reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    CIRCUMFLEX      reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    PIPE            reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    AMPERAMPER      reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    HOOK            reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    PIPEPIPE        reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    RPAREN          reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    SEMI            reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    COMMA           reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    RSB             reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    COLON           reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    RBRACE          reduce using rule 168 (relational_exp -> relational_exp GT shift_exp .)
    LSHIFT          shift and go to state 177
    RSHIFT          shift and go to state 178


state 220

    (169) relational_exp -> relational_exp LEQ shift_exp .
    (173) shift_exp -> shift_exp . LSHIFT additive_exp
    (174) shift_exp -> shift_exp . RSHIFT additive_exp

    LT              reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    GT              reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    LEQ             reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    GEQ             reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    IS              reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    EQEQUAL         reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    NOTEQUAL        reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    AMPER           reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    CIRCUMFLEX      reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    PIPE            reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    AMPERAMPER      reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    HOOK            reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    PIPEPIPE        reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    RPAREN          reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    SEMI            reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    COMMA           reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    RSB             reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    COLON           reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    RBRACE          reduce using rule 169 (relational_exp -> relational_exp LEQ shift_exp .)
    LSHIFT          shift and go to state 177
    RSHIFT          shift and go to state 178


state 221

    (170) relational_exp -> relational_exp GEQ shift_exp .
    (173) shift_exp -> shift_exp . LSHIFT additive_exp
    (174) shift_exp -> shift_exp . RSHIFT additive_exp

    LT              reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    GT              reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    LEQ             reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    GEQ             reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    IS              reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    EQEQUAL         reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    NOTEQUAL        reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    AMPER           reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    CIRCUMFLEX      reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    PIPE            reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    AMPERAMPER      reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    HOOK            reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    PIPEPIPE        reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    RPAREN          reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    SEMI            reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    COMMA           reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    RSB             reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    COLON           reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    RBRACE          reduce using rule 170 (relational_exp -> relational_exp GEQ shift_exp .)
    LSHIFT          shift and go to state 177
    RSHIFT          shift and go to state 178


state 222

    (171) relational_exp -> relational_exp IS type .

    LT              reduce using rule 171 (relational_exp -> relational_exp IS type .)
    GT              reduce using rule 171 (relational_exp -> relational_exp IS type .)
    LEQ             reduce using rule 171 (relational_exp -> relational_exp IS type .)
    GEQ             reduce using rule 171 (relational_exp -> relational_exp IS type .)
    IS              reduce using rule 171 (relational_exp -> relational_exp IS type .)
    EQEQUAL         reduce using rule 171 (relational_exp -> relational_exp IS type .)
    NOTEQUAL        reduce using rule 171 (relational_exp -> relational_exp IS type .)
    AMPER           reduce using rule 171 (relational_exp -> relational_exp IS type .)
    CIRCUMFLEX      reduce using rule 171 (relational_exp -> relational_exp IS type .)
    PIPE            reduce using rule 171 (relational_exp -> relational_exp IS type .)
    AMPERAMPER      reduce using rule 171 (relational_exp -> relational_exp IS type .)
    HOOK            reduce using rule 171 (relational_exp -> relational_exp IS type .)
    PIPEPIPE        reduce using rule 171 (relational_exp -> relational_exp IS type .)
    RPAREN          reduce using rule 171 (relational_exp -> relational_exp IS type .)
    SEMI            reduce using rule 171 (relational_exp -> relational_exp IS type .)
    COMMA           reduce using rule 171 (relational_exp -> relational_exp IS type .)
    RSB             reduce using rule 171 (relational_exp -> relational_exp IS type .)
    COLON           reduce using rule 171 (relational_exp -> relational_exp IS type .)
    RBRACE          reduce using rule 171 (relational_exp -> relational_exp IS type .)


state 223

    (173) shift_exp -> shift_exp LSHIFT additive_exp .
    (176) additive_exp -> additive_exp . PLUS multiplicative_exp
    (177) additive_exp -> additive_exp . MINUS multiplicative_exp

    LSHIFT          reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    RSHIFT          reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    LT              reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    GT              reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    LEQ             reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    GEQ             reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    IS              reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    EQEQUAL         reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    NOTEQUAL        reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    AMPER           reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    CIRCUMFLEX      reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    PIPE            reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    AMPERAMPER      reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    HOOK            reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    PIPEPIPE        reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    RPAREN          reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    SEMI            reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    COMMA           reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    RSB             reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    COLON           reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    RBRACE          reduce using rule 173 (shift_exp -> shift_exp LSHIFT additive_exp .)
    PLUS            shift and go to state 179
    MINUS           shift and go to state 180


state 224

    (174) shift_exp -> shift_exp RSHIFT additive_exp .
    (176) additive_exp -> additive_exp . PLUS multiplicative_exp
    (177) additive_exp -> additive_exp . MINUS multiplicative_exp

    LSHIFT          reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    RSHIFT          reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    LT              reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    GT              reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    LEQ             reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    GEQ             reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    IS              reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    EQEQUAL         reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    NOTEQUAL        reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    AMPER           reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    CIRCUMFLEX      reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    PIPE            reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    AMPERAMPER      reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    HOOK            reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    PIPEPIPE        reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    RPAREN          reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    SEMI            reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    COMMA           reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    RSB             reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    COLON           reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    RBRACE          reduce using rule 174 (shift_exp -> shift_exp RSHIFT additive_exp .)
    PLUS            shift and go to state 179
    MINUS           shift and go to state 180


state 225

    (176) additive_exp -> additive_exp PLUS multiplicative_exp .
    (179) multiplicative_exp -> multiplicative_exp . STAR unary_exp
    (180) multiplicative_exp -> multiplicative_exp . SLASH unary_exp
    (181) multiplicative_exp -> multiplicative_exp . PERCENT unary_exp

    PLUS            reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    MINUS           reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    LSHIFT          reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    RSHIFT          reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    LT              reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    GT              reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    LEQ             reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    GEQ             reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    IS              reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    EQEQUAL         reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    NOTEQUAL        reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    AMPER           reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    CIRCUMFLEX      reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    PIPE            reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    AMPERAMPER      reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    HOOK            reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    PIPEPIPE        reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    RPAREN          reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    SEMI            reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    COMMA           reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    RSB             reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    COLON           reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    RBRACE          reduce using rule 176 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    STAR            shift and go to state 181
    SLASH           shift and go to state 182
    PERCENT         shift and go to state 183


state 226

    (177) additive_exp -> additive_exp MINUS multiplicative_exp .
    (179) multiplicative_exp -> multiplicative_exp . STAR unary_exp
    (180) multiplicative_exp -> multiplicative_exp . SLASH unary_exp
    (181) multiplicative_exp -> multiplicative_exp . PERCENT unary_exp

    PLUS            reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    MINUS           reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    LSHIFT          reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    RSHIFT          reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    LT              reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    GT              reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    LEQ             reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    GEQ             reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    IS              reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    EQEQUAL         reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    NOTEQUAL        reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    AMPER           reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    CIRCUMFLEX      reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    PIPE            reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    AMPERAMPER      reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    HOOK            reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    PIPEPIPE        reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    RPAREN          reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    SEMI            reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    COMMA           reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    RSB             reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    COLON           reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    RBRACE          reduce using rule 177 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    STAR            shift and go to state 181
    SLASH           shift and go to state 182
    PERCENT         shift and go to state 183


state 227

    (179) multiplicative_exp -> multiplicative_exp STAR unary_exp .

    STAR            reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    SLASH           reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    PERCENT         reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    PLUS            reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    MINUS           reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    LSHIFT          reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    RSHIFT          reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    LT              reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    GT              reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    LEQ             reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    GEQ             reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    IS              reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    EQEQUAL         reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    NOTEQUAL        reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    AMPER           reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    CIRCUMFLEX      reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    PIPE            reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    AMPERAMPER      reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    HOOK            reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    PIPEPIPE        reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    RPAREN          reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    SEMI            reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    COMMA           reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    RSB             reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    COLON           reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    RBRACE          reduce using rule 179 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)


state 228

    (180) multiplicative_exp -> multiplicative_exp SLASH unary_exp .

    STAR            reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    SLASH           reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    PERCENT         reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    PLUS            reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    MINUS           reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    LSHIFT          reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    RSHIFT          reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    LT              reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    GT              reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    LEQ             reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    GEQ             reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    IS              reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    EQEQUAL         reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    NOTEQUAL        reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    AMPER           reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    CIRCUMFLEX      reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    PIPE            reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    AMPERAMPER      reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    HOOK            reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    PIPEPIPE        reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    RPAREN          reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    SEMI            reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    COMMA           reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    RSB             reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    COLON           reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    RBRACE          reduce using rule 180 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)


state 229

    (181) multiplicative_exp -> multiplicative_exp PERCENT unary_exp .

    STAR            reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    SLASH           reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    PERCENT         reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    PLUS            reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    MINUS           reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    LSHIFT          reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    RSHIFT          reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    LT              reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    GT              reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    LEQ             reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    GEQ             reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    IS              reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    EQEQUAL         reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    NOTEQUAL        reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    AMPER           reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    CIRCUMFLEX      reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    PIPE            reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    AMPERAMPER      reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    HOOK            reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    PIPEPIPE        reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    RPAREN          reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    SEMI            reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    COMMA           reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    RSB             reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    COLON           reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    RBRACE          reduce using rule 181 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)


state 230

    (74) switch_statement -> SWITCH LPAREN exp RPAREN . LBRACE switch_body RBRACE

    LBRACE          shift and go to state 252


state 231

    (86) while_statement -> WHILE LPAREN exp RPAREN . embedded_statement
    (40) embedded_statement -> . block
    (41) embedded_statement -> . empty_statement
    (42) embedded_statement -> . exp_statement
    (43) embedded_statement -> . selection_statement
    (44) embedded_statement -> . iteration_statement
    (45) embedded_statement -> . jump_statement
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE
    (48) empty_statement -> . SEMI
    (49) exp_statement -> . statement_exp SEMI
    (70) selection_statement -> . if_statement
    (71) selection_statement -> . switch_statement
    (82) iteration_statement -> . while_statement
    (83) iteration_statement -> . do_statement
    (84) iteration_statement -> . for_statement
    (85) iteration_statement -> . foreach_statement
    (103) jump_statement -> . break_statement
    (104) jump_statement -> . continue_statement
    (105) jump_statement -> . return_statement
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (72) if_statement -> . IF LPAREN exp RPAREN embedded_statement
    (73) if_statement -> . IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
    (74) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (86) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (87) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (88) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (102) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (106) break_statement -> . BREAK SEMI
    (107) continue_statement -> . CONTINUE SEMI
    (108) return_statement -> . RETURN SEMI
    (109) return_statement -> . RETURN exp SEMI
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    LBRACE          shift and go to state 23
    SEMI            shift and go to state 32
    IF              shift and go to state 59
    SWITCH          shift and go to state 61
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    embedded_statement             shift and go to state 253
    block                          shift and go to state 34
    empty_statement                shift and go to state 35
    exp_statement                  shift and go to state 36
    selection_statement            shift and go to state 37
    iteration_statement            shift and go to state 38
    jump_statement                 shift and go to state 39
    statement_exp                  shift and go to state 42
    if_statement                   shift and go to state 43
    switch_statement               shift and go to state 44
    while_statement                shift and go to state 45
    do_statement                   shift and go to state 46
    for_statement                  shift and go to state 47
    foreach_statement              shift and go to state 48
    break_statement                shift and go to state 49
    continue_statement             shift and go to state 50
    return_statement               shift and go to state 51
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 232

    (87) do_statement -> DO embedded_statement WHILE LPAREN . exp RPAREN SEMI
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    exp                            shift and go to state 254
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 233

    (88) for_statement -> FOR LPAREN for_initializer SEMI . for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> FOR LPAREN for_initializer SEMI . for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> FOR LPAREN for_initializer SEMI . SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> FOR LPAREN for_initializer SEMI . SEMI RPAREN embedded_statement
    (98) for_condition -> . exp
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    SEMI            shift and go to state 255
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    for_condition                  shift and go to state 256
    exp                            shift and go to state 236
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 234

    (94) for_statement -> FOR LPAREN SEMI SEMI . for_iterator RPAREN embedded_statement
    (95) for_statement -> FOR LPAREN SEMI SEMI . RPAREN embedded_statement
    (99) for_iterator -> . statement_exp_list
    (100) statement_exp_list -> . statement_exp
    (101) statement_exp_list -> . statement_exp COMMA statement_exp_list
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    RPAREN          shift and go to state 258
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    for_iterator                   shift and go to state 257
    statement_exp_list             shift and go to state 259
    statement_exp                  shift and go to state 260
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 235

    (92) for_statement -> FOR LPAREN SEMI for_condition . SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> FOR LPAREN SEMI for_condition . SEMI RPAREN embedded_statement

    SEMI            shift and go to state 261


state 236

    (98) for_condition -> exp .

    SEMI            reduce using rule 98 (for_condition -> exp .)


state 237

    (97) for_initializer -> var_declaration COMMA . for_initializer
    (96) for_initializer -> . var_declaration
    (97) for_initializer -> . var_declaration COMMA for_initializer
    (35) var_declaration -> . type var_declarators
    (5) type -> . class_type
    (6) type -> . value_type
    (7) class_type -> . OBJECT
    (8) class_type -> . STRING
    (9) class_type -> . type_name
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (3) type_name -> . ID
    (4) type_name -> . type_name DOT ID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL

    OBJECT          shift and go to state 8
    STRING          shift and go to state 9
    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    ID              shift and go to state 5
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20

    var_declaration                shift and go to state 189
    for_initializer                shift and go to state 262
    type                           shift and go to state 41
    class_type                     shift and go to state 6
    value_type                     shift and go to state 7
    type_name                      shift and go to state 10
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12

state 238

    (102) foreach_statement -> FOREACH LPAREN type ID . IN exp RPAREN embedded_statement

    IN              shift and go to state 263


state 239

    (129) invocation_exp -> primary_exp LPAREN arg_list RPAREN .

    SEMI            reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    LSB             reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    LPAREN          reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    PLUSPLUS        reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    MINUSMINUS      reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    EQUAL           reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    STAR            reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    SLASH           reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    PERCENT         reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    PLUS            reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    LSHIFT          reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    RSHIFT          reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    LT              reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    GT              reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    LEQ             reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    GEQ             reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    IS              reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    EQEQUAL         reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    NOTEQUAL        reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    AMPER           reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    CIRCUMFLEX      reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    PIPE            reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    AMPERAMPER      reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    HOOK            reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    PIPEPIPE        reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    RSB             reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    COLON           reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    RBRACE          reduce using rule 129 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)


state 240

    (111) arg_list -> exp COMMA . arg_list
    (110) arg_list -> . exp
    (111) arg_list -> . exp COMMA arg_list
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    exp                            shift and go to state 194
    arg_list                       shift and go to state 264
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 241

    (57) object_creation_exp -> NEW type LPAREN RPAREN .
    (58) object_creation_exp -> NEW type LPAREN RPAREN . object_initializer
    (61) object_initializer -> . LBRACE RBRACE
    (62) object_initializer -> . LBRACE member_initializer_list RBRACE

    SEMI            reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    LSB             reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    LPAREN          reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    PLUSPLUS        reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    MINUSMINUS      reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    EQUAL           reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    STAR            reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    SLASH           reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    PERCENT         reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    PLUS            reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    MINUS           reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    LSHIFT          reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    RSHIFT          reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    LT              reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    GT              reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    LEQ             reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    GEQ             reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    IS              reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    EQEQUAL         reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    AMPER           reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    CIRCUMFLEX      reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    PIPE            reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    AMPERAMPER      reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    HOOK            reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    PIPEPIPE        reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    RPAREN          reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    COMMA           reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    RSB             reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    COLON           reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    RBRACE          reduce using rule 57 (object_creation_exp -> NEW type LPAREN RPAREN .)
    LBRACE          shift and go to state 266

    object_initializer             shift and go to state 265

state 242

    (59) object_creation_exp -> NEW type LPAREN arg_list . RPAREN
    (60) object_creation_exp -> NEW type LPAREN arg_list . RPAREN object_initializer

    RPAREN          shift and go to state 267


state 243

    (131) element_access -> primary_no_array_creation_exp LSB exp RSB .

    LSB             reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    LPAREN          reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    PLUSPLUS        reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    MINUSMINUS      reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    EQUAL           reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    STAR            reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    SLASH           reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    PERCENT         reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    PLUS            reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    MINUS           reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    LSHIFT          reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    RSHIFT          reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    LT              reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    GT              reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    LEQ             reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    GEQ             reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    IS              reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    EQEQUAL         reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    NOTEQUAL        reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    AMPER           reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    CIRCUMFLEX      reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    PIPE            reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    AMPERAMPER      reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    HOOK            reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    PIPEPIPE        reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    RPAREN          reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    SEMI            reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    COMMA           reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    RSB             reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    COLON           reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    RBRACE          reduce using rule 131 (element_access -> primary_no_array_creation_exp LSB exp RSB .)


state 244

    (137) typeof_exp -> TYPEOF LPAREN type RPAREN .

    LSB             reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    LPAREN          reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    PLUSPLUS        reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    MINUSMINUS      reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    EQUAL           reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    STAR            reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    SLASH           reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    PERCENT         reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    PLUS            reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    MINUS           reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    LSHIFT          reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    RSHIFT          reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    LT              reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    GT              reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    LEQ             reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    GEQ             reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    IS              reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    EQEQUAL         reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    NOTEQUAL        reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    AMPER           reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    CIRCUMFLEX      reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    PIPE            reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    AMPERAMPER      reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    HOOK            reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    PIPEPIPE        reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    RPAREN          reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    SEMI            reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    COMMA           reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    RSB             reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    COLON           reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    RBRACE          reduce using rule 137 (typeof_exp -> TYPEOF LPAREN type RPAREN .)


state 245

    (139) sizeof_exp -> SIZEOF LPAREN value_type RPAREN .

    LSB             reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    LPAREN          reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    PLUSPLUS        reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    MINUSMINUS      reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    EQUAL           reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    STAR            reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    SLASH           reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    PERCENT         reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    PLUS            reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    MINUS           reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    LSHIFT          reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    RSHIFT          reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    LT              reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    GT              reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    LEQ             reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    GEQ             reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    IS              reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    EQEQUAL         reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    NOTEQUAL        reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    AMPER           reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    CIRCUMFLEX      reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    PIPE            reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    AMPERAMPER      reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    HOOK            reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    PIPEPIPE        reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    RPAREN          reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    SEMI            reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    COMMA           reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    RSB             reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    COLON           reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    RBRACE          reduce using rule 139 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)


state 246

    (141) default_exp -> DEFAULT LPAREN type RPAREN .

    LSB             reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    LPAREN          reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    PLUSPLUS        reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    MINUSMINUS      reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    EQUAL           reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    STAR            reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    SLASH           reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    PERCENT         reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    PLUS            reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    MINUS           reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    LSHIFT          reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    RSHIFT          reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    LT              reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    GT              reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    LEQ             reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    GEQ             reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    IS              reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    EQEQUAL         reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    NOTEQUAL        reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    AMPER           reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    CIRCUMFLEX      reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    PIPE            reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    AMPERAMPER      reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    HOOK            reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    PIPEPIPE        reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    RPAREN          reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    SEMI            reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    COMMA           reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    RSB             reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    COLON           reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)
    RBRACE          reduce using rule 141 (default_exp -> DEFAULT LPAREN type RPAREN .)


state 247

    (24) param_list -> type ID COMMA . param_list
    (23) param_list -> . type ID
    (24) param_list -> . type ID COMMA param_list
    (5) type -> . class_type
    (6) type -> . value_type
    (7) class_type -> . OBJECT
    (8) class_type -> . STRING
    (9) class_type -> . type_name
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (3) type_name -> . ID
    (4) type_name -> . type_name DOT ID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL

    OBJECT          shift and go to state 8
    STRING          shift and go to state 9
    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    ID              shift and go to state 5
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20

    type                           shift and go to state 153
    param_list                     shift and go to state 268
    class_type                     shift and go to state 6
    value_type                     shift and go to state 7
    type_name                      shift and go to state 10
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12

state 248

    (33) const_declarators -> const_declarator COMMA const_declarators .

    SEMI            reduce using rule 33 (const_declarators -> const_declarator COMMA const_declarators .)


state 249

    (34) const_declarator -> ID EQUAL exp .

    COMMA           reduce using rule 34 (const_declarator -> ID EQUAL exp .)
    SEMI            reduce using rule 34 (const_declarator -> ID EQUAL exp .)


state 250

    (72) if_statement -> IF LPAREN exp RPAREN embedded_statement .
    (73) if_statement -> IF LPAREN exp RPAREN embedded_statement . ELSE embedded_statement

  ! shift/reduce conflict for ELSE resolved as shift
    CONST           reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    LBRACE          reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    SEMI            reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    IF              reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    SWITCH          reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    WHILE           reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    DO              reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    FOR             reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    FOREACH         reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    BREAK           reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    CONTINUE        reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    RETURN          reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    OBJECT          reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    STRING          reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    BOOL            reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    VOID            reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    NEW             reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    ID              reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    INT             reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    LONG            reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    CHAR            reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    FLOAT           reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    DOUBLE          reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    DECIMAL         reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    TRUE            reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    FALSE           reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    NULL            reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    INTNUM          reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    THIS            reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    LPAREN          reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    TYPEOF          reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    SIZEOF          reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    DEFAULT         reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    RBRACE          reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    CASE            reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .)
    ELSE            shift and go to state 269

  ! ELSE            [ reduce using rule 72 (if_statement -> IF LPAREN exp RPAREN embedded_statement .) ]


state 251

    (152) conditional_exp -> conditional_or_exp HOOK exp COLON . exp
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    conditional_or_exp             shift and go to state 115
    exp                            shift and go to state 270
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 252

    (74) switch_statement -> SWITCH LPAREN exp RPAREN LBRACE . switch_body RBRACE
    (75) switch_body -> . switch_section
    (76) switch_body -> . switch_section switch_body
    (77) switch_section -> . switch_label statement_list
    (78) switch_section -> . switch_label switch_section
    (79) switch_label -> . CASE pattern COLON
    (80) switch_label -> . DEFAULT COLON

    CASE            shift and go to state 274
    DEFAULT         shift and go to state 275

    switch_body                    shift and go to state 271
    switch_section                 shift and go to state 272
    switch_label                   shift and go to state 273

state 253

    (86) while_statement -> WHILE LPAREN exp RPAREN embedded_statement .

    CONST           reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    LBRACE          reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    SEMI            reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    IF              reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    SWITCH          reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    WHILE           reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    DO              reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    FOR             reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    FOREACH         reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    BREAK           reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    CONTINUE        reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    RETURN          reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    OBJECT          reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    STRING          reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    BOOL            reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    VOID            reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    NEW             reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    ID              reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    INT             reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    LONG            reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    CHAR            reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    FLOAT           reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    DOUBLE          reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    DECIMAL         reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    TRUE            reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    FALSE           reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    NULL            reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    INTNUM          reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    THIS            reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    LPAREN          reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    TYPEOF          reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    SIZEOF          reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    DEFAULT         reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    RBRACE          reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    CASE            reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    ELSE            reduce using rule 86 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)


state 254

    (87) do_statement -> DO embedded_statement WHILE LPAREN exp . RPAREN SEMI

    RPAREN          shift and go to state 276


state 255

    (90) for_statement -> FOR LPAREN for_initializer SEMI SEMI . for_iterator RPAREN embedded_statement
    (91) for_statement -> FOR LPAREN for_initializer SEMI SEMI . RPAREN embedded_statement
    (99) for_iterator -> . statement_exp_list
    (100) statement_exp_list -> . statement_exp
    (101) statement_exp_list -> . statement_exp COMMA statement_exp_list
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    RPAREN          shift and go to state 278
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    for_iterator                   shift and go to state 277
    statement_exp_list             shift and go to state 259
    statement_exp                  shift and go to state 260
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 256

    (88) for_statement -> FOR LPAREN for_initializer SEMI for_condition . SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> FOR LPAREN for_initializer SEMI for_condition . SEMI RPAREN embedded_statement

    SEMI            shift and go to state 279


state 257

    (94) for_statement -> FOR LPAREN SEMI SEMI for_iterator . RPAREN embedded_statement

    RPAREN          shift and go to state 280


state 258

    (95) for_statement -> FOR LPAREN SEMI SEMI RPAREN . embedded_statement
    (40) embedded_statement -> . block
    (41) embedded_statement -> . empty_statement
    (42) embedded_statement -> . exp_statement
    (43) embedded_statement -> . selection_statement
    (44) embedded_statement -> . iteration_statement
    (45) embedded_statement -> . jump_statement
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE
    (48) empty_statement -> . SEMI
    (49) exp_statement -> . statement_exp SEMI
    (70) selection_statement -> . if_statement
    (71) selection_statement -> . switch_statement
    (82) iteration_statement -> . while_statement
    (83) iteration_statement -> . do_statement
    (84) iteration_statement -> . for_statement
    (85) iteration_statement -> . foreach_statement
    (103) jump_statement -> . break_statement
    (104) jump_statement -> . continue_statement
    (105) jump_statement -> . return_statement
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (72) if_statement -> . IF LPAREN exp RPAREN embedded_statement
    (73) if_statement -> . IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
    (74) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (86) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (87) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (88) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (102) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (106) break_statement -> . BREAK SEMI
    (107) continue_statement -> . CONTINUE SEMI
    (108) return_statement -> . RETURN SEMI
    (109) return_statement -> . RETURN exp SEMI
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    LBRACE          shift and go to state 23
    SEMI            shift and go to state 32
    IF              shift and go to state 59
    SWITCH          shift and go to state 61
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    embedded_statement             shift and go to state 281
    block                          shift and go to state 34
    empty_statement                shift and go to state 35
    exp_statement                  shift and go to state 36
    selection_statement            shift and go to state 37
    iteration_statement            shift and go to state 38
    jump_statement                 shift and go to state 39
    statement_exp                  shift and go to state 42
    if_statement                   shift and go to state 43
    switch_statement               shift and go to state 44
    while_statement                shift and go to state 45
    do_statement                   shift and go to state 46
    for_statement                  shift and go to state 47
    foreach_statement              shift and go to state 48
    break_statement                shift and go to state 49
    continue_statement             shift and go to state 50
    return_statement               shift and go to state 51
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 259

    (99) for_iterator -> statement_exp_list .

    RPAREN          reduce using rule 99 (for_iterator -> statement_exp_list .)


state 260

    (100) statement_exp_list -> statement_exp .
    (101) statement_exp_list -> statement_exp . COMMA statement_exp_list

    RPAREN          reduce using rule 100 (statement_exp_list -> statement_exp .)
    COMMA           shift and go to state 282


state 261

    (92) for_statement -> FOR LPAREN SEMI for_condition SEMI . for_iterator RPAREN embedded_statement
    (93) for_statement -> FOR LPAREN SEMI for_condition SEMI . RPAREN embedded_statement
    (99) for_iterator -> . statement_exp_list
    (100) statement_exp_list -> . statement_exp
    (101) statement_exp_list -> . statement_exp COMMA statement_exp_list
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    RPAREN          shift and go to state 284
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    for_iterator                   shift and go to state 283
    statement_exp_list             shift and go to state 259
    statement_exp                  shift and go to state 260
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 262

    (97) for_initializer -> var_declaration COMMA for_initializer .

    SEMI            reduce using rule 97 (for_initializer -> var_declaration COMMA for_initializer .)


state 263

    (102) foreach_statement -> FOREACH LPAREN type ID IN . exp RPAREN embedded_statement
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    exp                            shift and go to state 285
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 264

    (111) arg_list -> exp COMMA arg_list .

    RPAREN          reduce using rule 111 (arg_list -> exp COMMA arg_list .)


state 265

    (58) object_creation_exp -> NEW type LPAREN RPAREN object_initializer .

    SEMI            reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    LSB             reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    LPAREN          reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    PLUSPLUS        reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    MINUSMINUS      reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    EQUAL           reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    STAR            reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    SLASH           reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    PERCENT         reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    PLUS            reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    MINUS           reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    LSHIFT          reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    RSHIFT          reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    LT              reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    GT              reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    LEQ             reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    GEQ             reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    IS              reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    EQEQUAL         reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    NOTEQUAL        reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    AMPER           reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    CIRCUMFLEX      reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    PIPE            reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    AMPERAMPER      reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    HOOK            reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    PIPEPIPE        reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    RPAREN          reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    COMMA           reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    RSB             reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    COLON           reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    RBRACE          reduce using rule 58 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)


state 266

    (61) object_initializer -> LBRACE . RBRACE
    (62) object_initializer -> LBRACE . member_initializer_list RBRACE
    (63) member_initializer_list -> . member_initializer
    (64) member_initializer_list -> . member_initializer COMMA member_initializer_list
    (65) member_initializer -> . ID EQUAL exp

    RBRACE          shift and go to state 286
    ID              shift and go to state 289

    member_initializer_list        shift and go to state 287
    member_initializer             shift and go to state 288

state 267

    (59) object_creation_exp -> NEW type LPAREN arg_list RPAREN .
    (60) object_creation_exp -> NEW type LPAREN arg_list RPAREN . object_initializer
    (61) object_initializer -> . LBRACE RBRACE
    (62) object_initializer -> . LBRACE member_initializer_list RBRACE

    SEMI            reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    LSB             reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    LPAREN          reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    PLUSPLUS        reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    MINUSMINUS      reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    EQUAL           reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    STAR            reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    SLASH           reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    PERCENT         reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    PLUS            reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    LSHIFT          reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    RSHIFT          reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    LT              reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    GT              reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    LEQ             reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    GEQ             reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    IS              reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    EQEQUAL         reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    NOTEQUAL        reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    AMPER           reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    CIRCUMFLEX      reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    PIPE            reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    AMPERAMPER      reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    HOOK            reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    PIPEPIPE        reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    RSB             reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    COLON           reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    RBRACE          reduce using rule 59 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    LBRACE          shift and go to state 266

    object_initializer             shift and go to state 290

state 268

    (24) param_list -> type ID COMMA param_list .

    RPAREN          reduce using rule 24 (param_list -> type ID COMMA param_list .)


state 269

    (73) if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE . embedded_statement
    (40) embedded_statement -> . block
    (41) embedded_statement -> . empty_statement
    (42) embedded_statement -> . exp_statement
    (43) embedded_statement -> . selection_statement
    (44) embedded_statement -> . iteration_statement
    (45) embedded_statement -> . jump_statement
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE
    (48) empty_statement -> . SEMI
    (49) exp_statement -> . statement_exp SEMI
    (70) selection_statement -> . if_statement
    (71) selection_statement -> . switch_statement
    (82) iteration_statement -> . while_statement
    (83) iteration_statement -> . do_statement
    (84) iteration_statement -> . for_statement
    (85) iteration_statement -> . foreach_statement
    (103) jump_statement -> . break_statement
    (104) jump_statement -> . continue_statement
    (105) jump_statement -> . return_statement
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (72) if_statement -> . IF LPAREN exp RPAREN embedded_statement
    (73) if_statement -> . IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
    (74) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (86) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (87) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (88) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (102) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (106) break_statement -> . BREAK SEMI
    (107) continue_statement -> . CONTINUE SEMI
    (108) return_statement -> . RETURN SEMI
    (109) return_statement -> . RETURN exp SEMI
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    LBRACE          shift and go to state 23
    SEMI            shift and go to state 32
    IF              shift and go to state 59
    SWITCH          shift and go to state 61
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    embedded_statement             shift and go to state 291
    block                          shift and go to state 34
    empty_statement                shift and go to state 35
    exp_statement                  shift and go to state 36
    selection_statement            shift and go to state 37
    iteration_statement            shift and go to state 38
    jump_statement                 shift and go to state 39
    statement_exp                  shift and go to state 42
    if_statement                   shift and go to state 43
    switch_statement               shift and go to state 44
    while_statement                shift and go to state 45
    do_statement                   shift and go to state 46
    for_statement                  shift and go to state 47
    foreach_statement              shift and go to state 48
    break_statement                shift and go to state 49
    continue_statement             shift and go to state 50
    return_statement               shift and go to state 51
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 270

    (152) conditional_exp -> conditional_or_exp HOOK exp COLON exp .

    RPAREN          reduce using rule 152 (conditional_exp -> conditional_or_exp HOOK exp COLON exp .)
    SEMI            reduce using rule 152 (conditional_exp -> conditional_or_exp HOOK exp COLON exp .)
    COMMA           reduce using rule 152 (conditional_exp -> conditional_or_exp HOOK exp COLON exp .)
    RSB             reduce using rule 152 (conditional_exp -> conditional_or_exp HOOK exp COLON exp .)
    COLON           reduce using rule 152 (conditional_exp -> conditional_or_exp HOOK exp COLON exp .)
    RBRACE          reduce using rule 152 (conditional_exp -> conditional_or_exp HOOK exp COLON exp .)


state 271

    (74) switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body . RBRACE

    RBRACE          shift and go to state 292


state 272

    (75) switch_body -> switch_section .
    (76) switch_body -> switch_section . switch_body
    (75) switch_body -> . switch_section
    (76) switch_body -> . switch_section switch_body
    (77) switch_section -> . switch_label statement_list
    (78) switch_section -> . switch_label switch_section
    (79) switch_label -> . CASE pattern COLON
    (80) switch_label -> . DEFAULT COLON

    RBRACE          reduce using rule 75 (switch_body -> switch_section .)
    CASE            shift and go to state 274
    DEFAULT         shift and go to state 275

    switch_section                 shift and go to state 272
    switch_body                    shift and go to state 293
    switch_label                   shift and go to state 273

state 273

    (77) switch_section -> switch_label . statement_list
    (78) switch_section -> switch_label . switch_section
    (25) statement_list -> . statement
    (26) statement_list -> . statement statement_list
    (77) switch_section -> . switch_label statement_list
    (78) switch_section -> . switch_label switch_section
    (27) statement -> . declaration_statement
    (28) statement -> . embedded_statement
    (79) switch_label -> . CASE pattern COLON
    (80) switch_label -> . DEFAULT COLON
    (29) declaration_statement -> . const_declaration SEMI
    (30) declaration_statement -> . var_declaration SEMI
    (40) embedded_statement -> . block
    (41) embedded_statement -> . empty_statement
    (42) embedded_statement -> . exp_statement
    (43) embedded_statement -> . selection_statement
    (44) embedded_statement -> . iteration_statement
    (45) embedded_statement -> . jump_statement
    (31) const_declaration -> . CONST type const_declarators
    (35) var_declaration -> . type var_declarators
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE
    (48) empty_statement -> . SEMI
    (49) exp_statement -> . statement_exp SEMI
    (70) selection_statement -> . if_statement
    (71) selection_statement -> . switch_statement
    (82) iteration_statement -> . while_statement
    (83) iteration_statement -> . do_statement
    (84) iteration_statement -> . for_statement
    (85) iteration_statement -> . foreach_statement
    (103) jump_statement -> . break_statement
    (104) jump_statement -> . continue_statement
    (105) jump_statement -> . return_statement
    (5) type -> . class_type
    (6) type -> . value_type
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (72) if_statement -> . IF LPAREN exp RPAREN embedded_statement
    (73) if_statement -> . IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
    (74) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (86) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (87) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (88) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (102) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (106) break_statement -> . BREAK SEMI
    (107) continue_statement -> . CONTINUE SEMI
    (108) return_statement -> . RETURN SEMI
    (109) return_statement -> . RETURN exp SEMI
    (7) class_type -> . OBJECT
    (8) class_type -> . STRING
    (9) class_type -> . type_name
    (10) value_type -> . integral_type
    (11) value_type -> . floating_point_type
    (12) value_type -> . BOOL
    (13) value_type -> . VOID
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (3) type_name -> . ID
    (4) type_name -> . type_name DOT ID
    (14) integral_type -> . INT
    (15) integral_type -> . LONG
    (16) integral_type -> . CHAR
    (17) floating_point_type -> . FLOAT
    (18) floating_point_type -> . DOUBLE
    (19) floating_point_type -> . DECIMAL
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    CASE            shift and go to state 274
    DEFAULT         shift and go to state 296
    CONST           shift and go to state 40
    LBRACE          shift and go to state 23
    SEMI            shift and go to state 32
    IF              shift and go to state 59
    SWITCH          shift and go to state 61
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    OBJECT          shift and go to state 8
    STRING          shift and go to state 9
    BOOL            shift and go to state 13
    VOID            shift and go to state 14
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    ID              shift and go to state 66
    INT             shift and go to state 15
    LONG            shift and go to state 16
    CHAR            shift and go to state 17
    FLOAT           shift and go to state 18
    DOUBLE          shift and go to state 19
    DECIMAL         shift and go to state 20
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95

    switch_label                   shift and go to state 273
    statement_list                 shift and go to state 294
    switch_section                 shift and go to state 295
    statement                      shift and go to state 28
    declaration_statement          shift and go to state 29
    embedded_statement             shift and go to state 30
    const_declaration              shift and go to state 31
    var_declaration                shift and go to state 33
    block                          shift and go to state 34
    empty_statement                shift and go to state 35
    exp_statement                  shift and go to state 36
    selection_statement            shift and go to state 37
    iteration_statement            shift and go to state 38
    jump_statement                 shift and go to state 39
    type                           shift and go to state 41
    statement_exp                  shift and go to state 42
    if_statement                   shift and go to state 43
    switch_statement               shift and go to state 44
    while_statement                shift and go to state 45
    do_statement                   shift and go to state 46
    for_statement                  shift and go to state 47
    foreach_statement              shift and go to state 48
    break_statement                shift and go to state 49
    continue_statement             shift and go to state 50
    return_statement               shift and go to state 51
    class_type                     shift and go to state 6
    value_type                     shift and go to state 7
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    type_name                      shift and go to state 10
    integral_type                  shift and go to state 11
    floating_point_type            shift and go to state 12
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 274

    (79) switch_label -> CASE . pattern COLON
    (81) pattern -> . exp
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    pattern                        shift and go to state 297
    exp                            shift and go to state 298
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 275

    (80) switch_label -> DEFAULT . COLON

    COLON           shift and go to state 299


state 276

    (87) do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN . SEMI

    SEMI            shift and go to state 300


state 277

    (90) for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator . RPAREN embedded_statement

    RPAREN          shift and go to state 301


state 278

    (91) for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN . embedded_statement
    (40) embedded_statement -> . block
    (41) embedded_statement -> . empty_statement
    (42) embedded_statement -> . exp_statement
    (43) embedded_statement -> . selection_statement
    (44) embedded_statement -> . iteration_statement
    (45) embedded_statement -> . jump_statement
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE
    (48) empty_statement -> . SEMI
    (49) exp_statement -> . statement_exp SEMI
    (70) selection_statement -> . if_statement
    (71) selection_statement -> . switch_statement
    (82) iteration_statement -> . while_statement
    (83) iteration_statement -> . do_statement
    (84) iteration_statement -> . for_statement
    (85) iteration_statement -> . foreach_statement
    (103) jump_statement -> . break_statement
    (104) jump_statement -> . continue_statement
    (105) jump_statement -> . return_statement
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (72) if_statement -> . IF LPAREN exp RPAREN embedded_statement
    (73) if_statement -> . IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
    (74) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (86) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (87) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (88) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (102) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (106) break_statement -> . BREAK SEMI
    (107) continue_statement -> . CONTINUE SEMI
    (108) return_statement -> . RETURN SEMI
    (109) return_statement -> . RETURN exp SEMI
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    LBRACE          shift and go to state 23
    SEMI            shift and go to state 32
    IF              shift and go to state 59
    SWITCH          shift and go to state 61
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    embedded_statement             shift and go to state 302
    block                          shift and go to state 34
    empty_statement                shift and go to state 35
    exp_statement                  shift and go to state 36
    selection_statement            shift and go to state 37
    iteration_statement            shift and go to state 38
    jump_statement                 shift and go to state 39
    statement_exp                  shift and go to state 42
    if_statement                   shift and go to state 43
    switch_statement               shift and go to state 44
    while_statement                shift and go to state 45
    do_statement                   shift and go to state 46
    for_statement                  shift and go to state 47
    foreach_statement              shift and go to state 48
    break_statement                shift and go to state 49
    continue_statement             shift and go to state 50
    return_statement               shift and go to state 51
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 279

    (88) for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI . for_iterator RPAREN embedded_statement
    (89) for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI . RPAREN embedded_statement
    (99) for_iterator -> . statement_exp_list
    (100) statement_exp_list -> . statement_exp
    (101) statement_exp_list -> . statement_exp COMMA statement_exp_list
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    RPAREN          shift and go to state 304
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    for_iterator                   shift and go to state 303
    statement_exp_list             shift and go to state 259
    statement_exp                  shift and go to state 260
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 280

    (94) for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN . embedded_statement
    (40) embedded_statement -> . block
    (41) embedded_statement -> . empty_statement
    (42) embedded_statement -> . exp_statement
    (43) embedded_statement -> . selection_statement
    (44) embedded_statement -> . iteration_statement
    (45) embedded_statement -> . jump_statement
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE
    (48) empty_statement -> . SEMI
    (49) exp_statement -> . statement_exp SEMI
    (70) selection_statement -> . if_statement
    (71) selection_statement -> . switch_statement
    (82) iteration_statement -> . while_statement
    (83) iteration_statement -> . do_statement
    (84) iteration_statement -> . for_statement
    (85) iteration_statement -> . foreach_statement
    (103) jump_statement -> . break_statement
    (104) jump_statement -> . continue_statement
    (105) jump_statement -> . return_statement
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (72) if_statement -> . IF LPAREN exp RPAREN embedded_statement
    (73) if_statement -> . IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
    (74) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (86) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (87) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (88) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (102) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (106) break_statement -> . BREAK SEMI
    (107) continue_statement -> . CONTINUE SEMI
    (108) return_statement -> . RETURN SEMI
    (109) return_statement -> . RETURN exp SEMI
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    LBRACE          shift and go to state 23
    SEMI            shift and go to state 32
    IF              shift and go to state 59
    SWITCH          shift and go to state 61
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    embedded_statement             shift and go to state 305
    block                          shift and go to state 34
    empty_statement                shift and go to state 35
    exp_statement                  shift and go to state 36
    selection_statement            shift and go to state 37
    iteration_statement            shift and go to state 38
    jump_statement                 shift and go to state 39
    statement_exp                  shift and go to state 42
    if_statement                   shift and go to state 43
    switch_statement               shift and go to state 44
    while_statement                shift and go to state 45
    do_statement                   shift and go to state 46
    for_statement                  shift and go to state 47
    foreach_statement              shift and go to state 48
    break_statement                shift and go to state 49
    continue_statement             shift and go to state 50
    return_statement               shift and go to state 51
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 281

    (95) for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .

    CONST           reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    LBRACE          reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    SEMI            reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    IF              reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    SWITCH          reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    WHILE           reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    DO              reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    FOR             reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    FOREACH         reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    BREAK           reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    CONTINUE        reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    RETURN          reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    OBJECT          reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    STRING          reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    BOOL            reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    VOID            reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    NEW             reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    ID              reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    INT             reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    LONG            reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    CHAR            reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    FLOAT           reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    DOUBLE          reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    DECIMAL         reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    TRUE            reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    FALSE           reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    NULL            reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    INTNUM          reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    THIS            reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    LPAREN          reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    TYPEOF          reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    SIZEOF          reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    DEFAULT         reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    RBRACE          reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    CASE            reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    ELSE            reduce using rule 95 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)


state 282

    (101) statement_exp_list -> statement_exp COMMA . statement_exp_list
    (100) statement_exp_list -> . statement_exp
    (101) statement_exp_list -> . statement_exp COMMA statement_exp_list
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    statement_exp                  shift and go to state 260
    statement_exp_list             shift and go to state 306
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 283

    (92) for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator . RPAREN embedded_statement

    RPAREN          shift and go to state 307


state 284

    (93) for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN . embedded_statement
    (40) embedded_statement -> . block
    (41) embedded_statement -> . empty_statement
    (42) embedded_statement -> . exp_statement
    (43) embedded_statement -> . selection_statement
    (44) embedded_statement -> . iteration_statement
    (45) embedded_statement -> . jump_statement
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE
    (48) empty_statement -> . SEMI
    (49) exp_statement -> . statement_exp SEMI
    (70) selection_statement -> . if_statement
    (71) selection_statement -> . switch_statement
    (82) iteration_statement -> . while_statement
    (83) iteration_statement -> . do_statement
    (84) iteration_statement -> . for_statement
    (85) iteration_statement -> . foreach_statement
    (103) jump_statement -> . break_statement
    (104) jump_statement -> . continue_statement
    (105) jump_statement -> . return_statement
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (72) if_statement -> . IF LPAREN exp RPAREN embedded_statement
    (73) if_statement -> . IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
    (74) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (86) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (87) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (88) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (102) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (106) break_statement -> . BREAK SEMI
    (107) continue_statement -> . CONTINUE SEMI
    (108) return_statement -> . RETURN SEMI
    (109) return_statement -> . RETURN exp SEMI
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    LBRACE          shift and go to state 23
    SEMI            shift and go to state 32
    IF              shift and go to state 59
    SWITCH          shift and go to state 61
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    embedded_statement             shift and go to state 308
    block                          shift and go to state 34
    empty_statement                shift and go to state 35
    exp_statement                  shift and go to state 36
    selection_statement            shift and go to state 37
    iteration_statement            shift and go to state 38
    jump_statement                 shift and go to state 39
    statement_exp                  shift and go to state 42
    if_statement                   shift and go to state 43
    switch_statement               shift and go to state 44
    while_statement                shift and go to state 45
    do_statement                   shift and go to state 46
    for_statement                  shift and go to state 47
    foreach_statement              shift and go to state 48
    break_statement                shift and go to state 49
    continue_statement             shift and go to state 50
    return_statement               shift and go to state 51
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 285

    (102) foreach_statement -> FOREACH LPAREN type ID IN exp . RPAREN embedded_statement

    RPAREN          shift and go to state 309


state 286

    (61) object_initializer -> LBRACE RBRACE .

    SEMI            reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    LSB             reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    LPAREN          reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    PLUSPLUS        reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    MINUSMINUS      reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    EQUAL           reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    STAR            reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    SLASH           reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    PERCENT         reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    PLUS            reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    MINUS           reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    LSHIFT          reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    RSHIFT          reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    LT              reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    GT              reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    LEQ             reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    GEQ             reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    IS              reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    EQEQUAL         reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    NOTEQUAL        reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    AMPER           reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    CIRCUMFLEX      reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    PIPE            reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    AMPERAMPER      reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    HOOK            reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    PIPEPIPE        reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    RPAREN          reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    COMMA           reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    RSB             reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    COLON           reduce using rule 61 (object_initializer -> LBRACE RBRACE .)
    RBRACE          reduce using rule 61 (object_initializer -> LBRACE RBRACE .)


state 287

    (62) object_initializer -> LBRACE member_initializer_list . RBRACE

    RBRACE          shift and go to state 310


state 288

    (63) member_initializer_list -> member_initializer .
    (64) member_initializer_list -> member_initializer . COMMA member_initializer_list

    RBRACE          reduce using rule 63 (member_initializer_list -> member_initializer .)
    COMMA           shift and go to state 311


state 289

    (65) member_initializer -> ID . EQUAL exp

    EQUAL           shift and go to state 312


state 290

    (60) object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .

    SEMI            reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    LSB             reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    LPAREN          reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    PLUSPLUS        reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    MINUSMINUS      reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    EQUAL           reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    STAR            reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    SLASH           reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    PERCENT         reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    PLUS            reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    MINUS           reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    LSHIFT          reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    RSHIFT          reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    LT              reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    GT              reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    LEQ             reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    GEQ             reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    IS              reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    EQEQUAL         reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    NOTEQUAL        reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    AMPER           reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    CIRCUMFLEX      reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    PIPE            reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    AMPERAMPER      reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    HOOK            reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    PIPEPIPE        reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    RPAREN          reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    COMMA           reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    RSB             reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    COLON           reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    RBRACE          reduce using rule 60 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)


state 291

    (73) if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .

    CONST           reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    LBRACE          reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    SEMI            reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    IF              reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    SWITCH          reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    WHILE           reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    DO              reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    FOR             reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    FOREACH         reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    BREAK           reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    CONTINUE        reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    RETURN          reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    OBJECT          reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    STRING          reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    BOOL            reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    VOID            reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    NEW             reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    PLUSPLUS        reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    MINUSMINUS      reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    ID              reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    INT             reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    LONG            reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    CHAR            reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    FLOAT           reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    DOUBLE          reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    DECIMAL         reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    TRUE            reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    FALSE           reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    NULL            reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    INTNUM          reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    HEXADECIMALNUM  reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    BINARYNUM       reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    FLOATNUM        reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    DOUBLENUM       reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    DECIMALNUM      reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    CHARLITERAL     reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    STRINGLITERAL   reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    THIS            reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    LPAREN          reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    TYPEOF          reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    SIZEOF          reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    DEFAULT         reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    RBRACE          reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    CASE            reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)
    ELSE            reduce using rule 73 (if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement .)


state 292

    (74) switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .

    CONST           reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    LBRACE          reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    SEMI            reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    IF              reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    SWITCH          reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    WHILE           reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    DO              reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    FOR             reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    FOREACH         reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    BREAK           reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    CONTINUE        reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    RETURN          reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    OBJECT          reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    STRING          reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    BOOL            reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    VOID            reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    NEW             reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    PLUSPLUS        reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    MINUSMINUS      reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    ID              reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    INT             reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    LONG            reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    CHAR            reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    FLOAT           reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    DOUBLE          reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    DECIMAL         reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    TRUE            reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    FALSE           reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    NULL            reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    INTNUM          reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    HEXADECIMALNUM  reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    BINARYNUM       reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    FLOATNUM        reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    DOUBLENUM       reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    DECIMALNUM      reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    CHARLITERAL     reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    STRINGLITERAL   reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    THIS            reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    LPAREN          reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    TYPEOF          reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    SIZEOF          reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    DEFAULT         reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    RBRACE          reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    CASE            reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    ELSE            reduce using rule 74 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)


state 293

    (76) switch_body -> switch_section switch_body .

    RBRACE          reduce using rule 76 (switch_body -> switch_section switch_body .)


state 294

    (77) switch_section -> switch_label statement_list .

    CASE            reduce using rule 77 (switch_section -> switch_label statement_list .)
    DEFAULT         reduce using rule 77 (switch_section -> switch_label statement_list .)
    RBRACE          reduce using rule 77 (switch_section -> switch_label statement_list .)


state 295

    (78) switch_section -> switch_label switch_section .

    CASE            reduce using rule 78 (switch_section -> switch_label switch_section .)
    DEFAULT         reduce using rule 78 (switch_section -> switch_label switch_section .)
    RBRACE          reduce using rule 78 (switch_section -> switch_label switch_section .)


state 296

    (80) switch_label -> DEFAULT . COLON
    (141) default_exp -> DEFAULT . LPAREN type RPAREN

    COLON           shift and go to state 299
    LPAREN          shift and go to state 152


state 297

    (79) switch_label -> CASE pattern . COLON

    COLON           shift and go to state 313


state 298

    (81) pattern -> exp .

    COLON           reduce using rule 81 (pattern -> exp .)


state 299

    (80) switch_label -> DEFAULT COLON .

    CASE            reduce using rule 80 (switch_label -> DEFAULT COLON .)
    DEFAULT         reduce using rule 80 (switch_label -> DEFAULT COLON .)
    CONST           reduce using rule 80 (switch_label -> DEFAULT COLON .)
    LBRACE          reduce using rule 80 (switch_label -> DEFAULT COLON .)
    SEMI            reduce using rule 80 (switch_label -> DEFAULT COLON .)
    IF              reduce using rule 80 (switch_label -> DEFAULT COLON .)
    SWITCH          reduce using rule 80 (switch_label -> DEFAULT COLON .)
    WHILE           reduce using rule 80 (switch_label -> DEFAULT COLON .)
    DO              reduce using rule 80 (switch_label -> DEFAULT COLON .)
    FOR             reduce using rule 80 (switch_label -> DEFAULT COLON .)
    FOREACH         reduce using rule 80 (switch_label -> DEFAULT COLON .)
    BREAK           reduce using rule 80 (switch_label -> DEFAULT COLON .)
    CONTINUE        reduce using rule 80 (switch_label -> DEFAULT COLON .)
    RETURN          reduce using rule 80 (switch_label -> DEFAULT COLON .)
    OBJECT          reduce using rule 80 (switch_label -> DEFAULT COLON .)
    STRING          reduce using rule 80 (switch_label -> DEFAULT COLON .)
    BOOL            reduce using rule 80 (switch_label -> DEFAULT COLON .)
    VOID            reduce using rule 80 (switch_label -> DEFAULT COLON .)
    NEW             reduce using rule 80 (switch_label -> DEFAULT COLON .)
    PLUSPLUS        reduce using rule 80 (switch_label -> DEFAULT COLON .)
    MINUSMINUS      reduce using rule 80 (switch_label -> DEFAULT COLON .)
    ID              reduce using rule 80 (switch_label -> DEFAULT COLON .)
    INT             reduce using rule 80 (switch_label -> DEFAULT COLON .)
    LONG            reduce using rule 80 (switch_label -> DEFAULT COLON .)
    CHAR            reduce using rule 80 (switch_label -> DEFAULT COLON .)
    FLOAT           reduce using rule 80 (switch_label -> DEFAULT COLON .)
    DOUBLE          reduce using rule 80 (switch_label -> DEFAULT COLON .)
    DECIMAL         reduce using rule 80 (switch_label -> DEFAULT COLON .)
    TRUE            reduce using rule 80 (switch_label -> DEFAULT COLON .)
    FALSE           reduce using rule 80 (switch_label -> DEFAULT COLON .)
    NULL            reduce using rule 80 (switch_label -> DEFAULT COLON .)
    INTNUM          reduce using rule 80 (switch_label -> DEFAULT COLON .)
    HEXADECIMALNUM  reduce using rule 80 (switch_label -> DEFAULT COLON .)
    BINARYNUM       reduce using rule 80 (switch_label -> DEFAULT COLON .)
    FLOATNUM        reduce using rule 80 (switch_label -> DEFAULT COLON .)
    DOUBLENUM       reduce using rule 80 (switch_label -> DEFAULT COLON .)
    DECIMALNUM      reduce using rule 80 (switch_label -> DEFAULT COLON .)
    CHARLITERAL     reduce using rule 80 (switch_label -> DEFAULT COLON .)
    STRINGLITERAL   reduce using rule 80 (switch_label -> DEFAULT COLON .)
    THIS            reduce using rule 80 (switch_label -> DEFAULT COLON .)
    LPAREN          reduce using rule 80 (switch_label -> DEFAULT COLON .)
    TYPEOF          reduce using rule 80 (switch_label -> DEFAULT COLON .)
    SIZEOF          reduce using rule 80 (switch_label -> DEFAULT COLON .)


state 300

    (87) do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .

    CONST           reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    LBRACE          reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    SEMI            reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    IF              reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    SWITCH          reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    WHILE           reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    DO              reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    FOR             reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    FOREACH         reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    BREAK           reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    CONTINUE        reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    RETURN          reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    OBJECT          reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    STRING          reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    BOOL            reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    VOID            reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    NEW             reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    PLUSPLUS        reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    MINUSMINUS      reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    ID              reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    INT             reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    LONG            reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    CHAR            reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    FLOAT           reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    DOUBLE          reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    DECIMAL         reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    TRUE            reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    FALSE           reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    NULL            reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    INTNUM          reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    HEXADECIMALNUM  reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    BINARYNUM       reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    FLOATNUM        reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    DOUBLENUM       reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    DECIMALNUM      reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    CHARLITERAL     reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    STRINGLITERAL   reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    THIS            reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    LPAREN          reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    TYPEOF          reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    SIZEOF          reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    DEFAULT         reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    RBRACE          reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    CASE            reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    ELSE            reduce using rule 87 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)


state 301

    (90) for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN . embedded_statement
    (40) embedded_statement -> . block
    (41) embedded_statement -> . empty_statement
    (42) embedded_statement -> . exp_statement
    (43) embedded_statement -> . selection_statement
    (44) embedded_statement -> . iteration_statement
    (45) embedded_statement -> . jump_statement
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE
    (48) empty_statement -> . SEMI
    (49) exp_statement -> . statement_exp SEMI
    (70) selection_statement -> . if_statement
    (71) selection_statement -> . switch_statement
    (82) iteration_statement -> . while_statement
    (83) iteration_statement -> . do_statement
    (84) iteration_statement -> . for_statement
    (85) iteration_statement -> . foreach_statement
    (103) jump_statement -> . break_statement
    (104) jump_statement -> . continue_statement
    (105) jump_statement -> . return_statement
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (72) if_statement -> . IF LPAREN exp RPAREN embedded_statement
    (73) if_statement -> . IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
    (74) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (86) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (87) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (88) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (102) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (106) break_statement -> . BREAK SEMI
    (107) continue_statement -> . CONTINUE SEMI
    (108) return_statement -> . RETURN SEMI
    (109) return_statement -> . RETURN exp SEMI
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    LBRACE          shift and go to state 23
    SEMI            shift and go to state 32
    IF              shift and go to state 59
    SWITCH          shift and go to state 61
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    embedded_statement             shift and go to state 314
    block                          shift and go to state 34
    empty_statement                shift and go to state 35
    exp_statement                  shift and go to state 36
    selection_statement            shift and go to state 37
    iteration_statement            shift and go to state 38
    jump_statement                 shift and go to state 39
    statement_exp                  shift and go to state 42
    if_statement                   shift and go to state 43
    switch_statement               shift and go to state 44
    while_statement                shift and go to state 45
    do_statement                   shift and go to state 46
    for_statement                  shift and go to state 47
    foreach_statement              shift and go to state 48
    break_statement                shift and go to state 49
    continue_statement             shift and go to state 50
    return_statement               shift and go to state 51
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 302

    (91) for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .

    CONST           reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    LBRACE          reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    SEMI            reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    IF              reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    SWITCH          reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    WHILE           reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    DO              reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    FOR             reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    FOREACH         reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    BREAK           reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    CONTINUE        reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    RETURN          reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    OBJECT          reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    STRING          reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    BOOL            reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    VOID            reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    NEW             reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    ID              reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    INT             reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    LONG            reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    CHAR            reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    FLOAT           reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    DOUBLE          reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    DECIMAL         reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    TRUE            reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    FALSE           reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    NULL            reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    INTNUM          reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    THIS            reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    LPAREN          reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    TYPEOF          reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    SIZEOF          reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    DEFAULT         reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    RBRACE          reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    CASE            reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    ELSE            reduce using rule 91 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)


state 303

    (88) for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator . RPAREN embedded_statement

    RPAREN          shift and go to state 315


state 304

    (89) for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN . embedded_statement
    (40) embedded_statement -> . block
    (41) embedded_statement -> . empty_statement
    (42) embedded_statement -> . exp_statement
    (43) embedded_statement -> . selection_statement
    (44) embedded_statement -> . iteration_statement
    (45) embedded_statement -> . jump_statement
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE
    (48) empty_statement -> . SEMI
    (49) exp_statement -> . statement_exp SEMI
    (70) selection_statement -> . if_statement
    (71) selection_statement -> . switch_statement
    (82) iteration_statement -> . while_statement
    (83) iteration_statement -> . do_statement
    (84) iteration_statement -> . for_statement
    (85) iteration_statement -> . foreach_statement
    (103) jump_statement -> . break_statement
    (104) jump_statement -> . continue_statement
    (105) jump_statement -> . return_statement
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (72) if_statement -> . IF LPAREN exp RPAREN embedded_statement
    (73) if_statement -> . IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
    (74) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (86) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (87) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (88) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (102) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (106) break_statement -> . BREAK SEMI
    (107) continue_statement -> . CONTINUE SEMI
    (108) return_statement -> . RETURN SEMI
    (109) return_statement -> . RETURN exp SEMI
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    LBRACE          shift and go to state 23
    SEMI            shift and go to state 32
    IF              shift and go to state 59
    SWITCH          shift and go to state 61
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    embedded_statement             shift and go to state 316
    block                          shift and go to state 34
    empty_statement                shift and go to state 35
    exp_statement                  shift and go to state 36
    selection_statement            shift and go to state 37
    iteration_statement            shift and go to state 38
    jump_statement                 shift and go to state 39
    statement_exp                  shift and go to state 42
    if_statement                   shift and go to state 43
    switch_statement               shift and go to state 44
    while_statement                shift and go to state 45
    do_statement                   shift and go to state 46
    for_statement                  shift and go to state 47
    foreach_statement              shift and go to state 48
    break_statement                shift and go to state 49
    continue_statement             shift and go to state 50
    return_statement               shift and go to state 51
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 305

    (94) for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .

    CONST           reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    LBRACE          reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    SEMI            reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    IF              reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    SWITCH          reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    WHILE           reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    DO              reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    FOR             reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    FOREACH         reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    BREAK           reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    CONTINUE        reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    RETURN          reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    OBJECT          reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    STRING          reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    BOOL            reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    VOID            reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    NEW             reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    ID              reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    INT             reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    LONG            reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    CHAR            reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    FLOAT           reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    DOUBLE          reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    DECIMAL         reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    TRUE            reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    FALSE           reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    NULL            reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    INTNUM          reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    THIS            reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    LPAREN          reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    TYPEOF          reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    SIZEOF          reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    DEFAULT         reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    RBRACE          reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    CASE            reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    ELSE            reduce using rule 94 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)


state 306

    (101) statement_exp_list -> statement_exp COMMA statement_exp_list .

    RPAREN          reduce using rule 101 (statement_exp_list -> statement_exp COMMA statement_exp_list .)


state 307

    (92) for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN . embedded_statement
    (40) embedded_statement -> . block
    (41) embedded_statement -> . empty_statement
    (42) embedded_statement -> . exp_statement
    (43) embedded_statement -> . selection_statement
    (44) embedded_statement -> . iteration_statement
    (45) embedded_statement -> . jump_statement
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE
    (48) empty_statement -> . SEMI
    (49) exp_statement -> . statement_exp SEMI
    (70) selection_statement -> . if_statement
    (71) selection_statement -> . switch_statement
    (82) iteration_statement -> . while_statement
    (83) iteration_statement -> . do_statement
    (84) iteration_statement -> . for_statement
    (85) iteration_statement -> . foreach_statement
    (103) jump_statement -> . break_statement
    (104) jump_statement -> . continue_statement
    (105) jump_statement -> . return_statement
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (72) if_statement -> . IF LPAREN exp RPAREN embedded_statement
    (73) if_statement -> . IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
    (74) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (86) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (87) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (88) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (102) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (106) break_statement -> . BREAK SEMI
    (107) continue_statement -> . CONTINUE SEMI
    (108) return_statement -> . RETURN SEMI
    (109) return_statement -> . RETURN exp SEMI
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    LBRACE          shift and go to state 23
    SEMI            shift and go to state 32
    IF              shift and go to state 59
    SWITCH          shift and go to state 61
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    embedded_statement             shift and go to state 317
    block                          shift and go to state 34
    empty_statement                shift and go to state 35
    exp_statement                  shift and go to state 36
    selection_statement            shift and go to state 37
    iteration_statement            shift and go to state 38
    jump_statement                 shift and go to state 39
    statement_exp                  shift and go to state 42
    if_statement                   shift and go to state 43
    switch_statement               shift and go to state 44
    while_statement                shift and go to state 45
    do_statement                   shift and go to state 46
    for_statement                  shift and go to state 47
    foreach_statement              shift and go to state 48
    break_statement                shift and go to state 49
    continue_statement             shift and go to state 50
    return_statement               shift and go to state 51
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 308

    (93) for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .

    CONST           reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    LBRACE          reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    SEMI            reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    IF              reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    SWITCH          reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    WHILE           reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    DO              reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    FOR             reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    FOREACH         reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    BREAK           reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    CONTINUE        reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    RETURN          reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    OBJECT          reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    STRING          reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    BOOL            reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    VOID            reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    NEW             reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    ID              reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    INT             reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    LONG            reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    CHAR            reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    FLOAT           reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    DOUBLE          reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    DECIMAL         reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    TRUE            reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    FALSE           reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    NULL            reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    INTNUM          reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    THIS            reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    LPAREN          reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    TYPEOF          reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    SIZEOF          reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    DEFAULT         reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    RBRACE          reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    CASE            reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    ELSE            reduce using rule 93 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)


state 309

    (102) foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN . embedded_statement
    (40) embedded_statement -> . block
    (41) embedded_statement -> . empty_statement
    (42) embedded_statement -> . exp_statement
    (43) embedded_statement -> . selection_statement
    (44) embedded_statement -> . iteration_statement
    (45) embedded_statement -> . jump_statement
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE
    (48) empty_statement -> . SEMI
    (49) exp_statement -> . statement_exp SEMI
    (70) selection_statement -> . if_statement
    (71) selection_statement -> . switch_statement
    (82) iteration_statement -> . while_statement
    (83) iteration_statement -> . do_statement
    (84) iteration_statement -> . for_statement
    (85) iteration_statement -> . foreach_statement
    (103) jump_statement -> . break_statement
    (104) jump_statement -> . continue_statement
    (105) jump_statement -> . return_statement
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (72) if_statement -> . IF LPAREN exp RPAREN embedded_statement
    (73) if_statement -> . IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
    (74) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (86) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (87) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (88) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (102) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (106) break_statement -> . BREAK SEMI
    (107) continue_statement -> . CONTINUE SEMI
    (108) return_statement -> . RETURN SEMI
    (109) return_statement -> . RETURN exp SEMI
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    LBRACE          shift and go to state 23
    SEMI            shift and go to state 32
    IF              shift and go to state 59
    SWITCH          shift and go to state 61
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    embedded_statement             shift and go to state 318
    block                          shift and go to state 34
    empty_statement                shift and go to state 35
    exp_statement                  shift and go to state 36
    selection_statement            shift and go to state 37
    iteration_statement            shift and go to state 38
    jump_statement                 shift and go to state 39
    statement_exp                  shift and go to state 42
    if_statement                   shift and go to state 43
    switch_statement               shift and go to state 44
    while_statement                shift and go to state 45
    do_statement                   shift and go to state 46
    for_statement                  shift and go to state 47
    foreach_statement              shift and go to state 48
    break_statement                shift and go to state 49
    continue_statement             shift and go to state 50
    return_statement               shift and go to state 51
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 310

    (62) object_initializer -> LBRACE member_initializer_list RBRACE .

    SEMI            reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LSB             reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LPAREN          reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    PLUSPLUS        reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    MINUSMINUS      reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    EQUAL           reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    STAR            reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    SLASH           reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    PERCENT         reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    PLUS            reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    MINUS           reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LSHIFT          reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    RSHIFT          reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LT              reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    GT              reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LEQ             reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    GEQ             reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    IS              reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    EQEQUAL         reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    NOTEQUAL        reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    AMPER           reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    CIRCUMFLEX      reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    PIPE            reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    AMPERAMPER      reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    HOOK            reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    PIPEPIPE        reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    RPAREN          reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    COMMA           reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    RSB             reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    COLON           reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    RBRACE          reduce using rule 62 (object_initializer -> LBRACE member_initializer_list RBRACE .)


state 311

    (64) member_initializer_list -> member_initializer COMMA . member_initializer_list
    (63) member_initializer_list -> . member_initializer
    (64) member_initializer_list -> . member_initializer COMMA member_initializer_list
    (65) member_initializer -> . ID EQUAL exp

    ID              shift and go to state 289

    member_initializer             shift and go to state 288
    member_initializer_list        shift and go to state 319

state 312

    (65) member_initializer -> ID EQUAL . exp
    (149) exp -> . non_assignment_exp
    (150) exp -> . assignment
    (151) non_assignment_exp -> . conditional_exp
    (183) assignment -> . unary_exp EQUAL exp
    (152) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (153) conditional_exp -> . conditional_or_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (154) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (155) conditional_or_exp -> . conditional_and_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (156) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (157) conditional_and_exp -> . inclusive_or_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (158) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (159) inclusive_or_exp -> . exclusive_or_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN
    (160) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (161) exclusive_or_exp -> . and_exp
    (162) and_exp -> . and_exp AMPER equality_exp
    (163) and_exp -> . equality_exp
    (164) equality_exp -> . equality_exp EQEQUAL relational_exp
    (165) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (166) equality_exp -> . relational_exp
    (167) relational_exp -> . relational_exp LT shift_exp
    (168) relational_exp -> . relational_exp GT shift_exp
    (169) relational_exp -> . relational_exp LEQ shift_exp
    (170) relational_exp -> . relational_exp GEQ shift_exp
    (171) relational_exp -> . relational_exp IS type
    (172) relational_exp -> . shift_exp
    (173) shift_exp -> . shift_exp LSHIFT additive_exp
    (174) shift_exp -> . shift_exp RSHIFT additive_exp
    (175) shift_exp -> . additive_exp
    (176) additive_exp -> . additive_exp PLUS multiplicative_exp
    (177) additive_exp -> . additive_exp MINUS multiplicative_exp
    (178) additive_exp -> . multiplicative_exp
    (179) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (180) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (181) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (182) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    LPAREN          shift and go to state 60
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    NEW             shift and go to state 71
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    exp                            shift and go to state 320
    non_assignment_exp             shift and go to state 112
    assignment                     shift and go to state 113
    conditional_exp                shift and go to state 114
    unary_exp                      shift and go to state 110
    conditional_or_exp             shift and go to state 115
    primary_exp                    shift and go to state 116
    pre_increment_exp              shift and go to state 117
    pre_decrement_exp              shift and go to state 118
    cast_exp                       shift and go to state 76
    conditional_and_exp            shift and go to state 119
    primary_no_array_creation_exp  shift and go to state 75
    inclusive_or_exp               shift and go to state 120
    parenthesized_exp              shift and go to state 88
    invocation_exp                 shift and go to state 121
    element_access                 shift and go to state 89
    post_increment_exp             shift and go to state 122
    post_decrement_exp             shift and go to state 123
    object_creation_exp            shift and go to state 124
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93
    exclusive_or_exp               shift and go to state 125
    and_exp                        shift and go to state 126
    equality_exp                   shift and go to state 127
    relational_exp                 shift and go to state 128
    shift_exp                      shift and go to state 129
    additive_exp                   shift and go to state 130
    multiplicative_exp             shift and go to state 131

state 313

    (79) switch_label -> CASE pattern COLON .

    CASE            reduce using rule 79 (switch_label -> CASE pattern COLON .)
    DEFAULT         reduce using rule 79 (switch_label -> CASE pattern COLON .)
    CONST           reduce using rule 79 (switch_label -> CASE pattern COLON .)
    LBRACE          reduce using rule 79 (switch_label -> CASE pattern COLON .)
    SEMI            reduce using rule 79 (switch_label -> CASE pattern COLON .)
    IF              reduce using rule 79 (switch_label -> CASE pattern COLON .)
    SWITCH          reduce using rule 79 (switch_label -> CASE pattern COLON .)
    WHILE           reduce using rule 79 (switch_label -> CASE pattern COLON .)
    DO              reduce using rule 79 (switch_label -> CASE pattern COLON .)
    FOR             reduce using rule 79 (switch_label -> CASE pattern COLON .)
    FOREACH         reduce using rule 79 (switch_label -> CASE pattern COLON .)
    BREAK           reduce using rule 79 (switch_label -> CASE pattern COLON .)
    CONTINUE        reduce using rule 79 (switch_label -> CASE pattern COLON .)
    RETURN          reduce using rule 79 (switch_label -> CASE pattern COLON .)
    OBJECT          reduce using rule 79 (switch_label -> CASE pattern COLON .)
    STRING          reduce using rule 79 (switch_label -> CASE pattern COLON .)
    BOOL            reduce using rule 79 (switch_label -> CASE pattern COLON .)
    VOID            reduce using rule 79 (switch_label -> CASE pattern COLON .)
    NEW             reduce using rule 79 (switch_label -> CASE pattern COLON .)
    PLUSPLUS        reduce using rule 79 (switch_label -> CASE pattern COLON .)
    MINUSMINUS      reduce using rule 79 (switch_label -> CASE pattern COLON .)
    ID              reduce using rule 79 (switch_label -> CASE pattern COLON .)
    INT             reduce using rule 79 (switch_label -> CASE pattern COLON .)
    LONG            reduce using rule 79 (switch_label -> CASE pattern COLON .)
    CHAR            reduce using rule 79 (switch_label -> CASE pattern COLON .)
    FLOAT           reduce using rule 79 (switch_label -> CASE pattern COLON .)
    DOUBLE          reduce using rule 79 (switch_label -> CASE pattern COLON .)
    DECIMAL         reduce using rule 79 (switch_label -> CASE pattern COLON .)
    TRUE            reduce using rule 79 (switch_label -> CASE pattern COLON .)
    FALSE           reduce using rule 79 (switch_label -> CASE pattern COLON .)
    NULL            reduce using rule 79 (switch_label -> CASE pattern COLON .)
    INTNUM          reduce using rule 79 (switch_label -> CASE pattern COLON .)
    HEXADECIMALNUM  reduce using rule 79 (switch_label -> CASE pattern COLON .)
    BINARYNUM       reduce using rule 79 (switch_label -> CASE pattern COLON .)
    FLOATNUM        reduce using rule 79 (switch_label -> CASE pattern COLON .)
    DOUBLENUM       reduce using rule 79 (switch_label -> CASE pattern COLON .)
    DECIMALNUM      reduce using rule 79 (switch_label -> CASE pattern COLON .)
    CHARLITERAL     reduce using rule 79 (switch_label -> CASE pattern COLON .)
    STRINGLITERAL   reduce using rule 79 (switch_label -> CASE pattern COLON .)
    THIS            reduce using rule 79 (switch_label -> CASE pattern COLON .)
    LPAREN          reduce using rule 79 (switch_label -> CASE pattern COLON .)
    TYPEOF          reduce using rule 79 (switch_label -> CASE pattern COLON .)
    SIZEOF          reduce using rule 79 (switch_label -> CASE pattern COLON .)


state 314

    (90) for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .

    CONST           reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    LBRACE          reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    SEMI            reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    IF              reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    SWITCH          reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    WHILE           reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    DO              reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    FOR             reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    FOREACH         reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    BREAK           reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    CONTINUE        reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    RETURN          reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    OBJECT          reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    STRING          reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    BOOL            reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    VOID            reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    NEW             reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    ID              reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    INT             reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    LONG            reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    CHAR            reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    FLOAT           reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    DOUBLE          reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    DECIMAL         reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    TRUE            reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    FALSE           reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    NULL            reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    INTNUM          reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    THIS            reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    LPAREN          reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    TYPEOF          reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    SIZEOF          reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    DEFAULT         reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    RBRACE          reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    CASE            reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    ELSE            reduce using rule 90 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)


state 315

    (88) for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN . embedded_statement
    (40) embedded_statement -> . block
    (41) embedded_statement -> . empty_statement
    (42) embedded_statement -> . exp_statement
    (43) embedded_statement -> . selection_statement
    (44) embedded_statement -> . iteration_statement
    (45) embedded_statement -> . jump_statement
    (46) block -> . LBRACE statement_list RBRACE
    (47) block -> . LBRACE RBRACE
    (48) empty_statement -> . SEMI
    (49) exp_statement -> . statement_exp SEMI
    (70) selection_statement -> . if_statement
    (71) selection_statement -> . switch_statement
    (82) iteration_statement -> . while_statement
    (83) iteration_statement -> . do_statement
    (84) iteration_statement -> . for_statement
    (85) iteration_statement -> . foreach_statement
    (103) jump_statement -> . break_statement
    (104) jump_statement -> . continue_statement
    (105) jump_statement -> . return_statement
    (50) statement_exp -> . invocation_exp
    (51) statement_exp -> . object_creation_exp
    (52) statement_exp -> . assignment
    (53) statement_exp -> . post_increment_exp
    (54) statement_exp -> . post_decrement_exp
    (55) statement_exp -> . pre_increment_exp
    (56) statement_exp -> . pre_decrement_exp
    (72) if_statement -> . IF LPAREN exp RPAREN embedded_statement
    (73) if_statement -> . IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
    (74) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (86) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (87) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (88) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (93) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (94) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (95) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (102) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (106) break_statement -> . BREAK SEMI
    (107) continue_statement -> . CONTINUE SEMI
    (108) return_statement -> . RETURN SEMI
    (109) return_statement -> . RETURN exp SEMI
    (128) invocation_exp -> . primary_exp LPAREN RPAREN
    (129) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN RPAREN
    (58) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (59) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (60) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (183) assignment -> . unary_exp EQUAL exp
    (66) post_increment_exp -> . primary_exp PLUSPLUS
    (67) post_decrement_exp -> . primary_exp MINUSMINUS
    (68) pre_increment_exp -> . PLUSPLUS unary_exp
    (69) pre_decrement_exp -> . MINUSMINUS unary_exp
    (112) primary_exp -> . primary_no_array_creation_exp
    (144) unary_exp -> . primary_exp
    (145) unary_exp -> . pre_increment_exp
    (146) unary_exp -> . pre_decrement_exp
    (147) unary_exp -> . cast_exp
    (113) primary_no_array_creation_exp -> . TRUE
    (114) primary_no_array_creation_exp -> . FALSE
    (115) primary_no_array_creation_exp -> . NULL
    (116) primary_no_array_creation_exp -> . INTNUM
    (117) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (118) primary_no_array_creation_exp -> . BINARYNUM
    (119) primary_no_array_creation_exp -> . FLOATNUM
    (120) primary_no_array_creation_exp -> . DOUBLENUM
    (121) primary_no_array_creation_exp -> . DECIMALNUM
    (122) primary_no_array_creation_exp -> . CHARLITERAL
    (123) primary_no_array_creation_exp -> . STRINGLITERAL
    (124) primary_no_array_creation_exp -> . ID
    (125) primary_no_array_creation_exp -> . parenthesized_exp
    (127) primary_no_array_creation_exp -> . invocation_exp
    (130) primary_no_array_creation_exp -> . element_access
    (132) primary_no_array_creation_exp -> . THIS
    (133) primary_no_array_creation_exp -> . post_increment_exp
    (134) primary_no_array_creation_exp -> . post_decrement_exp
    (135) primary_no_array_creation_exp -> . object_creation_exp
    (136) primary_no_array_creation_exp -> . typeof_exp
    (138) primary_no_array_creation_exp -> . sizeof_exp
    (140) primary_no_array_creation_exp -> . default_exp
    (148) cast_exp -> . LPAREN type RPAREN unary_exp
    (126) parenthesized_exp -> . LPAREN exp RPAREN
    (131) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (137) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (139) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (141) default_exp -> . DEFAULT LPAREN type RPAREN

    LBRACE          shift and go to state 23
    SEMI            shift and go to state 32
    IF              shift and go to state 59
    SWITCH          shift and go to state 61
    WHILE           shift and go to state 62
    DO              shift and go to state 63
    FOR             shift and go to state 64
    FOREACH         shift and go to state 65
    BREAK           shift and go to state 67
    CONTINUE        shift and go to state 68
    RETURN          shift and go to state 69
    NEW             shift and go to state 71
    PLUSPLUS        shift and go to state 73
    MINUSMINUS      shift and go to state 74
    TRUE            shift and go to state 77
    FALSE           shift and go to state 78
    NULL            shift and go to state 79
    INTNUM          shift and go to state 80
    HEXADECIMALNUM  shift and go to state 81
    BINARYNUM       shift and go to state 82
    FLOATNUM        shift and go to state 83
    DOUBLENUM       shift and go to state 84
    DECIMALNUM      shift and go to state 85
    CHARLITERAL     shift and go to state 86
    STRINGLITERAL   shift and go to state 87
    ID              shift and go to state 135
    THIS            shift and go to state 90
    LPAREN          shift and go to state 60
    TYPEOF          shift and go to state 94
    SIZEOF          shift and go to state 95
    DEFAULT         shift and go to state 96

    embedded_statement             shift and go to state 321
    block                          shift and go to state 34
    empty_statement                shift and go to state 35
    exp_statement                  shift and go to state 36
    selection_statement            shift and go to state 37
    iteration_statement            shift and go to state 38
    jump_statement                 shift and go to state 39
    statement_exp                  shift and go to state 42
    if_statement                   shift and go to state 43
    switch_statement               shift and go to state 44
    while_statement                shift and go to state 45
    do_statement                   shift and go to state 46
    for_statement                  shift and go to state 47
    foreach_statement              shift and go to state 48
    break_statement                shift and go to state 49
    continue_statement             shift and go to state 50
    return_statement               shift and go to state 51
    invocation_exp                 shift and go to state 52
    object_creation_exp            shift and go to state 53
    assignment                     shift and go to state 54
    post_increment_exp             shift and go to state 55
    post_decrement_exp             shift and go to state 56
    pre_increment_exp              shift and go to state 57
    pre_decrement_exp              shift and go to state 58
    primary_exp                    shift and go to state 70
    unary_exp                      shift and go to state 72
    primary_no_array_creation_exp  shift and go to state 75
    cast_exp                       shift and go to state 76
    parenthesized_exp              shift and go to state 88
    element_access                 shift and go to state 89
    typeof_exp                     shift and go to state 91
    sizeof_exp                     shift and go to state 92
    default_exp                    shift and go to state 93

state 316

    (89) for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .

    CONST           reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    LBRACE          reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    SEMI            reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    IF              reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    SWITCH          reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    WHILE           reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    DO              reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    FOR             reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    FOREACH         reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    BREAK           reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    CONTINUE        reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    RETURN          reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    OBJECT          reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    STRING          reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    BOOL            reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    VOID            reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    NEW             reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    ID              reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    INT             reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    LONG            reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    CHAR            reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    FLOAT           reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    DOUBLE          reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    DECIMAL         reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    TRUE            reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    FALSE           reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    NULL            reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    INTNUM          reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    THIS            reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    LPAREN          reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    TYPEOF          reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    SIZEOF          reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    DEFAULT         reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    RBRACE          reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    CASE            reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    ELSE            reduce using rule 89 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)


state 317

    (92) for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .

    CONST           reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    LBRACE          reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    SEMI            reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    IF              reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    SWITCH          reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    WHILE           reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DO              reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FOR             reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FOREACH         reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    BREAK           reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    CONTINUE        reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    RETURN          reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    OBJECT          reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    STRING          reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    BOOL            reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    VOID            reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    NEW             reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    ID              reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    INT             reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    LONG            reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    CHAR            reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FLOAT           reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DOUBLE          reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DECIMAL         reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    TRUE            reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FALSE           reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    NULL            reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    INTNUM          reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    THIS            reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    LPAREN          reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    TYPEOF          reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    SIZEOF          reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DEFAULT         reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    RBRACE          reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    CASE            reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    ELSE            reduce using rule 92 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)


state 318

    (102) foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .

    CONST           reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    LBRACE          reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    SEMI            reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    IF              reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    SWITCH          reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    WHILE           reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    DO              reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    FOR             reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    FOREACH         reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    BREAK           reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    CONTINUE        reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    RETURN          reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    OBJECT          reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    STRING          reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    BOOL            reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    VOID            reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    NEW             reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    ID              reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    INT             reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    LONG            reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    CHAR            reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    FLOAT           reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    DOUBLE          reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    DECIMAL         reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    TRUE            reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    FALSE           reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    NULL            reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    INTNUM          reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    THIS            reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    LPAREN          reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    TYPEOF          reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    SIZEOF          reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    DEFAULT         reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    RBRACE          reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    CASE            reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    ELSE            reduce using rule 102 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)


state 319

    (64) member_initializer_list -> member_initializer COMMA member_initializer_list .

    RBRACE          reduce using rule 64 (member_initializer_list -> member_initializer COMMA member_initializer_list .)


state 320

    (65) member_initializer -> ID EQUAL exp .

    COMMA           reduce using rule 65 (member_initializer -> ID EQUAL exp .)
    RBRACE          reduce using rule 65 (member_initializer -> ID EQUAL exp .)


state 321

    (88) for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .

    CONST           reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    LBRACE          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    SEMI            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    IF              reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    SWITCH          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    WHILE           reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DO              reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FOR             reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FOREACH         reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    BREAK           reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    CONTINUE        reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    RETURN          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    OBJECT          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    STRING          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    BOOL            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    VOID            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    NEW             reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    ID              reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    INT             reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    LONG            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    CHAR            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FLOAT           reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DOUBLE          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DECIMAL         reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    TRUE            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FALSE           reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    NULL            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    INTNUM          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    THIS            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    LPAREN          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    TYPEOF          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    SIZEOF          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DEFAULT         reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    RBRACE          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    CASE            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    ELSE            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DEFAULT in state 28 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 105 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 250 resolved as shift
WARNING: reduce/reduce conflict in state 66 resolved using rule (type_name -> ID)
WARNING: rejected rule (primary_no_array_creation_exp -> ID) in state 66
