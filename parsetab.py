
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPER AMPERAMPER AMPEREQUAL BANG BINARYNUM BOOL BREAK CASE CHAR CHARLITERAL CIRCUMEQUAL CIRCUMFLEX CLASS COLON COMMA CONST CONTINUE DECIMAL DECIMALNUM DEFAULT DO DOT DOUBLE DOUBLENUM ELSE EQEQUAL EQUAL FALSE FLOAT FLOATNUM FOR FOREACH GEQ GT HEXADECIMALNUM HOOK HOOKHOOK HOOKHOOKEQUAL ID IF IN INT INTNUM IS LBRACE LEQ LONG LPAREN LSB LSHIFT LSHIFTEQUAL LT MINUS MINUSEQUAL MINUSMINUS NEW NOTEQUAL NULL OBJECT PERCENT PERCENTEQUAL PIPE PIPEEQUAL PIPEPIPE PLUS PLUSEQUAL PLUSPLUS PRIVATE PROTECTED PUBLIC RBRACE RETURN RPAREN RSB RSHIFT RSHIFTEQUAL SEMI SLASH SLASHEQUAL STAR STAREQUAL STATIC STRING STRINGLITERAL SWITCH THIS TILDE TRUE VOID WHILEprogram : class_declaration\n               | class_declaration programtype : class_type\n            | value_typeclass_type : OBJECT\n                  | STRINGvalue_type : integral_type\n                  | floating_point_type\n                  | BOOL\n                  | VOIDintegral_type : INTintegral_type : LONGintegral_type : CHARfloating_point_type : FLOATfloating_point_type : DOUBLEfloating_point_type : DECIMALparam_list : type ID\n                  | type ID COMMA param_liststatement_list : statement\n                      | statement statement_liststatement : declaration_statement\n                 | embedded_statementdeclaration_statement : local_const_declaration SEMI\n                             | local_var_declaration SEMIlocal_const_declaration : CONST type const_declaratorsconst_declarators : const_declarator\n                         | const_declarator COMMA const_declaratorsconst_declarator : ID EQUAL explocal_var_declaration : type var_declaratorsvar_declarators : var_declarator\n                       | var_declarator COMMA var_declaratorsvar_declarator : ID\n                      | ID EQUAL expembedded_statement : block\n                          | empty_statement\n                          | exp_statement\n                          | selection_statement\n                          | iteration_statement\n                          | jump_statementblock : LBRACE statement_list RBRACE\n             | LBRACE RBRACEempty_statement : SEMIexp_statement : statement_exp SEMIstatement_exp : invocation_exp\n                     | object_creation_exp\n                     | assignment\n                     | post_increment_exp\n                     | post_decrement_exp\n                     | pre_increment_exp\n                     | pre_decrement_expobject_creation_exp : NEW type LPAREN RPAREN\n                           | NEW type LPAREN RPAREN object_initializer\n                           | NEW type LPAREN arg_list RPAREN\n                           | NEW type LPAREN arg_list RPAREN object_initializerobject_initializer : LBRACE RBRACE\n                          | LBRACE member_initializer_list RBRACEmember_initializer_list : member_initializer\n                               | member_initializer COMMA member_initializer_listmember_initializer : ID EQUAL exppost_increment_exp : primary_exp PLUSPLUSpost_decrement_exp : primary_exp MINUSMINUSpre_increment_exp : PLUSPLUS unary_exppre_decrement_exp : MINUSMINUS unary_expselection_statement : if_statement\n                           | switch_statementif_statement : IF LPAREN exp RPAREN block\n                    | IF LPAREN exp RPAREN block ELSE blockswitch_statement : SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACEswitch_body : switch_section\n                   | switch_section switch_bodyswitch_section : switch_label statement_listswitch_section : switch_label switch_sectionswitch_label : CASE pattern COLON\n                    | DEFAULT COLONpattern : relational_pattern\n               | constant_patternrelational_pattern : relational_operator constant_exprelational_operator : LT\n                           | GT\n                           | LEQ\n                           | GEQconstant_exp : INTNUM\n                    | FLOATNUM\n                    | CHARLITERALconstant_pattern : INTNUM\n                        | FLOATNUM\n                        | CHARLITERAL\n                        | STRINGLITERAL\n                        | TRUE\n                        | FALSE\n                        | NULLiteration_statement : while_statement\n                           | do_statement\n                           | for_statement\n                           | foreach_statementwhile_statement : WHILE LPAREN exp RPAREN blockdo_statement : DO block WHILE LPAREN exp RPAREN SEMIfor_statement : FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN blockfor_statement : FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN blockfor_statement : FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN blockfor_statement : FOR LPAREN for_initializer SEMI SEMI RPAREN blockfor_statement : FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN blockfor_statement : FOR LPAREN SEMI for_condition SEMI RPAREN blockfor_statement : FOR LPAREN SEMI SEMI for_iterator RPAREN blockfor_statement : FOR LPAREN SEMI SEMI RPAREN blockfor_initializer : local_var_declarationfor_condition : expfor_iterator : statement_exp_liststatement_exp_list : statement_exp\n                          | statement_exp COMMA statement_exp_listforeach_statement : FOREACH LPAREN type ID IN exp RPAREN blockjump_statement : break_statement\n                      | continue_statement\n                      | return_statementbreak_statement : BREAK SEMIcontinue_statement : CONTINUE SEMIreturn_statement : RETURN SEMI\n                        | RETURN exp SEMIarg_list : exp\n                | exp COMMA arg_listprimary_exp : primary_no_array_creation_expprimary_no_array_creation_exp : TRUE\n                                     | FALSEprimary_no_array_creation_exp : NULLprimary_no_array_creation_exp : INTNUMprimary_no_array_creation_exp : HEXADECIMALNUMprimary_no_array_creation_exp : BINARYNUMprimary_no_array_creation_exp : FLOATNUMprimary_no_array_creation_exp : DOUBLENUMprimary_no_array_creation_exp : DECIMALNUMprimary_no_array_creation_exp : CHARLITERALprimary_no_array_creation_exp : STRINGLITERALprimary_no_array_creation_exp : IDprimary_no_array_creation_exp : parenthesized_expparenthesized_exp : LPAREN exp RPARENprimary_no_array_creation_exp : member_accessmember_access : primary_exp DOT IDprimary_no_array_creation_exp : invocation_expinvocation_exp : primary_exp LPAREN RPAREN\n                      | primary_exp LPAREN arg_list RPARENprimary_no_array_creation_exp : element_accesselement_access : primary_no_array_creation_exp LSB exp RSBprimary_no_array_creation_exp : THISprimary_no_array_creation_exp : post_increment_expprimary_no_array_creation_exp : post_decrement_expprimary_no_array_creation_exp : object_creation_expunary_exp : primary_expunary_exp : pre_increment_expunary_exp : pre_decrement_expunary_exp : cast_expcast_exp : LPAREN type RPAREN unary_expunary_exp : minus_expminus_exp : MINUS unary_expunary_exp : plus_expplus_exp : PLUS unary_expexp : non_assignment_expexp : assignmentnon_assignment_exp : conditional_expconditional_exp : conditional_or_exp HOOK exp COLON exp\n                       | conditional_or_expconditional_or_exp : conditional_or_exp PIPEPIPE conditional_and_exp\n                          | conditional_and_expconditional_and_exp : conditional_and_exp AMPERAMPER inclusive_or_exp\n                           | inclusive_or_expinclusive_or_exp : inclusive_or_exp PIPE exclusive_or_exp\n                        | exclusive_or_expexclusive_or_exp : exclusive_or_exp CIRCUMFLEX and_exp\n                        | and_expand_exp : and_exp AMPER equality_exp\n               | equality_expequality_exp : equality_exp EQEQUAL relational_exp\n                    | equality_exp NOTEQUAL relational_exp\n                    | relational_exprelational_exp : relational_exp LT shift_exp\n                      | relational_exp GT shift_exp\n                      | relational_exp LEQ shift_exp\n                      | relational_exp GEQ shift_exp\n                      | relational_exp IS type\n                      | shift_expshift_exp : shift_exp LSHIFT additive_exp\n                 | shift_exp RSHIFT additive_exp\n                 | additive_expadditive_exp : additive_exp PLUS multiplicative_exp\n                    | additive_exp MINUS multiplicative_exp\n                    | multiplicative_expmultiplicative_exp : multiplicative_exp STAR unary_exp\n                          | multiplicative_exp SLASH unary_exp\n                          | multiplicative_exp PERCENT unary_exp\n                          | unary_expassignment : unary_exp EQUAL expclass_declaration : modifiers CLASS ID class_body\n                         | CLASS ID class_bodyclass_body : LBRACE class_member_decl RBRACE\n                  | LBRACE RBRACEclass_member_decl : constant_declaration\n                         | field_declaration\n                         | method_declaration\n                         | constructor_declarationconstant_declaration : modifiers CONST type const_declarators SEMI\n                            | CONST type const_declarators SEMIfield_declaration : modifiers_list type var_declarators SEMI\n                         | type var_declarators SEMImethod_declaration : modifiers_list type method_head block\n                          | type method_head blockmethod_head : ID LPAREN param_list RPAREN\n                   | ID LPAREN RPARENconstructor_declaration : modifiers constructor_head block\n                               | constructor_head blockconstructor_head : ID LPAREN param_list RPAREN\n                        | ID LPAREN RPARENmodifiers : NEW\n                 | PUBLIC\n                 | PROTECTED\n                 | PRIVATE\n                 | STATICmodifiers_list : modifiers\n                      | modifiers modifiers_list'
    
_lr_action_items = {'CLASS':([0,2,3,5,6,7,8,9,14,16,18,43,],[4,4,11,-211,-212,-213,-214,-215,-192,-191,-194,-193,]),'NEW':([0,2,5,6,7,8,9,14,15,16,18,23,43,44,55,66,70,71,72,73,75,77,78,79,80,81,82,86,87,88,89,90,91,92,93,94,103,112,116,117,137,138,145,174,176,177,180,181,184,185,189,190,191,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,232,238,241,246,275,276,277,282,287,288,290,292,298,299,308,314,316,317,326,327,346,347,349,352,355,359,360,365,367,368,369,372,],[5,5,-211,-212,-213,-214,-215,-192,5,-191,-194,5,-193,5,114,114,-41,114,-21,-22,-42,-34,-35,-36,-37,-38,-39,-64,-65,-92,-93,-94,-95,-112,-113,-114,114,114,114,114,114,114,114,-40,-23,-24,-43,114,114,114,-115,-116,-117,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,-118,114,114,114,114,114,114,-66,-96,114,114,114,114,114,-105,114,-67,-68,-74,-97,-101,-104,-103,114,-73,-100,-99,-102,-111,-98,]),'PUBLIC':([0,2,5,6,7,8,9,14,15,16,18,23,43,44,],[6,6,-211,-212,-213,-214,-215,-192,6,-191,-194,6,-193,6,]),'PROTECTED':([0,2,5,6,7,8,9,14,15,16,18,23,43,44,],[7,7,-211,-212,-213,-214,-215,-192,7,-191,-194,7,-193,7,]),'PRIVATE':([0,2,5,6,7,8,9,14,15,16,18,23,43,44,],[8,8,-211,-212,-213,-214,-215,-192,8,-191,-194,8,-193,8,]),'STATIC':([0,2,5,6,7,8,9,14,15,16,18,23,43,44,],[9,9,-211,-212,-213,-214,-215,-192,9,-191,-194,9,-193,9,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,10,]),'class_declaration':([0,2,],[2,2,]),'modifiers':([0,2,15,23,44,],[3,3,23,44,44,]),'class_body':([12,13,],[14,16,]),'class_member_decl':([15,],[17,]),'constant_declaration':([15,],[19,]),'field_declaration':([15,],[20,]),'method_declaration':([15,],[21,]),'constructor_declaration':([15,],[22,]),'type':([15,24,26,45,55,56,65,71,83,103,114,187,188,222,249,308,],[25,48,53,57,84,141,141,84,178,182,197,84,240,263,141,84,]),'modifiers_list':([15,23,44,],[26,47,47,]),'constructor_head':([15,23,],[27,46,]),'class_type':([15,24,26,45,55,56,65,71,83,103,114,187,188,222,249,308,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'value_type':([15,24,26,45,55,56,65,71,83,103,114,187,188,222,249,308,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'integral_type':([15,24,26,45,55,56,65,71,83,103,114,187,188,222,249,308,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'floating_point_type':([15,24,26,45,55,56,65,71,83,103,114,187,188,222,249,308,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'var_declarators':([25,53,64,84,],[49,67,146,179,]),'method_head':([25,53,],[50,68,]),'var_declarator':([25,53,64,84,],[51,51,51,51,]),'block':([27,46,50,55,68,71,106,271,274,295,305,308,313,315,319,348,351,354,356,366,],[54,58,63,77,173,77,186,288,290,316,326,77,349,352,355,365,367,368,369,372,]),'const_declarators':([48,57,144,178,],[59,142,207,230,]),'const_declarator':([48,57,144,178,],[60,60,60,60,]),'statement_list':([55,71,308,],[69,175,329,]),'statement':([55,71,308,],[71,71,71,]),'declaration_statement':([55,71,308,],[72,72,72,]),'embedded_statement':([55,71,308,],[73,73,73,]),'local_const_declaration':([55,71,308,],[74,74,74,]),'local_var_declaration':([55,71,187,308,],[76,76,239,76,]),'empty_statement':([55,71,308,],[78,78,78,]),'exp_statement':([55,71,308,],[79,79,79,]),'selection_statement':([55,71,308,],[80,80,80,]),'iteration_statement':([55,71,308,],[81,81,81,]),'jump_statement':([55,71,308,],[82,82,82,]),'statement_exp':([55,71,277,292,298,308,314,317,],[85,85,297,297,297,85,297,297,]),'if_statement':([55,71,308,],[86,86,86,]),'switch_statement':([55,71,308,],[87,87,87,]),'while_statement':([55,71,308,],[88,88,88,]),'do_statement':([55,71,308,],[89,89,89,]),'for_statement':([55,71,308,],[90,90,90,]),'foreach_statement':([55,71,308,],[91,91,91,]),'break_statement':([55,71,308,],[92,92,92,]),'continue_statement':([55,71,308,],[93,93,93,]),'return_statement':([55,71,308,],[94,94,94,]),'invocation_exp':([55,66,71,103,112,116,117,137,138,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,232,238,246,275,276,277,282,287,292,298,299,308,314,317,359,],[95,161,95,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,95,161,161,95,95,161,95,95,95,161,]),'object_creation_exp':([55,66,71,103,112,116,117,137,138,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,232,238,246,275,276,277,282,287,292,298,299,308,314,317,359,],[96,164,96,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,96,164,164,96,96,164,96,96,96,164,]),'assignment':([55,66,71,103,112,145,181,184,185,193,198,201,210,238,246,275,276,277,282,287,292,298,299,308,314,317,359,],[97,152,97,152,152,152,152,152,152,152,152,152,152,152,152,152,152,97,152,152,97,97,152,97,97,97,152,]),'post_increment_exp':([55,66,71,103,112,116,117,137,138,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,232,238,246,275,276,277,282,287,292,298,299,308,314,317,359,],[98,162,98,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,98,162,162,98,98,162,98,98,98,162,]),'post_decrement_exp':([55,66,71,103,112,116,117,137,138,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,232,238,246,275,276,277,282,287,292,298,299,308,314,317,359,],[99,163,99,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,99,163,163,99,99,163,99,99,99,163,]),'pre_increment_exp':([55,66,71,103,112,116,117,137,138,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,232,238,246,275,276,277,282,287,292,298,299,308,314,317,359,],[100,157,100,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,100,157,157,100,100,157,100,100,100,157,]),'pre_decrement_exp':([55,66,71,103,112,116,117,137,138,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,232,238,246,275,276,277,282,287,292,298,299,308,314,317,359,],[101,158,101,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,101,158,158,101,101,158,101,101,101,158,]),'primary_exp':([55,66,71,103,112,116,117,137,138,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,232,238,246,275,276,277,282,287,292,298,299,308,314,317,359,],[113,156,113,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,113,156,156,113,113,156,113,113,113,156,]),'unary_exp':([55,66,71,103,112,116,117,137,138,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,232,238,246,275,276,277,282,287,292,298,299,308,314,317,359,],[115,154,115,154,154,199,200,202,203,154,154,154,154,154,154,154,154,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,268,269,270,272,154,154,154,154,115,154,154,115,115,154,115,115,115,154,]),'primary_no_array_creation_exp':([55,66,71,103,112,116,117,137,138,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,232,238,246,275,276,277,282,287,292,298,299,308,314,317,359,],[118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,]),'cast_exp':([55,66,71,103,112,116,117,137,138,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,232,238,246,275,276,277,282,287,292,298,299,308,314,317,359,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'minus_exp':([55,66,71,103,112,116,117,137,138,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,232,238,246,275,276,277,282,287,292,298,299,308,314,317,359,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'plus_exp':([55,66,71,103,112,116,117,137,138,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,232,238,246,275,276,277,282,287,292,298,299,308,314,317,359,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,]),'parenthesized_exp':([55,66,71,103,112,116,117,137,138,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,232,238,246,275,276,277,282,287,292,298,299,308,314,317,359,],[133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,]),'member_access':([55,66,71,103,112,116,117,137,138,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,232,238,246,275,276,277,282,287,292,298,299,308,314,317,359,],[134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,]),'element_access':([55,66,71,103,112,116,117,137,138,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,227,228,229,232,238,246,275,276,277,282,287,292,298,299,308,314,317,359,],[135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,]),'param_list':([56,65,249,],[139,148,286,]),'exp':([66,103,112,145,181,184,185,193,198,201,210,238,246,275,276,282,287,299,359,],[150,183,192,208,231,234,235,244,247,248,250,279,244,291,279,244,304,320,371,]),'non_assignment_exp':([66,103,112,145,181,184,185,193,198,201,210,238,246,275,276,282,287,299,359,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'conditional_exp':([66,103,112,145,181,184,185,193,198,201,210,238,246,275,276,282,287,299,359,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'conditional_or_exp':([66,103,112,145,181,184,185,193,198,201,210,238,246,275,276,282,287,299,359,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'conditional_and_exp':([66,103,112,145,181,184,185,193,198,201,210,211,238,246,275,276,282,287,299,359,],[159,159,159,159,159,159,159,159,159,159,159,251,159,159,159,159,159,159,159,159,]),'inclusive_or_exp':([66,103,112,145,181,184,185,193,198,201,210,211,212,238,246,275,276,282,287,299,359,],[160,160,160,160,160,160,160,160,160,160,160,160,253,160,160,160,160,160,160,160,160,]),'exclusive_or_exp':([66,103,112,145,181,184,185,193,198,201,210,211,212,213,238,246,275,276,282,287,299,359,],[165,165,165,165,165,165,165,165,165,165,165,165,165,254,165,165,165,165,165,165,165,165,]),'and_exp':([66,103,112,145,181,184,185,193,198,201,210,211,212,213,214,238,246,275,276,282,287,299,359,],[166,166,166,166,166,166,166,166,166,166,166,166,166,166,255,166,166,166,166,166,166,166,166,]),'equality_exp':([66,103,112,145,181,184,185,193,198,201,210,211,212,213,214,215,238,246,275,276,282,287,299,359,],[167,167,167,167,167,167,167,167,167,167,167,167,167,167,167,256,167,167,167,167,167,167,167,167,]),'relational_exp':([66,103,112,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,238,246,275,276,282,287,299,359,],[168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,257,258,168,168,168,168,168,168,168,168,]),'shift_exp':([66,103,112,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,238,246,275,276,282,287,299,359,],[169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,259,260,261,262,169,169,169,169,169,169,169,169,]),'additive_exp':([66,103,112,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,238,246,275,276,282,287,299,359,],[170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,170,264,265,170,170,170,170,170,170,170,170,]),'multiplicative_exp':([66,103,112,145,181,184,185,193,198,201,210,211,212,213,214,215,216,217,218,219,220,221,223,224,225,226,238,246,275,276,282,287,299,359,],[171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,171,266,267,171,171,171,171,171,171,171,171,]),'for_initializer':([187,],[237,]),'arg_list':([193,246,282,],[243,284,300,]),'for_condition':([238,276,],[278,293,]),'for_iterator':([277,292,298,314,],[294,312,318,350,]),'statement_exp_list':([277,292,298,314,317,],[296,296,296,296,353,]),'object_initializer':([283,303,],[301,325,]),'switch_body':([289,307,],[306,328,]),'switch_section':([289,307,308,],[307,307,330,]),'switch_label':([289,307,308,],[308,308,308,]),'member_initializer_list':([302,358,],[322,370,]),'member_initializer':([302,358,],[323,323,]),'pattern':([309,],[331,]),'relational_pattern':([309,],[332,]),'constant_pattern':([309,],[333,]),'relational_operator':([309,],[334,]),'constant_exp':([334,],[361,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> class_declaration','program',1,'p_program','LanguageParser.py',9),
  ('program -> class_declaration program','program',2,'p_program','LanguageParser.py',10),
  ('type -> class_type','type',1,'p_type','LanguageParser.py',17),
  ('type -> value_type','type',1,'p_type','LanguageParser.py',18),
  ('class_type -> OBJECT','class_type',1,'p_class_type','LanguageParser.py',25),
  ('class_type -> STRING','class_type',1,'p_class_type','LanguageParser.py',26),
  ('value_type -> integral_type','value_type',1,'p_value_type','LanguageParser.py',33),
  ('value_type -> floating_point_type','value_type',1,'p_value_type','LanguageParser.py',34),
  ('value_type -> BOOL','value_type',1,'p_value_type','LanguageParser.py',35),
  ('value_type -> VOID','value_type',1,'p_value_type','LanguageParser.py',36),
  ('integral_type -> INT','integral_type',1,'p_integral_type_int','LanguageParser.py',47),
  ('integral_type -> LONG','integral_type',1,'p_integral_type_long','LanguageParser.py',51),
  ('integral_type -> CHAR','integral_type',1,'p_integral_type_char','LanguageParser.py',55),
  ('floating_point_type -> FLOAT','floating_point_type',1,'p_integral_type_float','LanguageParser.py',59),
  ('floating_point_type -> DOUBLE','floating_point_type',1,'p_integral_type_double','LanguageParser.py',63),
  ('floating_point_type -> DECIMAL','floating_point_type',1,'p_integral_type_decimal','LanguageParser.py',67),
  ('param_list -> type ID','param_list',2,'p_param_list','LanguageParser.py',83),
  ('param_list -> type ID COMMA param_list','param_list',4,'p_param_list','LanguageParser.py',84),
  ('statement_list -> statement','statement_list',1,'p_statement_list','LanguageParser.py',91),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','LanguageParser.py',92),
  ('statement -> declaration_statement','statement',1,'p_statement','LanguageParser.py',99),
  ('statement -> embedded_statement','statement',1,'p_statement','LanguageParser.py',100),
  ('declaration_statement -> local_const_declaration SEMI','declaration_statement',2,'p_declaration_stmt','LanguageParser.py',107),
  ('declaration_statement -> local_var_declaration SEMI','declaration_statement',2,'p_declaration_stmt','LanguageParser.py',108),
  ('local_const_declaration -> CONST type const_declarators','local_const_declaration',3,'p_local_const_declaration','LanguageParser.py',115),
  ('const_declarators -> const_declarator','const_declarators',1,'p_const_declarators','LanguageParser.py',119),
  ('const_declarators -> const_declarator COMMA const_declarators','const_declarators',3,'p_const_declarators','LanguageParser.py',120),
  ('const_declarator -> ID EQUAL exp','const_declarator',3,'p_const_declarator','LanguageParser.py',127),
  ('local_var_declaration -> type var_declarators','local_var_declaration',2,'p_local_var_declaration','LanguageParser.py',131),
  ('var_declarators -> var_declarator','var_declarators',1,'p_var_declarators','LanguageParser.py',135),
  ('var_declarators -> var_declarator COMMA var_declarators','var_declarators',3,'p_var_declarators','LanguageParser.py',136),
  ('var_declarator -> ID','var_declarator',1,'p_var_declarator','LanguageParser.py',143),
  ('var_declarator -> ID EQUAL exp','var_declarator',3,'p_var_declarator','LanguageParser.py',144),
  ('embedded_statement -> block','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',151),
  ('embedded_statement -> empty_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',152),
  ('embedded_statement -> exp_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',153),
  ('embedded_statement -> selection_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',154),
  ('embedded_statement -> iteration_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',155),
  ('embedded_statement -> jump_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',156),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','LanguageParser.py',171),
  ('block -> LBRACE RBRACE','block',2,'p_block','LanguageParser.py',172),
  ('empty_statement -> SEMI','empty_statement',1,'p_empty_stmt','LanguageParser.py',179),
  ('exp_statement -> statement_exp SEMI','exp_statement',2,'p_exp_statement','LanguageParser.py',183),
  ('statement_exp -> invocation_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',187),
  ('statement_exp -> object_creation_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',188),
  ('statement_exp -> assignment','statement_exp',1,'p_statement_exp','LanguageParser.py',189),
  ('statement_exp -> post_increment_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',190),
  ('statement_exp -> post_decrement_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',191),
  ('statement_exp -> pre_increment_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',192),
  ('statement_exp -> pre_decrement_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',193),
  ('object_creation_exp -> NEW type LPAREN RPAREN','object_creation_exp',4,'p_object_creation','LanguageParser.py',210),
  ('object_creation_exp -> NEW type LPAREN RPAREN object_initializer','object_creation_exp',5,'p_object_creation','LanguageParser.py',211),
  ('object_creation_exp -> NEW type LPAREN arg_list RPAREN','object_creation_exp',5,'p_object_creation','LanguageParser.py',212),
  ('object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer','object_creation_exp',6,'p_object_creation','LanguageParser.py',213),
  ('object_initializer -> LBRACE RBRACE','object_initializer',2,'p_object_initializer','LanguageParser.py',225),
  ('object_initializer -> LBRACE member_initializer_list RBRACE','object_initializer',3,'p_object_initializer','LanguageParser.py',226),
  ('member_initializer_list -> member_initializer','member_initializer_list',1,'p_member_initializer_list','LanguageParser.py',233),
  ('member_initializer_list -> member_initializer COMMA member_initializer_list','member_initializer_list',3,'p_member_initializer_list','LanguageParser.py',234),
  ('member_initializer -> ID EQUAL exp','member_initializer',3,'p_member_initializer','LanguageParser.py',241),
  ('post_increment_exp -> primary_exp PLUSPLUS','post_increment_exp',2,'p_post_increment_exp','LanguageParser.py',245),
  ('post_decrement_exp -> primary_exp MINUSMINUS','post_decrement_exp',2,'p_post_decrement_exp','LanguageParser.py',249),
  ('pre_increment_exp -> PLUSPLUS unary_exp','pre_increment_exp',2,'p_pre_increment_exp','LanguageParser.py',253),
  ('pre_decrement_exp -> MINUSMINUS unary_exp','pre_decrement_exp',2,'p_pre_decrement_exp','LanguageParser.py',257),
  ('selection_statement -> if_statement','selection_statement',1,'p_selection_statement','LanguageParser.py',261),
  ('selection_statement -> switch_statement','selection_statement',1,'p_selection_statement','LanguageParser.py',262),
  ('if_statement -> IF LPAREN exp RPAREN block','if_statement',5,'p_if_statement','LanguageParser.py',269),
  ('if_statement -> IF LPAREN exp RPAREN block ELSE block','if_statement',7,'p_if_statement','LanguageParser.py',270),
  ('switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE','switch_statement',7,'p_switch_statement','LanguageParser.py',277),
  ('switch_body -> switch_section','switch_body',1,'p_switch_body','LanguageParser.py',281),
  ('switch_body -> switch_section switch_body','switch_body',2,'p_switch_body','LanguageParser.py',282),
  ('switch_section -> switch_label statement_list','switch_section',2,'p_switch_section_simple','LanguageParser.py',289),
  ('switch_section -> switch_label switch_section','switch_section',2,'p_switch_section_compound','LanguageParser.py',293),
  ('switch_label -> CASE pattern COLON','switch_label',3,'p_switch_label','LanguageParser.py',297),
  ('switch_label -> DEFAULT COLON','switch_label',2,'p_switch_label','LanguageParser.py',298),
  ('pattern -> relational_pattern','pattern',1,'p_pattern','LanguageParser.py',305),
  ('pattern -> constant_pattern','pattern',1,'p_pattern','LanguageParser.py',306),
  ('relational_pattern -> relational_operator constant_exp','relational_pattern',2,'p_relational_pattern','LanguageParser.py',313),
  ('relational_operator -> LT','relational_operator',1,'p_relational_operator','LanguageParser.py',317),
  ('relational_operator -> GT','relational_operator',1,'p_relational_operator','LanguageParser.py',318),
  ('relational_operator -> LEQ','relational_operator',1,'p_relational_operator','LanguageParser.py',319),
  ('relational_operator -> GEQ','relational_operator',1,'p_relational_operator','LanguageParser.py',320),
  ('constant_exp -> INTNUM','constant_exp',1,'p_constant_exp','LanguageParser.py',324),
  ('constant_exp -> FLOATNUM','constant_exp',1,'p_constant_exp','LanguageParser.py',325),
  ('constant_exp -> CHARLITERAL','constant_exp',1,'p_constant_exp','LanguageParser.py',326),
  ('constant_pattern -> INTNUM','constant_pattern',1,'p_constant_pattern','LanguageParser.py',330),
  ('constant_pattern -> FLOATNUM','constant_pattern',1,'p_constant_pattern','LanguageParser.py',331),
  ('constant_pattern -> CHARLITERAL','constant_pattern',1,'p_constant_pattern','LanguageParser.py',332),
  ('constant_pattern -> STRINGLITERAL','constant_pattern',1,'p_constant_pattern','LanguageParser.py',333),
  ('constant_pattern -> TRUE','constant_pattern',1,'p_constant_pattern','LanguageParser.py',334),
  ('constant_pattern -> FALSE','constant_pattern',1,'p_constant_pattern','LanguageParser.py',335),
  ('constant_pattern -> NULL','constant_pattern',1,'p_constant_pattern','LanguageParser.py',336),
  ('iteration_statement -> while_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',340),
  ('iteration_statement -> do_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',341),
  ('iteration_statement -> for_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',342),
  ('iteration_statement -> foreach_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',343),
  ('while_statement -> WHILE LPAREN exp RPAREN block','while_statement',5,'p_while_statement','LanguageParser.py',354),
  ('do_statement -> DO block WHILE LPAREN exp RPAREN SEMI','do_statement',7,'p_do_statement','LanguageParser.py',358),
  ('for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN block','for_statement',9,'p_for_statement_full','LanguageParser.py',362),
  ('for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN block','for_statement',8,'p_for_statement_12','LanguageParser.py',366),
  ('for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN block','for_statement',8,'p_for_statement_13','LanguageParser.py',370),
  ('for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN block','for_statement',7,'p_for_statement_1','LanguageParser.py',374),
  ('for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN block','for_statement',8,'p_for_statement_23','LanguageParser.py',378),
  ('for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN block','for_statement',7,'p_for_statement_2','LanguageParser.py',382),
  ('for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN block','for_statement',7,'p_for_statement_3','LanguageParser.py',386),
  ('for_statement -> FOR LPAREN SEMI SEMI RPAREN block','for_statement',6,'p_for_statement_empty','LanguageParser.py',390),
  ('for_initializer -> local_var_declaration','for_initializer',1,'p_for_initializer','LanguageParser.py',394),
  ('for_condition -> exp','for_condition',1,'p_for_condition','LanguageParser.py',398),
  ('for_iterator -> statement_exp_list','for_iterator',1,'p_for_iterator','LanguageParser.py',402),
  ('statement_exp_list -> statement_exp','statement_exp_list',1,'p_statement_exp_list','LanguageParser.py',406),
  ('statement_exp_list -> statement_exp COMMA statement_exp_list','statement_exp_list',3,'p_statement_exp_list','LanguageParser.py',407),
  ('foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN block','foreach_statement',8,'p_foreach_statement','LanguageParser.py',414),
  ('jump_statement -> break_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',418),
  ('jump_statement -> continue_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',419),
  ('jump_statement -> return_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',420),
  ('break_statement -> BREAK SEMI','break_statement',2,'p_break_statement','LanguageParser.py',429),
  ('continue_statement -> CONTINUE SEMI','continue_statement',2,'p_continue_statement','LanguageParser.py',433),
  ('return_statement -> RETURN SEMI','return_statement',2,'p_return_statement','LanguageParser.py',437),
  ('return_statement -> RETURN exp SEMI','return_statement',3,'p_return_statement','LanguageParser.py',438),
  ('arg_list -> exp','arg_list',1,'p_arg_list','LanguageParser.py',445),
  ('arg_list -> exp COMMA arg_list','arg_list',3,'p_arg_list','LanguageParser.py',446),
  ('primary_exp -> primary_no_array_creation_exp','primary_exp',1,'p_primary_exp','LanguageParser.py',453),
  ('primary_no_array_creation_exp -> TRUE','primary_no_array_creation_exp',1,'p_boolean_exp','LanguageParser.py',457),
  ('primary_no_array_creation_exp -> FALSE','primary_no_array_creation_exp',1,'p_boolean_exp','LanguageParser.py',458),
  ('primary_no_array_creation_exp -> NULL','primary_no_array_creation_exp',1,'p_null_exp','LanguageParser.py',462),
  ('primary_no_array_creation_exp -> INTNUM','primary_no_array_creation_exp',1,'p_intnum_exp','LanguageParser.py',466),
  ('primary_no_array_creation_exp -> HEXADECIMALNUM','primary_no_array_creation_exp',1,'p_hexnum_exp','LanguageParser.py',470),
  ('primary_no_array_creation_exp -> BINARYNUM','primary_no_array_creation_exp',1,'p_binnum_exp','LanguageParser.py',474),
  ('primary_no_array_creation_exp -> FLOATNUM','primary_no_array_creation_exp',1,'p_floatnum_exp','LanguageParser.py',478),
  ('primary_no_array_creation_exp -> DOUBLENUM','primary_no_array_creation_exp',1,'p_doublenum_exp','LanguageParser.py',482),
  ('primary_no_array_creation_exp -> DECIMALNUM','primary_no_array_creation_exp',1,'p_decimalnum_exp','LanguageParser.py',486),
  ('primary_no_array_creation_exp -> CHARLITERAL','primary_no_array_creation_exp',1,'p_charliteral_exp','LanguageParser.py',490),
  ('primary_no_array_creation_exp -> STRINGLITERAL','primary_no_array_creation_exp',1,'p_stringliteral_exp','LanguageParser.py',494),
  ('primary_no_array_creation_exp -> ID','primary_no_array_creation_exp',1,'p_id_exp','LanguageParser.py',498),
  ('primary_no_array_creation_exp -> parenthesized_exp','primary_no_array_creation_exp',1,'p_primary_parenthesized_exp','LanguageParser.py',502),
  ('parenthesized_exp -> LPAREN exp RPAREN','parenthesized_exp',3,'p_parenthesized_exp','LanguageParser.py',506),
  ('primary_no_array_creation_exp -> member_access','primary_no_array_creation_exp',1,'p_primary_member_access_exp','LanguageParser.py',510),
  ('member_access -> primary_exp DOT ID','member_access',3,'p_member_access_exp','LanguageParser.py',514),
  ('primary_no_array_creation_exp -> invocation_exp','primary_no_array_creation_exp',1,'p_primary_invocation_exp','LanguageParser.py',518),
  ('invocation_exp -> primary_exp LPAREN RPAREN','invocation_exp',3,'p_invocation_exp','LanguageParser.py',522),
  ('invocation_exp -> primary_exp LPAREN arg_list RPAREN','invocation_exp',4,'p_invocation_exp','LanguageParser.py',523),
  ('primary_no_array_creation_exp -> element_access','primary_no_array_creation_exp',1,'p_primary_element_access_exp','LanguageParser.py',530),
  ('element_access -> primary_no_array_creation_exp LSB exp RSB','element_access',4,'p_element_access_exp','LanguageParser.py',534),
  ('primary_no_array_creation_exp -> THIS','primary_no_array_creation_exp',1,'p_this_exp','LanguageParser.py',538),
  ('primary_no_array_creation_exp -> post_increment_exp','primary_no_array_creation_exp',1,'p_primary_post_increment_exp','LanguageParser.py',543),
  ('primary_no_array_creation_exp -> post_decrement_exp','primary_no_array_creation_exp',1,'p_primary_post_decrement_exp','LanguageParser.py',548),
  ('primary_no_array_creation_exp -> object_creation_exp','primary_no_array_creation_exp',1,'p_primary_object_creation_exp','LanguageParser.py',553),
  ('unary_exp -> primary_exp','unary_exp',1,'p_unary_primary_exp','LanguageParser.py',565),
  ('unary_exp -> pre_increment_exp','unary_exp',1,'p_unary_pre_increment_exp','LanguageParser.py',569),
  ('unary_exp -> pre_decrement_exp','unary_exp',1,'p_unary_pre_decrement_exp','LanguageParser.py',573),
  ('unary_exp -> cast_exp','unary_exp',1,'p_unary_cast_exp','LanguageParser.py',577),
  ('cast_exp -> LPAREN type RPAREN unary_exp','cast_exp',4,'p_cast_exp','LanguageParser.py',581),
  ('unary_exp -> minus_exp','unary_exp',1,'p_unary_minus_exp','LanguageParser.py',585),
  ('minus_exp -> MINUS unary_exp','minus_exp',2,'p_minus_exp','LanguageParser.py',589),
  ('unary_exp -> plus_exp','unary_exp',1,'p_unary_plus_exp','LanguageParser.py',593),
  ('plus_exp -> PLUS unary_exp','plus_exp',2,'p_plus_exp','LanguageParser.py',597),
  ('exp -> non_assignment_exp','exp',1,'p_exp_non_assignment_exp','LanguageParser.py',601),
  ('exp -> assignment','exp',1,'p_exp_assignment_exp','LanguageParser.py',605),
  ('non_assignment_exp -> conditional_exp','non_assignment_exp',1,'p_non_assignment_conditional_exp','LanguageParser.py',609),
  ('conditional_exp -> conditional_or_exp HOOK exp COLON exp','conditional_exp',5,'p_conditional_exp','LanguageParser.py',613),
  ('conditional_exp -> conditional_or_exp','conditional_exp',1,'p_conditional_exp','LanguageParser.py',614),
  ('conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp','conditional_or_exp',3,'p_conditional_or_exp','LanguageParser.py',621),
  ('conditional_or_exp -> conditional_and_exp','conditional_or_exp',1,'p_conditional_or_exp','LanguageParser.py',622),
  ('conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp','conditional_and_exp',3,'p_conditional_and_exp','LanguageParser.py',629),
  ('conditional_and_exp -> inclusive_or_exp','conditional_and_exp',1,'p_conditional_and_exp','LanguageParser.py',630),
  ('inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp','inclusive_or_exp',3,'p_inclusive_or_exp','LanguageParser.py',637),
  ('inclusive_or_exp -> exclusive_or_exp','inclusive_or_exp',1,'p_inclusive_or_exp','LanguageParser.py',638),
  ('exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp','exclusive_or_exp',3,'p_exclusive_or_exp','LanguageParser.py',645),
  ('exclusive_or_exp -> and_exp','exclusive_or_exp',1,'p_exclusive_or_exp','LanguageParser.py',646),
  ('and_exp -> and_exp AMPER equality_exp','and_exp',3,'p_and_exp','LanguageParser.py',653),
  ('and_exp -> equality_exp','and_exp',1,'p_and_exp','LanguageParser.py',654),
  ('equality_exp -> equality_exp EQEQUAL relational_exp','equality_exp',3,'p_equality_exp','LanguageParser.py',661),
  ('equality_exp -> equality_exp NOTEQUAL relational_exp','equality_exp',3,'p_equality_exp','LanguageParser.py',662),
  ('equality_exp -> relational_exp','equality_exp',1,'p_equality_exp','LanguageParser.py',663),
  ('relational_exp -> relational_exp LT shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',672),
  ('relational_exp -> relational_exp GT shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',673),
  ('relational_exp -> relational_exp LEQ shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',674),
  ('relational_exp -> relational_exp GEQ shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',675),
  ('relational_exp -> relational_exp IS type','relational_exp',3,'p_relational_exp','LanguageParser.py',676),
  ('relational_exp -> shift_exp','relational_exp',1,'p_relational_exp','LanguageParser.py',677),
  ('shift_exp -> shift_exp LSHIFT additive_exp','shift_exp',3,'p_shift_exp','LanguageParser.py',692),
  ('shift_exp -> shift_exp RSHIFT additive_exp','shift_exp',3,'p_shift_exp','LanguageParser.py',693),
  ('shift_exp -> additive_exp','shift_exp',1,'p_shift_exp','LanguageParser.py',694),
  ('additive_exp -> additive_exp PLUS multiplicative_exp','additive_exp',3,'p_additive_exp','LanguageParser.py',703),
  ('additive_exp -> additive_exp MINUS multiplicative_exp','additive_exp',3,'p_additive_exp','LanguageParser.py',704),
  ('additive_exp -> multiplicative_exp','additive_exp',1,'p_additive_exp','LanguageParser.py',705),
  ('multiplicative_exp -> multiplicative_exp STAR unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',714),
  ('multiplicative_exp -> multiplicative_exp SLASH unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',715),
  ('multiplicative_exp -> multiplicative_exp PERCENT unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',716),
  ('multiplicative_exp -> unary_exp','multiplicative_exp',1,'p_multiplicative_exp','LanguageParser.py',717),
  ('assignment -> unary_exp EQUAL exp','assignment',3,'p_assignment_simple','LanguageParser.py',728),
  ('class_declaration -> modifiers CLASS ID class_body','class_declaration',4,'p_class_declaration','LanguageParser.py',732),
  ('class_declaration -> CLASS ID class_body','class_declaration',3,'p_class_declaration','LanguageParser.py',733),
  ('class_body -> LBRACE class_member_decl RBRACE','class_body',3,'p_class_body','LanguageParser.py',754),
  ('class_body -> LBRACE RBRACE','class_body',2,'p_class_body','LanguageParser.py',755),
  ('class_member_decl -> constant_declaration','class_member_decl',1,'p_class_member_declaration','LanguageParser.py',762),
  ('class_member_decl -> field_declaration','class_member_decl',1,'p_class_member_declaration','LanguageParser.py',763),
  ('class_member_decl -> method_declaration','class_member_decl',1,'p_class_member_declaration','LanguageParser.py',764),
  ('class_member_decl -> constructor_declaration','class_member_decl',1,'p_class_member_declaration','LanguageParser.py',765),
  ('constant_declaration -> modifiers CONST type const_declarators SEMI','constant_declaration',5,'p_constant_declaration','LanguageParser.py',776),
  ('constant_declaration -> CONST type const_declarators SEMI','constant_declaration',4,'p_constant_declaration','LanguageParser.py',777),
  ('field_declaration -> modifiers_list type var_declarators SEMI','field_declaration',4,'p_field_declaration','LanguageParser.py',795),
  ('field_declaration -> type var_declarators SEMI','field_declaration',3,'p_field_declaration','LanguageParser.py',796),
  ('method_declaration -> modifiers_list type method_head block','method_declaration',4,'p_method_declaration','LanguageParser.py',828),
  ('method_declaration -> type method_head block','method_declaration',3,'p_method_declaration','LanguageParser.py',829),
  ('method_head -> ID LPAREN param_list RPAREN','method_head',4,'p_method_head','LanguageParser.py',858),
  ('method_head -> ID LPAREN RPAREN','method_head',3,'p_method_head','LanguageParser.py',859),
  ('constructor_declaration -> modifiers constructor_head block','constructor_declaration',3,'p_constructor_declaration','LanguageParser.py',866),
  ('constructor_declaration -> constructor_head block','constructor_declaration',2,'p_constructor_declaration','LanguageParser.py',867),
  ('constructor_head -> ID LPAREN param_list RPAREN','constructor_head',4,'p_constructor_head','LanguageParser.py',879),
  ('constructor_head -> ID LPAREN RPAREN','constructor_head',3,'p_constructor_head','LanguageParser.py',880),
  ('modifiers -> NEW','modifiers',1,'p_modifiers','LanguageParser.py',887),
  ('modifiers -> PUBLIC','modifiers',1,'p_modifiers','LanguageParser.py',888),
  ('modifiers -> PROTECTED','modifiers',1,'p_modifiers','LanguageParser.py',889),
  ('modifiers -> PRIVATE','modifiers',1,'p_modifiers','LanguageParser.py',890),
  ('modifiers -> STATIC','modifiers',1,'p_modifiers','LanguageParser.py',891),
  ('modifiers_list -> modifiers','modifiers_list',1,'p_modifiers_list','LanguageParser.py',895),
  ('modifiers_list -> modifiers modifiers_list','modifiers_list',2,'p_modifiers_list','LanguageParser.py',896),
]
