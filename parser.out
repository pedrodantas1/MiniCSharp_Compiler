Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPEREQUAL
    BANG
    CATCH
    CIRCUMEQUAL
    CLASS
    ENUM
    FINALLY
    HOOKHOOK
    HOOKHOOKEQUAL
    INTERFACE
    LSHIFTEQUAL
    MINUSEQUAL
    NAMESPACE
    OUT
    OVERRIDE
    PARAMS
    PERCENTEQUAL
    PIPEEQUAL
    PLUSEQUAL
    PRIVATE
    PROTECTED
    PUBLIC
    READONLY
    REF
    RSHIFTEQUAL
    SHORT
    SLASHEQUAL
    STAREQUAL
    STATIC
    STRUCT
    THROW
    TILDE
    TRY
    UINT
    ULONG
    USHORT

Grammar

Rule 0     S' -> program
Rule 1     program -> func_declaration
Rule 2     program -> func_declaration program
Rule 3     type -> class_type
Rule 4     type -> value_type
Rule 5     class_type -> OBJECT
Rule 6     class_type -> STRING
Rule 7     value_type -> integral_type
Rule 8     value_type -> floating_point_type
Rule 9     value_type -> BOOL
Rule 10    value_type -> VOID
Rule 11    integral_type -> INT
Rule 12    integral_type -> LONG
Rule 13    integral_type -> CHAR
Rule 14    floating_point_type -> FLOAT
Rule 15    floating_point_type -> DOUBLE
Rule 16    floating_point_type -> DECIMAL
Rule 17    func_declaration -> signature block
Rule 18    signature -> type ID LPAREN param_list RPAREN
Rule 19    signature -> type ID LPAREN RPAREN
Rule 20    param_list -> type ID
Rule 21    param_list -> type ID COMMA param_list
Rule 22    statement_list -> statement
Rule 23    statement_list -> statement statement_list
Rule 24    statement -> declaration_statement
Rule 25    statement -> embedded_statement
Rule 26    declaration_statement -> const_declaration SEMI
Rule 27    declaration_statement -> var_declaration SEMI
Rule 28    const_declaration -> CONST type const_declarators
Rule 29    const_declarators -> const_declarator
Rule 30    const_declarators -> const_declarator COMMA const_declarators
Rule 31    const_declarator -> ID EQUAL exp
Rule 32    var_declaration -> type var_declarators
Rule 33    var_declarators -> var_declarator
Rule 34    var_declarators -> var_declarator COMMA var_declarators
Rule 35    var_declarator -> ID
Rule 36    var_declarator -> ID EQUAL exp
Rule 37    embedded_statement -> block
Rule 38    embedded_statement -> empty_statement
Rule 39    embedded_statement -> exp_statement
Rule 40    embedded_statement -> selection_statement
Rule 41    embedded_statement -> iteration_statement
Rule 42    embedded_statement -> jump_statement
Rule 43    block -> LBRACE statement_list RBRACE
Rule 44    block -> LBRACE RBRACE
Rule 45    empty_statement -> SEMI
Rule 46    exp_statement -> statement_exp SEMI
Rule 47    statement_exp -> invocation_exp
Rule 48    statement_exp -> object_creation_exp
Rule 49    statement_exp -> assignment
Rule 50    statement_exp -> post_increment_exp
Rule 51    statement_exp -> post_decrement_exp
Rule 52    statement_exp -> pre_increment_exp
Rule 53    statement_exp -> pre_decrement_exp
Rule 54    object_creation_exp -> NEW type LPAREN RPAREN
Rule 55    object_creation_exp -> NEW type LPAREN RPAREN object_initializer
Rule 56    object_creation_exp -> NEW type LPAREN arg_list RPAREN
Rule 57    object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer
Rule 58    object_initializer -> LBRACE RBRACE
Rule 59    object_initializer -> LBRACE member_initializer_list RBRACE
Rule 60    member_initializer_list -> member_initializer
Rule 61    member_initializer_list -> member_initializer COMMA member_initializer_list
Rule 62    member_initializer -> ID EQUAL exp
Rule 63    post_increment_exp -> primary_exp PLUSPLUS
Rule 64    post_decrement_exp -> primary_exp MINUSMINUS
Rule 65    pre_increment_exp -> PLUSPLUS unary_exp
Rule 66    pre_decrement_exp -> MINUSMINUS unary_exp
Rule 67    selection_statement -> if_statement
Rule 68    selection_statement -> switch_statement
Rule 69    if_statement -> IF LPAREN exp RPAREN block
Rule 70    if_statement -> IF LPAREN exp RPAREN block ELSE block
Rule 71    switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
Rule 72    switch_body -> switch_section
Rule 73    switch_body -> switch_section switch_body
Rule 74    switch_section -> switch_label statement_list
Rule 75    switch_section -> switch_label switch_section
Rule 76    switch_label -> CASE pattern COLON
Rule 77    switch_label -> DEFAULT COLON
Rule 78    pattern -> exp
Rule 79    iteration_statement -> while_statement
Rule 80    iteration_statement -> do_statement
Rule 81    iteration_statement -> for_statement
Rule 82    iteration_statement -> foreach_statement
Rule 83    while_statement -> WHILE LPAREN exp RPAREN embedded_statement
Rule 84    do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI
Rule 85    for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
Rule 86    for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
Rule 87    for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
Rule 88    for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
Rule 89    for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
Rule 90    for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
Rule 91    for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
Rule 92    for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement
Rule 93    for_initializer -> var_declaration
Rule 94    for_condition -> exp
Rule 95    for_iterator -> statement_exp_list
Rule 96    statement_exp_list -> statement_exp
Rule 97    statement_exp_list -> statement_exp COMMA statement_exp_list
Rule 98    foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement
Rule 99    jump_statement -> break_statement
Rule 100   jump_statement -> continue_statement
Rule 101   jump_statement -> return_statement
Rule 102   break_statement -> BREAK SEMI
Rule 103   continue_statement -> CONTINUE SEMI
Rule 104   return_statement -> RETURN SEMI
Rule 105   return_statement -> RETURN exp SEMI
Rule 106   arg_list -> exp
Rule 107   arg_list -> exp COMMA arg_list
Rule 108   primary_exp -> primary_no_array_creation_exp
Rule 109   primary_no_array_creation_exp -> TRUE
Rule 110   primary_no_array_creation_exp -> FALSE
Rule 111   primary_no_array_creation_exp -> NULL
Rule 112   primary_no_array_creation_exp -> INTNUM
Rule 113   primary_no_array_creation_exp -> HEXADECIMALNUM
Rule 114   primary_no_array_creation_exp -> BINARYNUM
Rule 115   primary_no_array_creation_exp -> FLOATNUM
Rule 116   primary_no_array_creation_exp -> DOUBLENUM
Rule 117   primary_no_array_creation_exp -> DECIMALNUM
Rule 118   primary_no_array_creation_exp -> CHARLITERAL
Rule 119   primary_no_array_creation_exp -> STRINGLITERAL
Rule 120   primary_no_array_creation_exp -> ID
Rule 121   primary_no_array_creation_exp -> parenthesized_exp
Rule 122   parenthesized_exp -> LPAREN exp RPAREN
Rule 123   primary_no_array_creation_exp -> member_access
Rule 124   member_access -> primary_exp DOT ID
Rule 125   primary_no_array_creation_exp -> invocation_exp
Rule 126   invocation_exp -> primary_exp LPAREN RPAREN
Rule 127   invocation_exp -> primary_exp LPAREN arg_list RPAREN
Rule 128   primary_no_array_creation_exp -> element_access
Rule 129   element_access -> primary_no_array_creation_exp LSB exp RSB
Rule 130   primary_no_array_creation_exp -> THIS
Rule 131   primary_no_array_creation_exp -> post_increment_exp
Rule 132   primary_no_array_creation_exp -> post_decrement_exp
Rule 133   primary_no_array_creation_exp -> object_creation_exp
Rule 134   primary_no_array_creation_exp -> typeof_exp
Rule 135   typeof_exp -> TYPEOF LPAREN type RPAREN
Rule 136   primary_no_array_creation_exp -> sizeof_exp
Rule 137   sizeof_exp -> SIZEOF LPAREN value_type RPAREN
Rule 138   exp_list -> exp
Rule 139   exp_list -> exp_list COMMA exp
Rule 140   unary_exp -> primary_exp
Rule 141   unary_exp -> pre_increment_exp
Rule 142   unary_exp -> pre_decrement_exp
Rule 143   unary_exp -> cast_exp
Rule 144   cast_exp -> LPAREN type RPAREN unary_exp
Rule 145   exp -> non_assignment_exp
Rule 146   exp -> assignment
Rule 147   non_assignment_exp -> conditional_exp
Rule 148   conditional_exp -> conditional_or_exp HOOK exp COLON exp
Rule 149   conditional_exp -> conditional_or_exp
Rule 150   conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp
Rule 151   conditional_or_exp -> conditional_and_exp
Rule 152   conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp
Rule 153   conditional_and_exp -> inclusive_or_exp
Rule 154   inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp
Rule 155   inclusive_or_exp -> exclusive_or_exp
Rule 156   exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp
Rule 157   exclusive_or_exp -> and_exp
Rule 158   and_exp -> and_exp AMPER equality_exp
Rule 159   and_exp -> equality_exp
Rule 160   equality_exp -> equality_exp EQEQUAL relational_exp
Rule 161   equality_exp -> equality_exp NOTEQUAL relational_exp
Rule 162   equality_exp -> relational_exp
Rule 163   relational_exp -> relational_exp LT shift_exp
Rule 164   relational_exp -> relational_exp GT shift_exp
Rule 165   relational_exp -> relational_exp LEQ shift_exp
Rule 166   relational_exp -> relational_exp GEQ shift_exp
Rule 167   relational_exp -> relational_exp IS type
Rule 168   relational_exp -> shift_exp
Rule 169   shift_exp -> shift_exp LSHIFT additive_exp
Rule 170   shift_exp -> shift_exp RSHIFT additive_exp
Rule 171   shift_exp -> additive_exp
Rule 172   additive_exp -> additive_exp PLUS multiplicative_exp
Rule 173   additive_exp -> additive_exp MINUS multiplicative_exp
Rule 174   additive_exp -> multiplicative_exp
Rule 175   multiplicative_exp -> multiplicative_exp STAR unary_exp
Rule 176   multiplicative_exp -> multiplicative_exp SLASH unary_exp
Rule 177   multiplicative_exp -> multiplicative_exp PERCENT unary_exp
Rule 178   multiplicative_exp -> unary_exp
Rule 179   assignment -> unary_exp EQUAL exp

Terminals, with rules where they appear

AMPER                : 158
AMPERAMPER           : 152
AMPEREQUAL           : 
BANG                 : 
BINARYNUM            : 114
BOOL                 : 9
BREAK                : 102
CASE                 : 76
CATCH                : 
CHAR                 : 13
CHARLITERAL          : 118
CIRCUMEQUAL          : 
CIRCUMFLEX           : 156
CLASS                : 
COLON                : 76 77 148
COMMA                : 21 30 34 61 97 107 139
CONST                : 28
CONTINUE             : 103
DECIMAL              : 16
DECIMALNUM           : 117
DEFAULT              : 77
DO                   : 84
DOT                  : 124
DOUBLE               : 15
DOUBLENUM            : 116
ELSE                 : 70
ENUM                 : 
EQEQUAL              : 160
EQUAL                : 31 36 62 179
FALSE                : 110
FINALLY              : 
FLOAT                : 14
FLOATNUM             : 115
FOR                  : 85 86 87 88 89 90 91 92
FOREACH              : 98
GEQ                  : 166
GT                   : 164
HEXADECIMALNUM       : 113
HOOK                 : 148
HOOKHOOK             : 
HOOKHOOKEQUAL        : 
ID                   : 18 19 20 21 31 35 36 62 98 120 124
IF                   : 69 70
IN                   : 98
INT                  : 11
INTERFACE            : 
INTNUM               : 112
IS                   : 167
LBRACE               : 43 44 58 59 71
LEQ                  : 165
LONG                 : 12
LPAREN               : 18 19 54 55 56 57 69 70 71 83 84 85 86 87 88 89 90 91 92 98 122 126 127 135 137 144
LSB                  : 129
LSHIFT               : 169
LSHIFTEQUAL          : 
LT                   : 163
MINUS                : 173
MINUSEQUAL           : 
MINUSMINUS           : 64 66
NAMESPACE            : 
NEW                  : 54 55 56 57
NOTEQUAL             : 161
NULL                 : 111
OBJECT               : 5
OUT                  : 
OVERRIDE             : 
PARAMS               : 
PERCENT              : 177
PERCENTEQUAL         : 
PIPE                 : 154
PIPEEQUAL            : 
PIPEPIPE             : 150
PLUS                 : 172
PLUSEQUAL            : 
PLUSPLUS             : 63 65
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
RBRACE               : 43 44 58 59 71
READONLY             : 
REF                  : 
RETURN               : 104 105
RPAREN               : 18 19 54 55 56 57 69 70 71 83 84 85 86 87 88 89 90 91 92 98 122 126 127 135 137 144
RSB                  : 129
RSHIFT               : 170
RSHIFTEQUAL          : 
SEMI                 : 26 27 45 46 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 102 103 104 105
SHORT                : 
SIZEOF               : 137
SLASH                : 176
SLASHEQUAL           : 
STAR                 : 175
STAREQUAL            : 
STATIC               : 
STRING               : 6
STRINGLITERAL        : 119
STRUCT               : 
SWITCH               : 71
THIS                 : 130
THROW                : 
TILDE                : 
TRUE                 : 109
TRY                  : 
TYPEOF               : 135
UINT                 : 
ULONG                : 
USHORT               : 
VOID                 : 10
WHILE                : 83 84
error                : 

Nonterminals, with rules where they appear

additive_exp         : 169 170 171 172 173
and_exp              : 156 157 158
arg_list             : 56 57 107 127
assignment           : 49 146
block                : 17 37 69 70 70
break_statement      : 99
cast_exp             : 143
class_type           : 3
conditional_and_exp  : 150 151 152
conditional_exp      : 147
conditional_or_exp   : 148 149 150
const_declaration    : 26
const_declarator     : 29 30
const_declarators    : 28 30
continue_statement   : 100
declaration_statement : 24
do_statement         : 80
element_access       : 128
embedded_statement   : 25 83 84 85 86 87 88 89 90 91 92 98
empty_statement      : 38
equality_exp         : 158 159 160 161
exclusive_or_exp     : 154 155 156
exp                  : 31 36 62 69 70 71 78 83 84 94 98 105 106 107 122 129 138 139 148 148 179
exp_list             : 139
exp_statement        : 39
floating_point_type  : 8
for_condition        : 85 86 89 90
for_initializer      : 85 86 87 88
for_iterator         : 85 87 89 91
for_statement        : 81
foreach_statement    : 82
func_declaration     : 1 2
if_statement         : 67
inclusive_or_exp     : 152 153 154
integral_type        : 7
invocation_exp       : 47 125
iteration_statement  : 41
jump_statement       : 42
member_access        : 123
member_initializer   : 60 61
member_initializer_list : 59 61
multiplicative_exp   : 172 173 174 175 176 177
non_assignment_exp   : 145
object_creation_exp  : 48 133
object_initializer   : 55 57
param_list           : 18 21
parenthesized_exp    : 121
pattern              : 76
post_decrement_exp   : 51 132
post_increment_exp   : 50 131
pre_decrement_exp    : 53 142
pre_increment_exp    : 52 141
primary_exp          : 63 64 124 126 127 140
primary_no_array_creation_exp : 108 129
program              : 2 0
relational_exp       : 160 161 162 163 164 165 166 167
return_statement     : 101
selection_statement  : 40
shift_exp            : 163 164 165 166 168 169 170
signature            : 17
sizeof_exp           : 136
statement            : 22 23
statement_exp        : 46 96 97
statement_exp_list   : 95 97
statement_list       : 23 43 74
switch_body          : 71 73
switch_label         : 74 75
switch_section       : 72 73 75
switch_statement     : 68
type                 : 18 19 20 21 28 32 54 55 56 57 98 135 144 167
typeof_exp           : 134
unary_exp            : 65 66 144 175 176 177 178 179
value_type           : 4 137
var_declaration      : 27 93
var_declarator       : 33 34
var_declarators      : 32 34
while_statement      : 79

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . func_declaration
    (2) program -> . func_declaration program
    (17) func_declaration -> . signature block
    (18) signature -> . type ID LPAREN param_list RPAREN
    (19) signature -> . type ID LPAREN RPAREN
    (3) type -> . class_type
    (4) type -> . value_type
    (5) class_type -> . OBJECT
    (6) class_type -> . STRING
    (7) value_type -> . integral_type
    (8) value_type -> . floating_point_type
    (9) value_type -> . BOOL
    (10) value_type -> . VOID
    (11) integral_type -> . INT
    (12) integral_type -> . LONG
    (13) integral_type -> . CHAR
    (14) floating_point_type -> . FLOAT
    (15) floating_point_type -> . DOUBLE
    (16) floating_point_type -> . DECIMAL

    OBJECT          shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 11
    VOID            shift and go to state 12
    INT             shift and go to state 13
    LONG            shift and go to state 14
    CHAR            shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17
    DECIMAL         shift and go to state 18

    program                        shift and go to state 1
    func_declaration               shift and go to state 2
    signature                      shift and go to state 3
    type                           shift and go to state 4
    class_type                     shift and go to state 5
    value_type                     shift and go to state 6
    integral_type                  shift and go to state 9
    floating_point_type            shift and go to state 10

state 1

    (0) S' -> program .



state 2

    (1) program -> func_declaration .
    (2) program -> func_declaration . program
    (1) program -> . func_declaration
    (2) program -> . func_declaration program
    (17) func_declaration -> . signature block
    (18) signature -> . type ID LPAREN param_list RPAREN
    (19) signature -> . type ID LPAREN RPAREN
    (3) type -> . class_type
    (4) type -> . value_type
    (5) class_type -> . OBJECT
    (6) class_type -> . STRING
    (7) value_type -> . integral_type
    (8) value_type -> . floating_point_type
    (9) value_type -> . BOOL
    (10) value_type -> . VOID
    (11) integral_type -> . INT
    (12) integral_type -> . LONG
    (13) integral_type -> . CHAR
    (14) floating_point_type -> . FLOAT
    (15) floating_point_type -> . DOUBLE
    (16) floating_point_type -> . DECIMAL

    $end            reduce using rule 1 (program -> func_declaration .)
    OBJECT          shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 11
    VOID            shift and go to state 12
    INT             shift and go to state 13
    LONG            shift and go to state 14
    CHAR            shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17
    DECIMAL         shift and go to state 18

    func_declaration               shift and go to state 2
    program                        shift and go to state 19
    signature                      shift and go to state 3
    type                           shift and go to state 4
    class_type                     shift and go to state 5
    value_type                     shift and go to state 6
    integral_type                  shift and go to state 9
    floating_point_type            shift and go to state 10

state 3

    (17) func_declaration -> signature . block
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE

    LBRACE          shift and go to state 21

    block                          shift and go to state 20

state 4

    (18) signature -> type . ID LPAREN param_list RPAREN
    (19) signature -> type . ID LPAREN RPAREN

    ID              shift and go to state 22


state 5

    (3) type -> class_type .

    ID              reduce using rule 3 (type -> class_type .)
    RPAREN          reduce using rule 3 (type -> class_type .)
    LPAREN          reduce using rule 3 (type -> class_type .)
    LT              reduce using rule 3 (type -> class_type .)
    GT              reduce using rule 3 (type -> class_type .)
    LEQ             reduce using rule 3 (type -> class_type .)
    GEQ             reduce using rule 3 (type -> class_type .)
    IS              reduce using rule 3 (type -> class_type .)
    EQEQUAL         reduce using rule 3 (type -> class_type .)
    NOTEQUAL        reduce using rule 3 (type -> class_type .)
    AMPER           reduce using rule 3 (type -> class_type .)
    CIRCUMFLEX      reduce using rule 3 (type -> class_type .)
    PIPE            reduce using rule 3 (type -> class_type .)
    AMPERAMPER      reduce using rule 3 (type -> class_type .)
    HOOK            reduce using rule 3 (type -> class_type .)
    PIPEPIPE        reduce using rule 3 (type -> class_type .)
    SEMI            reduce using rule 3 (type -> class_type .)
    COMMA           reduce using rule 3 (type -> class_type .)
    RSB             reduce using rule 3 (type -> class_type .)
    COLON           reduce using rule 3 (type -> class_type .)
    RBRACE          reduce using rule 3 (type -> class_type .)


state 6

    (4) type -> value_type .

    ID              reduce using rule 4 (type -> value_type .)
    RPAREN          reduce using rule 4 (type -> value_type .)
    LPAREN          reduce using rule 4 (type -> value_type .)
    LT              reduce using rule 4 (type -> value_type .)
    GT              reduce using rule 4 (type -> value_type .)
    LEQ             reduce using rule 4 (type -> value_type .)
    GEQ             reduce using rule 4 (type -> value_type .)
    IS              reduce using rule 4 (type -> value_type .)
    EQEQUAL         reduce using rule 4 (type -> value_type .)
    NOTEQUAL        reduce using rule 4 (type -> value_type .)
    AMPER           reduce using rule 4 (type -> value_type .)
    CIRCUMFLEX      reduce using rule 4 (type -> value_type .)
    PIPE            reduce using rule 4 (type -> value_type .)
    AMPERAMPER      reduce using rule 4 (type -> value_type .)
    HOOK            reduce using rule 4 (type -> value_type .)
    PIPEPIPE        reduce using rule 4 (type -> value_type .)
    SEMI            reduce using rule 4 (type -> value_type .)
    COMMA           reduce using rule 4 (type -> value_type .)
    RSB             reduce using rule 4 (type -> value_type .)
    COLON           reduce using rule 4 (type -> value_type .)
    RBRACE          reduce using rule 4 (type -> value_type .)


state 7

    (5) class_type -> OBJECT .

    ID              reduce using rule 5 (class_type -> OBJECT .)
    RPAREN          reduce using rule 5 (class_type -> OBJECT .)
    LPAREN          reduce using rule 5 (class_type -> OBJECT .)
    LT              reduce using rule 5 (class_type -> OBJECT .)
    GT              reduce using rule 5 (class_type -> OBJECT .)
    LEQ             reduce using rule 5 (class_type -> OBJECT .)
    GEQ             reduce using rule 5 (class_type -> OBJECT .)
    IS              reduce using rule 5 (class_type -> OBJECT .)
    EQEQUAL         reduce using rule 5 (class_type -> OBJECT .)
    NOTEQUAL        reduce using rule 5 (class_type -> OBJECT .)
    AMPER           reduce using rule 5 (class_type -> OBJECT .)
    CIRCUMFLEX      reduce using rule 5 (class_type -> OBJECT .)
    PIPE            reduce using rule 5 (class_type -> OBJECT .)
    AMPERAMPER      reduce using rule 5 (class_type -> OBJECT .)
    HOOK            reduce using rule 5 (class_type -> OBJECT .)
    PIPEPIPE        reduce using rule 5 (class_type -> OBJECT .)
    SEMI            reduce using rule 5 (class_type -> OBJECT .)
    COMMA           reduce using rule 5 (class_type -> OBJECT .)
    RSB             reduce using rule 5 (class_type -> OBJECT .)
    COLON           reduce using rule 5 (class_type -> OBJECT .)
    RBRACE          reduce using rule 5 (class_type -> OBJECT .)


state 8

    (6) class_type -> STRING .

    ID              reduce using rule 6 (class_type -> STRING .)
    RPAREN          reduce using rule 6 (class_type -> STRING .)
    LPAREN          reduce using rule 6 (class_type -> STRING .)
    LT              reduce using rule 6 (class_type -> STRING .)
    GT              reduce using rule 6 (class_type -> STRING .)
    LEQ             reduce using rule 6 (class_type -> STRING .)
    GEQ             reduce using rule 6 (class_type -> STRING .)
    IS              reduce using rule 6 (class_type -> STRING .)
    EQEQUAL         reduce using rule 6 (class_type -> STRING .)
    NOTEQUAL        reduce using rule 6 (class_type -> STRING .)
    AMPER           reduce using rule 6 (class_type -> STRING .)
    CIRCUMFLEX      reduce using rule 6 (class_type -> STRING .)
    PIPE            reduce using rule 6 (class_type -> STRING .)
    AMPERAMPER      reduce using rule 6 (class_type -> STRING .)
    HOOK            reduce using rule 6 (class_type -> STRING .)
    PIPEPIPE        reduce using rule 6 (class_type -> STRING .)
    SEMI            reduce using rule 6 (class_type -> STRING .)
    COMMA           reduce using rule 6 (class_type -> STRING .)
    RSB             reduce using rule 6 (class_type -> STRING .)
    COLON           reduce using rule 6 (class_type -> STRING .)
    RBRACE          reduce using rule 6 (class_type -> STRING .)


state 9

    (7) value_type -> integral_type .

    ID              reduce using rule 7 (value_type -> integral_type .)
    RPAREN          reduce using rule 7 (value_type -> integral_type .)
    LPAREN          reduce using rule 7 (value_type -> integral_type .)
    LT              reduce using rule 7 (value_type -> integral_type .)
    GT              reduce using rule 7 (value_type -> integral_type .)
    LEQ             reduce using rule 7 (value_type -> integral_type .)
    GEQ             reduce using rule 7 (value_type -> integral_type .)
    IS              reduce using rule 7 (value_type -> integral_type .)
    EQEQUAL         reduce using rule 7 (value_type -> integral_type .)
    NOTEQUAL        reduce using rule 7 (value_type -> integral_type .)
    AMPER           reduce using rule 7 (value_type -> integral_type .)
    CIRCUMFLEX      reduce using rule 7 (value_type -> integral_type .)
    PIPE            reduce using rule 7 (value_type -> integral_type .)
    AMPERAMPER      reduce using rule 7 (value_type -> integral_type .)
    HOOK            reduce using rule 7 (value_type -> integral_type .)
    PIPEPIPE        reduce using rule 7 (value_type -> integral_type .)
    SEMI            reduce using rule 7 (value_type -> integral_type .)
    COMMA           reduce using rule 7 (value_type -> integral_type .)
    RSB             reduce using rule 7 (value_type -> integral_type .)
    COLON           reduce using rule 7 (value_type -> integral_type .)
    RBRACE          reduce using rule 7 (value_type -> integral_type .)


state 10

    (8) value_type -> floating_point_type .

    ID              reduce using rule 8 (value_type -> floating_point_type .)
    RPAREN          reduce using rule 8 (value_type -> floating_point_type .)
    LPAREN          reduce using rule 8 (value_type -> floating_point_type .)
    LT              reduce using rule 8 (value_type -> floating_point_type .)
    GT              reduce using rule 8 (value_type -> floating_point_type .)
    LEQ             reduce using rule 8 (value_type -> floating_point_type .)
    GEQ             reduce using rule 8 (value_type -> floating_point_type .)
    IS              reduce using rule 8 (value_type -> floating_point_type .)
    EQEQUAL         reduce using rule 8 (value_type -> floating_point_type .)
    NOTEQUAL        reduce using rule 8 (value_type -> floating_point_type .)
    AMPER           reduce using rule 8 (value_type -> floating_point_type .)
    CIRCUMFLEX      reduce using rule 8 (value_type -> floating_point_type .)
    PIPE            reduce using rule 8 (value_type -> floating_point_type .)
    AMPERAMPER      reduce using rule 8 (value_type -> floating_point_type .)
    HOOK            reduce using rule 8 (value_type -> floating_point_type .)
    PIPEPIPE        reduce using rule 8 (value_type -> floating_point_type .)
    SEMI            reduce using rule 8 (value_type -> floating_point_type .)
    COMMA           reduce using rule 8 (value_type -> floating_point_type .)
    RSB             reduce using rule 8 (value_type -> floating_point_type .)
    COLON           reduce using rule 8 (value_type -> floating_point_type .)
    RBRACE          reduce using rule 8 (value_type -> floating_point_type .)


state 11

    (9) value_type -> BOOL .

    ID              reduce using rule 9 (value_type -> BOOL .)
    RPAREN          reduce using rule 9 (value_type -> BOOL .)
    LPAREN          reduce using rule 9 (value_type -> BOOL .)
    LT              reduce using rule 9 (value_type -> BOOL .)
    GT              reduce using rule 9 (value_type -> BOOL .)
    LEQ             reduce using rule 9 (value_type -> BOOL .)
    GEQ             reduce using rule 9 (value_type -> BOOL .)
    IS              reduce using rule 9 (value_type -> BOOL .)
    EQEQUAL         reduce using rule 9 (value_type -> BOOL .)
    NOTEQUAL        reduce using rule 9 (value_type -> BOOL .)
    AMPER           reduce using rule 9 (value_type -> BOOL .)
    CIRCUMFLEX      reduce using rule 9 (value_type -> BOOL .)
    PIPE            reduce using rule 9 (value_type -> BOOL .)
    AMPERAMPER      reduce using rule 9 (value_type -> BOOL .)
    HOOK            reduce using rule 9 (value_type -> BOOL .)
    PIPEPIPE        reduce using rule 9 (value_type -> BOOL .)
    SEMI            reduce using rule 9 (value_type -> BOOL .)
    COMMA           reduce using rule 9 (value_type -> BOOL .)
    RSB             reduce using rule 9 (value_type -> BOOL .)
    COLON           reduce using rule 9 (value_type -> BOOL .)
    RBRACE          reduce using rule 9 (value_type -> BOOL .)


state 12

    (10) value_type -> VOID .

    ID              reduce using rule 10 (value_type -> VOID .)
    RPAREN          reduce using rule 10 (value_type -> VOID .)
    LPAREN          reduce using rule 10 (value_type -> VOID .)
    LT              reduce using rule 10 (value_type -> VOID .)
    GT              reduce using rule 10 (value_type -> VOID .)
    LEQ             reduce using rule 10 (value_type -> VOID .)
    GEQ             reduce using rule 10 (value_type -> VOID .)
    IS              reduce using rule 10 (value_type -> VOID .)
    EQEQUAL         reduce using rule 10 (value_type -> VOID .)
    NOTEQUAL        reduce using rule 10 (value_type -> VOID .)
    AMPER           reduce using rule 10 (value_type -> VOID .)
    CIRCUMFLEX      reduce using rule 10 (value_type -> VOID .)
    PIPE            reduce using rule 10 (value_type -> VOID .)
    AMPERAMPER      reduce using rule 10 (value_type -> VOID .)
    HOOK            reduce using rule 10 (value_type -> VOID .)
    PIPEPIPE        reduce using rule 10 (value_type -> VOID .)
    SEMI            reduce using rule 10 (value_type -> VOID .)
    COMMA           reduce using rule 10 (value_type -> VOID .)
    RSB             reduce using rule 10 (value_type -> VOID .)
    COLON           reduce using rule 10 (value_type -> VOID .)
    RBRACE          reduce using rule 10 (value_type -> VOID .)


state 13

    (11) integral_type -> INT .

    ID              reduce using rule 11 (integral_type -> INT .)
    RPAREN          reduce using rule 11 (integral_type -> INT .)
    LPAREN          reduce using rule 11 (integral_type -> INT .)
    LT              reduce using rule 11 (integral_type -> INT .)
    GT              reduce using rule 11 (integral_type -> INT .)
    LEQ             reduce using rule 11 (integral_type -> INT .)
    GEQ             reduce using rule 11 (integral_type -> INT .)
    IS              reduce using rule 11 (integral_type -> INT .)
    EQEQUAL         reduce using rule 11 (integral_type -> INT .)
    NOTEQUAL        reduce using rule 11 (integral_type -> INT .)
    AMPER           reduce using rule 11 (integral_type -> INT .)
    CIRCUMFLEX      reduce using rule 11 (integral_type -> INT .)
    PIPE            reduce using rule 11 (integral_type -> INT .)
    AMPERAMPER      reduce using rule 11 (integral_type -> INT .)
    HOOK            reduce using rule 11 (integral_type -> INT .)
    PIPEPIPE        reduce using rule 11 (integral_type -> INT .)
    SEMI            reduce using rule 11 (integral_type -> INT .)
    COMMA           reduce using rule 11 (integral_type -> INT .)
    RSB             reduce using rule 11 (integral_type -> INT .)
    COLON           reduce using rule 11 (integral_type -> INT .)
    RBRACE          reduce using rule 11 (integral_type -> INT .)


state 14

    (12) integral_type -> LONG .

    ID              reduce using rule 12 (integral_type -> LONG .)
    RPAREN          reduce using rule 12 (integral_type -> LONG .)
    LPAREN          reduce using rule 12 (integral_type -> LONG .)
    LT              reduce using rule 12 (integral_type -> LONG .)
    GT              reduce using rule 12 (integral_type -> LONG .)
    LEQ             reduce using rule 12 (integral_type -> LONG .)
    GEQ             reduce using rule 12 (integral_type -> LONG .)
    IS              reduce using rule 12 (integral_type -> LONG .)
    EQEQUAL         reduce using rule 12 (integral_type -> LONG .)
    NOTEQUAL        reduce using rule 12 (integral_type -> LONG .)
    AMPER           reduce using rule 12 (integral_type -> LONG .)
    CIRCUMFLEX      reduce using rule 12 (integral_type -> LONG .)
    PIPE            reduce using rule 12 (integral_type -> LONG .)
    AMPERAMPER      reduce using rule 12 (integral_type -> LONG .)
    HOOK            reduce using rule 12 (integral_type -> LONG .)
    PIPEPIPE        reduce using rule 12 (integral_type -> LONG .)
    SEMI            reduce using rule 12 (integral_type -> LONG .)
    COMMA           reduce using rule 12 (integral_type -> LONG .)
    RSB             reduce using rule 12 (integral_type -> LONG .)
    COLON           reduce using rule 12 (integral_type -> LONG .)
    RBRACE          reduce using rule 12 (integral_type -> LONG .)


state 15

    (13) integral_type -> CHAR .

    ID              reduce using rule 13 (integral_type -> CHAR .)
    RPAREN          reduce using rule 13 (integral_type -> CHAR .)
    LPAREN          reduce using rule 13 (integral_type -> CHAR .)
    LT              reduce using rule 13 (integral_type -> CHAR .)
    GT              reduce using rule 13 (integral_type -> CHAR .)
    LEQ             reduce using rule 13 (integral_type -> CHAR .)
    GEQ             reduce using rule 13 (integral_type -> CHAR .)
    IS              reduce using rule 13 (integral_type -> CHAR .)
    EQEQUAL         reduce using rule 13 (integral_type -> CHAR .)
    NOTEQUAL        reduce using rule 13 (integral_type -> CHAR .)
    AMPER           reduce using rule 13 (integral_type -> CHAR .)
    CIRCUMFLEX      reduce using rule 13 (integral_type -> CHAR .)
    PIPE            reduce using rule 13 (integral_type -> CHAR .)
    AMPERAMPER      reduce using rule 13 (integral_type -> CHAR .)
    HOOK            reduce using rule 13 (integral_type -> CHAR .)
    PIPEPIPE        reduce using rule 13 (integral_type -> CHAR .)
    SEMI            reduce using rule 13 (integral_type -> CHAR .)
    COMMA           reduce using rule 13 (integral_type -> CHAR .)
    RSB             reduce using rule 13 (integral_type -> CHAR .)
    COLON           reduce using rule 13 (integral_type -> CHAR .)
    RBRACE          reduce using rule 13 (integral_type -> CHAR .)


state 16

    (14) floating_point_type -> FLOAT .

    ID              reduce using rule 14 (floating_point_type -> FLOAT .)
    RPAREN          reduce using rule 14 (floating_point_type -> FLOAT .)
    LPAREN          reduce using rule 14 (floating_point_type -> FLOAT .)
    LT              reduce using rule 14 (floating_point_type -> FLOAT .)
    GT              reduce using rule 14 (floating_point_type -> FLOAT .)
    LEQ             reduce using rule 14 (floating_point_type -> FLOAT .)
    GEQ             reduce using rule 14 (floating_point_type -> FLOAT .)
    IS              reduce using rule 14 (floating_point_type -> FLOAT .)
    EQEQUAL         reduce using rule 14 (floating_point_type -> FLOAT .)
    NOTEQUAL        reduce using rule 14 (floating_point_type -> FLOAT .)
    AMPER           reduce using rule 14 (floating_point_type -> FLOAT .)
    CIRCUMFLEX      reduce using rule 14 (floating_point_type -> FLOAT .)
    PIPE            reduce using rule 14 (floating_point_type -> FLOAT .)
    AMPERAMPER      reduce using rule 14 (floating_point_type -> FLOAT .)
    HOOK            reduce using rule 14 (floating_point_type -> FLOAT .)
    PIPEPIPE        reduce using rule 14 (floating_point_type -> FLOAT .)
    SEMI            reduce using rule 14 (floating_point_type -> FLOAT .)
    COMMA           reduce using rule 14 (floating_point_type -> FLOAT .)
    RSB             reduce using rule 14 (floating_point_type -> FLOAT .)
    COLON           reduce using rule 14 (floating_point_type -> FLOAT .)
    RBRACE          reduce using rule 14 (floating_point_type -> FLOAT .)


state 17

    (15) floating_point_type -> DOUBLE .

    ID              reduce using rule 15 (floating_point_type -> DOUBLE .)
    RPAREN          reduce using rule 15 (floating_point_type -> DOUBLE .)
    LPAREN          reduce using rule 15 (floating_point_type -> DOUBLE .)
    LT              reduce using rule 15 (floating_point_type -> DOUBLE .)
    GT              reduce using rule 15 (floating_point_type -> DOUBLE .)
    LEQ             reduce using rule 15 (floating_point_type -> DOUBLE .)
    GEQ             reduce using rule 15 (floating_point_type -> DOUBLE .)
    IS              reduce using rule 15 (floating_point_type -> DOUBLE .)
    EQEQUAL         reduce using rule 15 (floating_point_type -> DOUBLE .)
    NOTEQUAL        reduce using rule 15 (floating_point_type -> DOUBLE .)
    AMPER           reduce using rule 15 (floating_point_type -> DOUBLE .)
    CIRCUMFLEX      reduce using rule 15 (floating_point_type -> DOUBLE .)
    PIPE            reduce using rule 15 (floating_point_type -> DOUBLE .)
    AMPERAMPER      reduce using rule 15 (floating_point_type -> DOUBLE .)
    HOOK            reduce using rule 15 (floating_point_type -> DOUBLE .)
    PIPEPIPE        reduce using rule 15 (floating_point_type -> DOUBLE .)
    SEMI            reduce using rule 15 (floating_point_type -> DOUBLE .)
    COMMA           reduce using rule 15 (floating_point_type -> DOUBLE .)
    RSB             reduce using rule 15 (floating_point_type -> DOUBLE .)
    COLON           reduce using rule 15 (floating_point_type -> DOUBLE .)
    RBRACE          reduce using rule 15 (floating_point_type -> DOUBLE .)


state 18

    (16) floating_point_type -> DECIMAL .

    ID              reduce using rule 16 (floating_point_type -> DECIMAL .)
    RPAREN          reduce using rule 16 (floating_point_type -> DECIMAL .)
    LPAREN          reduce using rule 16 (floating_point_type -> DECIMAL .)
    LT              reduce using rule 16 (floating_point_type -> DECIMAL .)
    GT              reduce using rule 16 (floating_point_type -> DECIMAL .)
    LEQ             reduce using rule 16 (floating_point_type -> DECIMAL .)
    GEQ             reduce using rule 16 (floating_point_type -> DECIMAL .)
    IS              reduce using rule 16 (floating_point_type -> DECIMAL .)
    EQEQUAL         reduce using rule 16 (floating_point_type -> DECIMAL .)
    NOTEQUAL        reduce using rule 16 (floating_point_type -> DECIMAL .)
    AMPER           reduce using rule 16 (floating_point_type -> DECIMAL .)
    CIRCUMFLEX      reduce using rule 16 (floating_point_type -> DECIMAL .)
    PIPE            reduce using rule 16 (floating_point_type -> DECIMAL .)
    AMPERAMPER      reduce using rule 16 (floating_point_type -> DECIMAL .)
    HOOK            reduce using rule 16 (floating_point_type -> DECIMAL .)
    PIPEPIPE        reduce using rule 16 (floating_point_type -> DECIMAL .)
    SEMI            reduce using rule 16 (floating_point_type -> DECIMAL .)
    COMMA           reduce using rule 16 (floating_point_type -> DECIMAL .)
    RSB             reduce using rule 16 (floating_point_type -> DECIMAL .)
    COLON           reduce using rule 16 (floating_point_type -> DECIMAL .)
    RBRACE          reduce using rule 16 (floating_point_type -> DECIMAL .)


state 19

    (2) program -> func_declaration program .

    $end            reduce using rule 2 (program -> func_declaration program .)


state 20

    (17) func_declaration -> signature block .

    OBJECT          reduce using rule 17 (func_declaration -> signature block .)
    STRING          reduce using rule 17 (func_declaration -> signature block .)
    BOOL            reduce using rule 17 (func_declaration -> signature block .)
    VOID            reduce using rule 17 (func_declaration -> signature block .)
    INT             reduce using rule 17 (func_declaration -> signature block .)
    LONG            reduce using rule 17 (func_declaration -> signature block .)
    CHAR            reduce using rule 17 (func_declaration -> signature block .)
    FLOAT           reduce using rule 17 (func_declaration -> signature block .)
    DOUBLE          reduce using rule 17 (func_declaration -> signature block .)
    DECIMAL         reduce using rule 17 (func_declaration -> signature block .)
    $end            reduce using rule 17 (func_declaration -> signature block .)


state 21

    (43) block -> LBRACE . statement_list RBRACE
    (44) block -> LBRACE . RBRACE
    (22) statement_list -> . statement
    (23) statement_list -> . statement statement_list
    (24) statement -> . declaration_statement
    (25) statement -> . embedded_statement
    (26) declaration_statement -> . const_declaration SEMI
    (27) declaration_statement -> . var_declaration SEMI
    (37) embedded_statement -> . block
    (38) embedded_statement -> . empty_statement
    (39) embedded_statement -> . exp_statement
    (40) embedded_statement -> . selection_statement
    (41) embedded_statement -> . iteration_statement
    (42) embedded_statement -> . jump_statement
    (28) const_declaration -> . CONST type const_declarators
    (32) var_declaration -> . type var_declarators
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE
    (45) empty_statement -> . SEMI
    (46) exp_statement -> . statement_exp SEMI
    (67) selection_statement -> . if_statement
    (68) selection_statement -> . switch_statement
    (79) iteration_statement -> . while_statement
    (80) iteration_statement -> . do_statement
    (81) iteration_statement -> . for_statement
    (82) iteration_statement -> . foreach_statement
    (99) jump_statement -> . break_statement
    (100) jump_statement -> . continue_statement
    (101) jump_statement -> . return_statement
    (3) type -> . class_type
    (4) type -> . value_type
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (69) if_statement -> . IF LPAREN exp RPAREN block
    (70) if_statement -> . IF LPAREN exp RPAREN block ELSE block
    (71) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (83) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (84) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (85) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (98) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (102) break_statement -> . BREAK SEMI
    (103) continue_statement -> . CONTINUE SEMI
    (104) return_statement -> . RETURN SEMI
    (105) return_statement -> . RETURN exp SEMI
    (5) class_type -> . OBJECT
    (6) class_type -> . STRING
    (7) value_type -> . integral_type
    (8) value_type -> . floating_point_type
    (9) value_type -> . BOOL
    (10) value_type -> . VOID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (11) integral_type -> . INT
    (12) integral_type -> . LONG
    (13) integral_type -> . CHAR
    (14) floating_point_type -> . FLOAT
    (15) floating_point_type -> . DOUBLE
    (16) floating_point_type -> . DECIMAL
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    RBRACE          shift and go to state 24
    CONST           shift and go to state 37
    LBRACE          shift and go to state 21
    SEMI            shift and go to state 29
    IF              shift and go to state 56
    SWITCH          shift and go to state 58
    WHILE           shift and go to state 59
    DO              shift and go to state 60
    FOR             shift and go to state 61
    FOREACH         shift and go to state 62
    BREAK           shift and go to state 64
    CONTINUE        shift and go to state 65
    RETURN          shift and go to state 66
    OBJECT          shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 11
    VOID            shift and go to state 12
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    INT             shift and go to state 13
    LONG            shift and go to state 14
    CHAR            shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17
    DECIMAL         shift and go to state 18
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    statement_list                 shift and go to state 23
    statement                      shift and go to state 25
    declaration_statement          shift and go to state 26
    embedded_statement             shift and go to state 27
    const_declaration              shift and go to state 28
    var_declaration                shift and go to state 30
    block                          shift and go to state 31
    empty_statement                shift and go to state 32
    exp_statement                  shift and go to state 33
    selection_statement            shift and go to state 34
    iteration_statement            shift and go to state 35
    jump_statement                 shift and go to state 36
    type                           shift and go to state 38
    statement_exp                  shift and go to state 39
    if_statement                   shift and go to state 40
    switch_statement               shift and go to state 41
    while_statement                shift and go to state 42
    do_statement                   shift and go to state 43
    for_statement                  shift and go to state 44
    foreach_statement              shift and go to state 45
    break_statement                shift and go to state 46
    continue_statement             shift and go to state 47
    return_statement               shift and go to state 48
    class_type                     shift and go to state 5
    value_type                     shift and go to state 6
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    integral_type                  shift and go to state 9
    floating_point_type            shift and go to state 10
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 22

    (18) signature -> type ID . LPAREN param_list RPAREN
    (19) signature -> type ID . LPAREN RPAREN

    LPAREN          shift and go to state 93


state 23

    (43) block -> LBRACE statement_list . RBRACE

    RBRACE          shift and go to state 94


state 24

    (44) block -> LBRACE RBRACE .

    OBJECT          reduce using rule 44 (block -> LBRACE RBRACE .)
    STRING          reduce using rule 44 (block -> LBRACE RBRACE .)
    BOOL            reduce using rule 44 (block -> LBRACE RBRACE .)
    VOID            reduce using rule 44 (block -> LBRACE RBRACE .)
    INT             reduce using rule 44 (block -> LBRACE RBRACE .)
    LONG            reduce using rule 44 (block -> LBRACE RBRACE .)
    CHAR            reduce using rule 44 (block -> LBRACE RBRACE .)
    FLOAT           reduce using rule 44 (block -> LBRACE RBRACE .)
    DOUBLE          reduce using rule 44 (block -> LBRACE RBRACE .)
    DECIMAL         reduce using rule 44 (block -> LBRACE RBRACE .)
    $end            reduce using rule 44 (block -> LBRACE RBRACE .)
    CONST           reduce using rule 44 (block -> LBRACE RBRACE .)
    LBRACE          reduce using rule 44 (block -> LBRACE RBRACE .)
    SEMI            reduce using rule 44 (block -> LBRACE RBRACE .)
    IF              reduce using rule 44 (block -> LBRACE RBRACE .)
    SWITCH          reduce using rule 44 (block -> LBRACE RBRACE .)
    WHILE           reduce using rule 44 (block -> LBRACE RBRACE .)
    DO              reduce using rule 44 (block -> LBRACE RBRACE .)
    FOR             reduce using rule 44 (block -> LBRACE RBRACE .)
    FOREACH         reduce using rule 44 (block -> LBRACE RBRACE .)
    BREAK           reduce using rule 44 (block -> LBRACE RBRACE .)
    CONTINUE        reduce using rule 44 (block -> LBRACE RBRACE .)
    RETURN          reduce using rule 44 (block -> LBRACE RBRACE .)
    NEW             reduce using rule 44 (block -> LBRACE RBRACE .)
    PLUSPLUS        reduce using rule 44 (block -> LBRACE RBRACE .)
    MINUSMINUS      reduce using rule 44 (block -> LBRACE RBRACE .)
    TRUE            reduce using rule 44 (block -> LBRACE RBRACE .)
    FALSE           reduce using rule 44 (block -> LBRACE RBRACE .)
    NULL            reduce using rule 44 (block -> LBRACE RBRACE .)
    INTNUM          reduce using rule 44 (block -> LBRACE RBRACE .)
    HEXADECIMALNUM  reduce using rule 44 (block -> LBRACE RBRACE .)
    BINARYNUM       reduce using rule 44 (block -> LBRACE RBRACE .)
    FLOATNUM        reduce using rule 44 (block -> LBRACE RBRACE .)
    DOUBLENUM       reduce using rule 44 (block -> LBRACE RBRACE .)
    DECIMALNUM      reduce using rule 44 (block -> LBRACE RBRACE .)
    CHARLITERAL     reduce using rule 44 (block -> LBRACE RBRACE .)
    STRINGLITERAL   reduce using rule 44 (block -> LBRACE RBRACE .)
    ID              reduce using rule 44 (block -> LBRACE RBRACE .)
    THIS            reduce using rule 44 (block -> LBRACE RBRACE .)
    LPAREN          reduce using rule 44 (block -> LBRACE RBRACE .)
    TYPEOF          reduce using rule 44 (block -> LBRACE RBRACE .)
    SIZEOF          reduce using rule 44 (block -> LBRACE RBRACE .)
    RBRACE          reduce using rule 44 (block -> LBRACE RBRACE .)
    CASE            reduce using rule 44 (block -> LBRACE RBRACE .)
    DEFAULT         reduce using rule 44 (block -> LBRACE RBRACE .)
    ELSE            reduce using rule 44 (block -> LBRACE RBRACE .)


state 25

    (22) statement_list -> statement .
    (23) statement_list -> statement . statement_list
    (22) statement_list -> . statement
    (23) statement_list -> . statement statement_list
    (24) statement -> . declaration_statement
    (25) statement -> . embedded_statement
    (26) declaration_statement -> . const_declaration SEMI
    (27) declaration_statement -> . var_declaration SEMI
    (37) embedded_statement -> . block
    (38) embedded_statement -> . empty_statement
    (39) embedded_statement -> . exp_statement
    (40) embedded_statement -> . selection_statement
    (41) embedded_statement -> . iteration_statement
    (42) embedded_statement -> . jump_statement
    (28) const_declaration -> . CONST type const_declarators
    (32) var_declaration -> . type var_declarators
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE
    (45) empty_statement -> . SEMI
    (46) exp_statement -> . statement_exp SEMI
    (67) selection_statement -> . if_statement
    (68) selection_statement -> . switch_statement
    (79) iteration_statement -> . while_statement
    (80) iteration_statement -> . do_statement
    (81) iteration_statement -> . for_statement
    (82) iteration_statement -> . foreach_statement
    (99) jump_statement -> . break_statement
    (100) jump_statement -> . continue_statement
    (101) jump_statement -> . return_statement
    (3) type -> . class_type
    (4) type -> . value_type
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (69) if_statement -> . IF LPAREN exp RPAREN block
    (70) if_statement -> . IF LPAREN exp RPAREN block ELSE block
    (71) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (83) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (84) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (85) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (98) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (102) break_statement -> . BREAK SEMI
    (103) continue_statement -> . CONTINUE SEMI
    (104) return_statement -> . RETURN SEMI
    (105) return_statement -> . RETURN exp SEMI
    (5) class_type -> . OBJECT
    (6) class_type -> . STRING
    (7) value_type -> . integral_type
    (8) value_type -> . floating_point_type
    (9) value_type -> . BOOL
    (10) value_type -> . VOID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (11) integral_type -> . INT
    (12) integral_type -> . LONG
    (13) integral_type -> . CHAR
    (14) floating_point_type -> . FLOAT
    (15) floating_point_type -> . DOUBLE
    (16) floating_point_type -> . DECIMAL
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    RBRACE          reduce using rule 22 (statement_list -> statement .)
    CASE            reduce using rule 22 (statement_list -> statement .)
    DEFAULT         reduce using rule 22 (statement_list -> statement .)
    CONST           shift and go to state 37
    LBRACE          shift and go to state 21
    SEMI            shift and go to state 29
    IF              shift and go to state 56
    SWITCH          shift and go to state 58
    WHILE           shift and go to state 59
    DO              shift and go to state 60
    FOR             shift and go to state 61
    FOREACH         shift and go to state 62
    BREAK           shift and go to state 64
    CONTINUE        shift and go to state 65
    RETURN          shift and go to state 66
    OBJECT          shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 11
    VOID            shift and go to state 12
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    INT             shift and go to state 13
    LONG            shift and go to state 14
    CHAR            shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17
    DECIMAL         shift and go to state 18
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    statement                      shift and go to state 25
    statement_list                 shift and go to state 95
    declaration_statement          shift and go to state 26
    embedded_statement             shift and go to state 27
    const_declaration              shift and go to state 28
    var_declaration                shift and go to state 30
    block                          shift and go to state 31
    empty_statement                shift and go to state 32
    exp_statement                  shift and go to state 33
    selection_statement            shift and go to state 34
    iteration_statement            shift and go to state 35
    jump_statement                 shift and go to state 36
    type                           shift and go to state 38
    statement_exp                  shift and go to state 39
    if_statement                   shift and go to state 40
    switch_statement               shift and go to state 41
    while_statement                shift and go to state 42
    do_statement                   shift and go to state 43
    for_statement                  shift and go to state 44
    foreach_statement              shift and go to state 45
    break_statement                shift and go to state 46
    continue_statement             shift and go to state 47
    return_statement               shift and go to state 48
    class_type                     shift and go to state 5
    value_type                     shift and go to state 6
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    integral_type                  shift and go to state 9
    floating_point_type            shift and go to state 10
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 26

    (24) statement -> declaration_statement .

    CONST           reduce using rule 24 (statement -> declaration_statement .)
    LBRACE          reduce using rule 24 (statement -> declaration_statement .)
    SEMI            reduce using rule 24 (statement -> declaration_statement .)
    IF              reduce using rule 24 (statement -> declaration_statement .)
    SWITCH          reduce using rule 24 (statement -> declaration_statement .)
    WHILE           reduce using rule 24 (statement -> declaration_statement .)
    DO              reduce using rule 24 (statement -> declaration_statement .)
    FOR             reduce using rule 24 (statement -> declaration_statement .)
    FOREACH         reduce using rule 24 (statement -> declaration_statement .)
    BREAK           reduce using rule 24 (statement -> declaration_statement .)
    CONTINUE        reduce using rule 24 (statement -> declaration_statement .)
    RETURN          reduce using rule 24 (statement -> declaration_statement .)
    OBJECT          reduce using rule 24 (statement -> declaration_statement .)
    STRING          reduce using rule 24 (statement -> declaration_statement .)
    BOOL            reduce using rule 24 (statement -> declaration_statement .)
    VOID            reduce using rule 24 (statement -> declaration_statement .)
    NEW             reduce using rule 24 (statement -> declaration_statement .)
    PLUSPLUS        reduce using rule 24 (statement -> declaration_statement .)
    MINUSMINUS      reduce using rule 24 (statement -> declaration_statement .)
    INT             reduce using rule 24 (statement -> declaration_statement .)
    LONG            reduce using rule 24 (statement -> declaration_statement .)
    CHAR            reduce using rule 24 (statement -> declaration_statement .)
    FLOAT           reduce using rule 24 (statement -> declaration_statement .)
    DOUBLE          reduce using rule 24 (statement -> declaration_statement .)
    DECIMAL         reduce using rule 24 (statement -> declaration_statement .)
    TRUE            reduce using rule 24 (statement -> declaration_statement .)
    FALSE           reduce using rule 24 (statement -> declaration_statement .)
    NULL            reduce using rule 24 (statement -> declaration_statement .)
    INTNUM          reduce using rule 24 (statement -> declaration_statement .)
    HEXADECIMALNUM  reduce using rule 24 (statement -> declaration_statement .)
    BINARYNUM       reduce using rule 24 (statement -> declaration_statement .)
    FLOATNUM        reduce using rule 24 (statement -> declaration_statement .)
    DOUBLENUM       reduce using rule 24 (statement -> declaration_statement .)
    DECIMALNUM      reduce using rule 24 (statement -> declaration_statement .)
    CHARLITERAL     reduce using rule 24 (statement -> declaration_statement .)
    STRINGLITERAL   reduce using rule 24 (statement -> declaration_statement .)
    ID              reduce using rule 24 (statement -> declaration_statement .)
    THIS            reduce using rule 24 (statement -> declaration_statement .)
    LPAREN          reduce using rule 24 (statement -> declaration_statement .)
    TYPEOF          reduce using rule 24 (statement -> declaration_statement .)
    SIZEOF          reduce using rule 24 (statement -> declaration_statement .)
    RBRACE          reduce using rule 24 (statement -> declaration_statement .)
    CASE            reduce using rule 24 (statement -> declaration_statement .)
    DEFAULT         reduce using rule 24 (statement -> declaration_statement .)


state 27

    (25) statement -> embedded_statement .

    CONST           reduce using rule 25 (statement -> embedded_statement .)
    LBRACE          reduce using rule 25 (statement -> embedded_statement .)
    SEMI            reduce using rule 25 (statement -> embedded_statement .)
    IF              reduce using rule 25 (statement -> embedded_statement .)
    SWITCH          reduce using rule 25 (statement -> embedded_statement .)
    WHILE           reduce using rule 25 (statement -> embedded_statement .)
    DO              reduce using rule 25 (statement -> embedded_statement .)
    FOR             reduce using rule 25 (statement -> embedded_statement .)
    FOREACH         reduce using rule 25 (statement -> embedded_statement .)
    BREAK           reduce using rule 25 (statement -> embedded_statement .)
    CONTINUE        reduce using rule 25 (statement -> embedded_statement .)
    RETURN          reduce using rule 25 (statement -> embedded_statement .)
    OBJECT          reduce using rule 25 (statement -> embedded_statement .)
    STRING          reduce using rule 25 (statement -> embedded_statement .)
    BOOL            reduce using rule 25 (statement -> embedded_statement .)
    VOID            reduce using rule 25 (statement -> embedded_statement .)
    NEW             reduce using rule 25 (statement -> embedded_statement .)
    PLUSPLUS        reduce using rule 25 (statement -> embedded_statement .)
    MINUSMINUS      reduce using rule 25 (statement -> embedded_statement .)
    INT             reduce using rule 25 (statement -> embedded_statement .)
    LONG            reduce using rule 25 (statement -> embedded_statement .)
    CHAR            reduce using rule 25 (statement -> embedded_statement .)
    FLOAT           reduce using rule 25 (statement -> embedded_statement .)
    DOUBLE          reduce using rule 25 (statement -> embedded_statement .)
    DECIMAL         reduce using rule 25 (statement -> embedded_statement .)
    TRUE            reduce using rule 25 (statement -> embedded_statement .)
    FALSE           reduce using rule 25 (statement -> embedded_statement .)
    NULL            reduce using rule 25 (statement -> embedded_statement .)
    INTNUM          reduce using rule 25 (statement -> embedded_statement .)
    HEXADECIMALNUM  reduce using rule 25 (statement -> embedded_statement .)
    BINARYNUM       reduce using rule 25 (statement -> embedded_statement .)
    FLOATNUM        reduce using rule 25 (statement -> embedded_statement .)
    DOUBLENUM       reduce using rule 25 (statement -> embedded_statement .)
    DECIMALNUM      reduce using rule 25 (statement -> embedded_statement .)
    CHARLITERAL     reduce using rule 25 (statement -> embedded_statement .)
    STRINGLITERAL   reduce using rule 25 (statement -> embedded_statement .)
    ID              reduce using rule 25 (statement -> embedded_statement .)
    THIS            reduce using rule 25 (statement -> embedded_statement .)
    LPAREN          reduce using rule 25 (statement -> embedded_statement .)
    TYPEOF          reduce using rule 25 (statement -> embedded_statement .)
    SIZEOF          reduce using rule 25 (statement -> embedded_statement .)
    RBRACE          reduce using rule 25 (statement -> embedded_statement .)
    CASE            reduce using rule 25 (statement -> embedded_statement .)
    DEFAULT         reduce using rule 25 (statement -> embedded_statement .)


state 28

    (26) declaration_statement -> const_declaration . SEMI

    SEMI            shift and go to state 96


state 29

    (45) empty_statement -> SEMI .

    CONST           reduce using rule 45 (empty_statement -> SEMI .)
    LBRACE          reduce using rule 45 (empty_statement -> SEMI .)
    SEMI            reduce using rule 45 (empty_statement -> SEMI .)
    IF              reduce using rule 45 (empty_statement -> SEMI .)
    SWITCH          reduce using rule 45 (empty_statement -> SEMI .)
    WHILE           reduce using rule 45 (empty_statement -> SEMI .)
    DO              reduce using rule 45 (empty_statement -> SEMI .)
    FOR             reduce using rule 45 (empty_statement -> SEMI .)
    FOREACH         reduce using rule 45 (empty_statement -> SEMI .)
    BREAK           reduce using rule 45 (empty_statement -> SEMI .)
    CONTINUE        reduce using rule 45 (empty_statement -> SEMI .)
    RETURN          reduce using rule 45 (empty_statement -> SEMI .)
    OBJECT          reduce using rule 45 (empty_statement -> SEMI .)
    STRING          reduce using rule 45 (empty_statement -> SEMI .)
    BOOL            reduce using rule 45 (empty_statement -> SEMI .)
    VOID            reduce using rule 45 (empty_statement -> SEMI .)
    NEW             reduce using rule 45 (empty_statement -> SEMI .)
    PLUSPLUS        reduce using rule 45 (empty_statement -> SEMI .)
    MINUSMINUS      reduce using rule 45 (empty_statement -> SEMI .)
    INT             reduce using rule 45 (empty_statement -> SEMI .)
    LONG            reduce using rule 45 (empty_statement -> SEMI .)
    CHAR            reduce using rule 45 (empty_statement -> SEMI .)
    FLOAT           reduce using rule 45 (empty_statement -> SEMI .)
    DOUBLE          reduce using rule 45 (empty_statement -> SEMI .)
    DECIMAL         reduce using rule 45 (empty_statement -> SEMI .)
    TRUE            reduce using rule 45 (empty_statement -> SEMI .)
    FALSE           reduce using rule 45 (empty_statement -> SEMI .)
    NULL            reduce using rule 45 (empty_statement -> SEMI .)
    INTNUM          reduce using rule 45 (empty_statement -> SEMI .)
    HEXADECIMALNUM  reduce using rule 45 (empty_statement -> SEMI .)
    BINARYNUM       reduce using rule 45 (empty_statement -> SEMI .)
    FLOATNUM        reduce using rule 45 (empty_statement -> SEMI .)
    DOUBLENUM       reduce using rule 45 (empty_statement -> SEMI .)
    DECIMALNUM      reduce using rule 45 (empty_statement -> SEMI .)
    CHARLITERAL     reduce using rule 45 (empty_statement -> SEMI .)
    STRINGLITERAL   reduce using rule 45 (empty_statement -> SEMI .)
    ID              reduce using rule 45 (empty_statement -> SEMI .)
    THIS            reduce using rule 45 (empty_statement -> SEMI .)
    LPAREN          reduce using rule 45 (empty_statement -> SEMI .)
    TYPEOF          reduce using rule 45 (empty_statement -> SEMI .)
    SIZEOF          reduce using rule 45 (empty_statement -> SEMI .)
    RBRACE          reduce using rule 45 (empty_statement -> SEMI .)
    CASE            reduce using rule 45 (empty_statement -> SEMI .)
    DEFAULT         reduce using rule 45 (empty_statement -> SEMI .)


state 30

    (27) declaration_statement -> var_declaration . SEMI

    SEMI            shift and go to state 97


state 31

    (37) embedded_statement -> block .

    CONST           reduce using rule 37 (embedded_statement -> block .)
    LBRACE          reduce using rule 37 (embedded_statement -> block .)
    SEMI            reduce using rule 37 (embedded_statement -> block .)
    IF              reduce using rule 37 (embedded_statement -> block .)
    SWITCH          reduce using rule 37 (embedded_statement -> block .)
    WHILE           reduce using rule 37 (embedded_statement -> block .)
    DO              reduce using rule 37 (embedded_statement -> block .)
    FOR             reduce using rule 37 (embedded_statement -> block .)
    FOREACH         reduce using rule 37 (embedded_statement -> block .)
    BREAK           reduce using rule 37 (embedded_statement -> block .)
    CONTINUE        reduce using rule 37 (embedded_statement -> block .)
    RETURN          reduce using rule 37 (embedded_statement -> block .)
    OBJECT          reduce using rule 37 (embedded_statement -> block .)
    STRING          reduce using rule 37 (embedded_statement -> block .)
    BOOL            reduce using rule 37 (embedded_statement -> block .)
    VOID            reduce using rule 37 (embedded_statement -> block .)
    NEW             reduce using rule 37 (embedded_statement -> block .)
    PLUSPLUS        reduce using rule 37 (embedded_statement -> block .)
    MINUSMINUS      reduce using rule 37 (embedded_statement -> block .)
    INT             reduce using rule 37 (embedded_statement -> block .)
    LONG            reduce using rule 37 (embedded_statement -> block .)
    CHAR            reduce using rule 37 (embedded_statement -> block .)
    FLOAT           reduce using rule 37 (embedded_statement -> block .)
    DOUBLE          reduce using rule 37 (embedded_statement -> block .)
    DECIMAL         reduce using rule 37 (embedded_statement -> block .)
    TRUE            reduce using rule 37 (embedded_statement -> block .)
    FALSE           reduce using rule 37 (embedded_statement -> block .)
    NULL            reduce using rule 37 (embedded_statement -> block .)
    INTNUM          reduce using rule 37 (embedded_statement -> block .)
    HEXADECIMALNUM  reduce using rule 37 (embedded_statement -> block .)
    BINARYNUM       reduce using rule 37 (embedded_statement -> block .)
    FLOATNUM        reduce using rule 37 (embedded_statement -> block .)
    DOUBLENUM       reduce using rule 37 (embedded_statement -> block .)
    DECIMALNUM      reduce using rule 37 (embedded_statement -> block .)
    CHARLITERAL     reduce using rule 37 (embedded_statement -> block .)
    STRINGLITERAL   reduce using rule 37 (embedded_statement -> block .)
    ID              reduce using rule 37 (embedded_statement -> block .)
    THIS            reduce using rule 37 (embedded_statement -> block .)
    LPAREN          reduce using rule 37 (embedded_statement -> block .)
    TYPEOF          reduce using rule 37 (embedded_statement -> block .)
    SIZEOF          reduce using rule 37 (embedded_statement -> block .)
    RBRACE          reduce using rule 37 (embedded_statement -> block .)
    CASE            reduce using rule 37 (embedded_statement -> block .)
    DEFAULT         reduce using rule 37 (embedded_statement -> block .)


state 32

    (38) embedded_statement -> empty_statement .

    CONST           reduce using rule 38 (embedded_statement -> empty_statement .)
    LBRACE          reduce using rule 38 (embedded_statement -> empty_statement .)
    SEMI            reduce using rule 38 (embedded_statement -> empty_statement .)
    IF              reduce using rule 38 (embedded_statement -> empty_statement .)
    SWITCH          reduce using rule 38 (embedded_statement -> empty_statement .)
    WHILE           reduce using rule 38 (embedded_statement -> empty_statement .)
    DO              reduce using rule 38 (embedded_statement -> empty_statement .)
    FOR             reduce using rule 38 (embedded_statement -> empty_statement .)
    FOREACH         reduce using rule 38 (embedded_statement -> empty_statement .)
    BREAK           reduce using rule 38 (embedded_statement -> empty_statement .)
    CONTINUE        reduce using rule 38 (embedded_statement -> empty_statement .)
    RETURN          reduce using rule 38 (embedded_statement -> empty_statement .)
    OBJECT          reduce using rule 38 (embedded_statement -> empty_statement .)
    STRING          reduce using rule 38 (embedded_statement -> empty_statement .)
    BOOL            reduce using rule 38 (embedded_statement -> empty_statement .)
    VOID            reduce using rule 38 (embedded_statement -> empty_statement .)
    NEW             reduce using rule 38 (embedded_statement -> empty_statement .)
    PLUSPLUS        reduce using rule 38 (embedded_statement -> empty_statement .)
    MINUSMINUS      reduce using rule 38 (embedded_statement -> empty_statement .)
    INT             reduce using rule 38 (embedded_statement -> empty_statement .)
    LONG            reduce using rule 38 (embedded_statement -> empty_statement .)
    CHAR            reduce using rule 38 (embedded_statement -> empty_statement .)
    FLOAT           reduce using rule 38 (embedded_statement -> empty_statement .)
    DOUBLE          reduce using rule 38 (embedded_statement -> empty_statement .)
    DECIMAL         reduce using rule 38 (embedded_statement -> empty_statement .)
    TRUE            reduce using rule 38 (embedded_statement -> empty_statement .)
    FALSE           reduce using rule 38 (embedded_statement -> empty_statement .)
    NULL            reduce using rule 38 (embedded_statement -> empty_statement .)
    INTNUM          reduce using rule 38 (embedded_statement -> empty_statement .)
    HEXADECIMALNUM  reduce using rule 38 (embedded_statement -> empty_statement .)
    BINARYNUM       reduce using rule 38 (embedded_statement -> empty_statement .)
    FLOATNUM        reduce using rule 38 (embedded_statement -> empty_statement .)
    DOUBLENUM       reduce using rule 38 (embedded_statement -> empty_statement .)
    DECIMALNUM      reduce using rule 38 (embedded_statement -> empty_statement .)
    CHARLITERAL     reduce using rule 38 (embedded_statement -> empty_statement .)
    STRINGLITERAL   reduce using rule 38 (embedded_statement -> empty_statement .)
    ID              reduce using rule 38 (embedded_statement -> empty_statement .)
    THIS            reduce using rule 38 (embedded_statement -> empty_statement .)
    LPAREN          reduce using rule 38 (embedded_statement -> empty_statement .)
    TYPEOF          reduce using rule 38 (embedded_statement -> empty_statement .)
    SIZEOF          reduce using rule 38 (embedded_statement -> empty_statement .)
    RBRACE          reduce using rule 38 (embedded_statement -> empty_statement .)
    CASE            reduce using rule 38 (embedded_statement -> empty_statement .)
    DEFAULT         reduce using rule 38 (embedded_statement -> empty_statement .)


state 33

    (39) embedded_statement -> exp_statement .

    CONST           reduce using rule 39 (embedded_statement -> exp_statement .)
    LBRACE          reduce using rule 39 (embedded_statement -> exp_statement .)
    SEMI            reduce using rule 39 (embedded_statement -> exp_statement .)
    IF              reduce using rule 39 (embedded_statement -> exp_statement .)
    SWITCH          reduce using rule 39 (embedded_statement -> exp_statement .)
    WHILE           reduce using rule 39 (embedded_statement -> exp_statement .)
    DO              reduce using rule 39 (embedded_statement -> exp_statement .)
    FOR             reduce using rule 39 (embedded_statement -> exp_statement .)
    FOREACH         reduce using rule 39 (embedded_statement -> exp_statement .)
    BREAK           reduce using rule 39 (embedded_statement -> exp_statement .)
    CONTINUE        reduce using rule 39 (embedded_statement -> exp_statement .)
    RETURN          reduce using rule 39 (embedded_statement -> exp_statement .)
    OBJECT          reduce using rule 39 (embedded_statement -> exp_statement .)
    STRING          reduce using rule 39 (embedded_statement -> exp_statement .)
    BOOL            reduce using rule 39 (embedded_statement -> exp_statement .)
    VOID            reduce using rule 39 (embedded_statement -> exp_statement .)
    NEW             reduce using rule 39 (embedded_statement -> exp_statement .)
    PLUSPLUS        reduce using rule 39 (embedded_statement -> exp_statement .)
    MINUSMINUS      reduce using rule 39 (embedded_statement -> exp_statement .)
    INT             reduce using rule 39 (embedded_statement -> exp_statement .)
    LONG            reduce using rule 39 (embedded_statement -> exp_statement .)
    CHAR            reduce using rule 39 (embedded_statement -> exp_statement .)
    FLOAT           reduce using rule 39 (embedded_statement -> exp_statement .)
    DOUBLE          reduce using rule 39 (embedded_statement -> exp_statement .)
    DECIMAL         reduce using rule 39 (embedded_statement -> exp_statement .)
    TRUE            reduce using rule 39 (embedded_statement -> exp_statement .)
    FALSE           reduce using rule 39 (embedded_statement -> exp_statement .)
    NULL            reduce using rule 39 (embedded_statement -> exp_statement .)
    INTNUM          reduce using rule 39 (embedded_statement -> exp_statement .)
    HEXADECIMALNUM  reduce using rule 39 (embedded_statement -> exp_statement .)
    BINARYNUM       reduce using rule 39 (embedded_statement -> exp_statement .)
    FLOATNUM        reduce using rule 39 (embedded_statement -> exp_statement .)
    DOUBLENUM       reduce using rule 39 (embedded_statement -> exp_statement .)
    DECIMALNUM      reduce using rule 39 (embedded_statement -> exp_statement .)
    CHARLITERAL     reduce using rule 39 (embedded_statement -> exp_statement .)
    STRINGLITERAL   reduce using rule 39 (embedded_statement -> exp_statement .)
    ID              reduce using rule 39 (embedded_statement -> exp_statement .)
    THIS            reduce using rule 39 (embedded_statement -> exp_statement .)
    LPAREN          reduce using rule 39 (embedded_statement -> exp_statement .)
    TYPEOF          reduce using rule 39 (embedded_statement -> exp_statement .)
    SIZEOF          reduce using rule 39 (embedded_statement -> exp_statement .)
    RBRACE          reduce using rule 39 (embedded_statement -> exp_statement .)
    CASE            reduce using rule 39 (embedded_statement -> exp_statement .)
    DEFAULT         reduce using rule 39 (embedded_statement -> exp_statement .)


state 34

    (40) embedded_statement -> selection_statement .

    CONST           reduce using rule 40 (embedded_statement -> selection_statement .)
    LBRACE          reduce using rule 40 (embedded_statement -> selection_statement .)
    SEMI            reduce using rule 40 (embedded_statement -> selection_statement .)
    IF              reduce using rule 40 (embedded_statement -> selection_statement .)
    SWITCH          reduce using rule 40 (embedded_statement -> selection_statement .)
    WHILE           reduce using rule 40 (embedded_statement -> selection_statement .)
    DO              reduce using rule 40 (embedded_statement -> selection_statement .)
    FOR             reduce using rule 40 (embedded_statement -> selection_statement .)
    FOREACH         reduce using rule 40 (embedded_statement -> selection_statement .)
    BREAK           reduce using rule 40 (embedded_statement -> selection_statement .)
    CONTINUE        reduce using rule 40 (embedded_statement -> selection_statement .)
    RETURN          reduce using rule 40 (embedded_statement -> selection_statement .)
    OBJECT          reduce using rule 40 (embedded_statement -> selection_statement .)
    STRING          reduce using rule 40 (embedded_statement -> selection_statement .)
    BOOL            reduce using rule 40 (embedded_statement -> selection_statement .)
    VOID            reduce using rule 40 (embedded_statement -> selection_statement .)
    NEW             reduce using rule 40 (embedded_statement -> selection_statement .)
    PLUSPLUS        reduce using rule 40 (embedded_statement -> selection_statement .)
    MINUSMINUS      reduce using rule 40 (embedded_statement -> selection_statement .)
    INT             reduce using rule 40 (embedded_statement -> selection_statement .)
    LONG            reduce using rule 40 (embedded_statement -> selection_statement .)
    CHAR            reduce using rule 40 (embedded_statement -> selection_statement .)
    FLOAT           reduce using rule 40 (embedded_statement -> selection_statement .)
    DOUBLE          reduce using rule 40 (embedded_statement -> selection_statement .)
    DECIMAL         reduce using rule 40 (embedded_statement -> selection_statement .)
    TRUE            reduce using rule 40 (embedded_statement -> selection_statement .)
    FALSE           reduce using rule 40 (embedded_statement -> selection_statement .)
    NULL            reduce using rule 40 (embedded_statement -> selection_statement .)
    INTNUM          reduce using rule 40 (embedded_statement -> selection_statement .)
    HEXADECIMALNUM  reduce using rule 40 (embedded_statement -> selection_statement .)
    BINARYNUM       reduce using rule 40 (embedded_statement -> selection_statement .)
    FLOATNUM        reduce using rule 40 (embedded_statement -> selection_statement .)
    DOUBLENUM       reduce using rule 40 (embedded_statement -> selection_statement .)
    DECIMALNUM      reduce using rule 40 (embedded_statement -> selection_statement .)
    CHARLITERAL     reduce using rule 40 (embedded_statement -> selection_statement .)
    STRINGLITERAL   reduce using rule 40 (embedded_statement -> selection_statement .)
    ID              reduce using rule 40 (embedded_statement -> selection_statement .)
    THIS            reduce using rule 40 (embedded_statement -> selection_statement .)
    LPAREN          reduce using rule 40 (embedded_statement -> selection_statement .)
    TYPEOF          reduce using rule 40 (embedded_statement -> selection_statement .)
    SIZEOF          reduce using rule 40 (embedded_statement -> selection_statement .)
    RBRACE          reduce using rule 40 (embedded_statement -> selection_statement .)
    CASE            reduce using rule 40 (embedded_statement -> selection_statement .)
    DEFAULT         reduce using rule 40 (embedded_statement -> selection_statement .)


state 35

    (41) embedded_statement -> iteration_statement .

    CONST           reduce using rule 41 (embedded_statement -> iteration_statement .)
    LBRACE          reduce using rule 41 (embedded_statement -> iteration_statement .)
    SEMI            reduce using rule 41 (embedded_statement -> iteration_statement .)
    IF              reduce using rule 41 (embedded_statement -> iteration_statement .)
    SWITCH          reduce using rule 41 (embedded_statement -> iteration_statement .)
    WHILE           reduce using rule 41 (embedded_statement -> iteration_statement .)
    DO              reduce using rule 41 (embedded_statement -> iteration_statement .)
    FOR             reduce using rule 41 (embedded_statement -> iteration_statement .)
    FOREACH         reduce using rule 41 (embedded_statement -> iteration_statement .)
    BREAK           reduce using rule 41 (embedded_statement -> iteration_statement .)
    CONTINUE        reduce using rule 41 (embedded_statement -> iteration_statement .)
    RETURN          reduce using rule 41 (embedded_statement -> iteration_statement .)
    OBJECT          reduce using rule 41 (embedded_statement -> iteration_statement .)
    STRING          reduce using rule 41 (embedded_statement -> iteration_statement .)
    BOOL            reduce using rule 41 (embedded_statement -> iteration_statement .)
    VOID            reduce using rule 41 (embedded_statement -> iteration_statement .)
    NEW             reduce using rule 41 (embedded_statement -> iteration_statement .)
    PLUSPLUS        reduce using rule 41 (embedded_statement -> iteration_statement .)
    MINUSMINUS      reduce using rule 41 (embedded_statement -> iteration_statement .)
    INT             reduce using rule 41 (embedded_statement -> iteration_statement .)
    LONG            reduce using rule 41 (embedded_statement -> iteration_statement .)
    CHAR            reduce using rule 41 (embedded_statement -> iteration_statement .)
    FLOAT           reduce using rule 41 (embedded_statement -> iteration_statement .)
    DOUBLE          reduce using rule 41 (embedded_statement -> iteration_statement .)
    DECIMAL         reduce using rule 41 (embedded_statement -> iteration_statement .)
    TRUE            reduce using rule 41 (embedded_statement -> iteration_statement .)
    FALSE           reduce using rule 41 (embedded_statement -> iteration_statement .)
    NULL            reduce using rule 41 (embedded_statement -> iteration_statement .)
    INTNUM          reduce using rule 41 (embedded_statement -> iteration_statement .)
    HEXADECIMALNUM  reduce using rule 41 (embedded_statement -> iteration_statement .)
    BINARYNUM       reduce using rule 41 (embedded_statement -> iteration_statement .)
    FLOATNUM        reduce using rule 41 (embedded_statement -> iteration_statement .)
    DOUBLENUM       reduce using rule 41 (embedded_statement -> iteration_statement .)
    DECIMALNUM      reduce using rule 41 (embedded_statement -> iteration_statement .)
    CHARLITERAL     reduce using rule 41 (embedded_statement -> iteration_statement .)
    STRINGLITERAL   reduce using rule 41 (embedded_statement -> iteration_statement .)
    ID              reduce using rule 41 (embedded_statement -> iteration_statement .)
    THIS            reduce using rule 41 (embedded_statement -> iteration_statement .)
    LPAREN          reduce using rule 41 (embedded_statement -> iteration_statement .)
    TYPEOF          reduce using rule 41 (embedded_statement -> iteration_statement .)
    SIZEOF          reduce using rule 41 (embedded_statement -> iteration_statement .)
    RBRACE          reduce using rule 41 (embedded_statement -> iteration_statement .)
    CASE            reduce using rule 41 (embedded_statement -> iteration_statement .)
    DEFAULT         reduce using rule 41 (embedded_statement -> iteration_statement .)


state 36

    (42) embedded_statement -> jump_statement .

    CONST           reduce using rule 42 (embedded_statement -> jump_statement .)
    LBRACE          reduce using rule 42 (embedded_statement -> jump_statement .)
    SEMI            reduce using rule 42 (embedded_statement -> jump_statement .)
    IF              reduce using rule 42 (embedded_statement -> jump_statement .)
    SWITCH          reduce using rule 42 (embedded_statement -> jump_statement .)
    WHILE           reduce using rule 42 (embedded_statement -> jump_statement .)
    DO              reduce using rule 42 (embedded_statement -> jump_statement .)
    FOR             reduce using rule 42 (embedded_statement -> jump_statement .)
    FOREACH         reduce using rule 42 (embedded_statement -> jump_statement .)
    BREAK           reduce using rule 42 (embedded_statement -> jump_statement .)
    CONTINUE        reduce using rule 42 (embedded_statement -> jump_statement .)
    RETURN          reduce using rule 42 (embedded_statement -> jump_statement .)
    OBJECT          reduce using rule 42 (embedded_statement -> jump_statement .)
    STRING          reduce using rule 42 (embedded_statement -> jump_statement .)
    BOOL            reduce using rule 42 (embedded_statement -> jump_statement .)
    VOID            reduce using rule 42 (embedded_statement -> jump_statement .)
    NEW             reduce using rule 42 (embedded_statement -> jump_statement .)
    PLUSPLUS        reduce using rule 42 (embedded_statement -> jump_statement .)
    MINUSMINUS      reduce using rule 42 (embedded_statement -> jump_statement .)
    INT             reduce using rule 42 (embedded_statement -> jump_statement .)
    LONG            reduce using rule 42 (embedded_statement -> jump_statement .)
    CHAR            reduce using rule 42 (embedded_statement -> jump_statement .)
    FLOAT           reduce using rule 42 (embedded_statement -> jump_statement .)
    DOUBLE          reduce using rule 42 (embedded_statement -> jump_statement .)
    DECIMAL         reduce using rule 42 (embedded_statement -> jump_statement .)
    TRUE            reduce using rule 42 (embedded_statement -> jump_statement .)
    FALSE           reduce using rule 42 (embedded_statement -> jump_statement .)
    NULL            reduce using rule 42 (embedded_statement -> jump_statement .)
    INTNUM          reduce using rule 42 (embedded_statement -> jump_statement .)
    HEXADECIMALNUM  reduce using rule 42 (embedded_statement -> jump_statement .)
    BINARYNUM       reduce using rule 42 (embedded_statement -> jump_statement .)
    FLOATNUM        reduce using rule 42 (embedded_statement -> jump_statement .)
    DOUBLENUM       reduce using rule 42 (embedded_statement -> jump_statement .)
    DECIMALNUM      reduce using rule 42 (embedded_statement -> jump_statement .)
    CHARLITERAL     reduce using rule 42 (embedded_statement -> jump_statement .)
    STRINGLITERAL   reduce using rule 42 (embedded_statement -> jump_statement .)
    ID              reduce using rule 42 (embedded_statement -> jump_statement .)
    THIS            reduce using rule 42 (embedded_statement -> jump_statement .)
    LPAREN          reduce using rule 42 (embedded_statement -> jump_statement .)
    TYPEOF          reduce using rule 42 (embedded_statement -> jump_statement .)
    SIZEOF          reduce using rule 42 (embedded_statement -> jump_statement .)
    RBRACE          reduce using rule 42 (embedded_statement -> jump_statement .)
    CASE            reduce using rule 42 (embedded_statement -> jump_statement .)
    DEFAULT         reduce using rule 42 (embedded_statement -> jump_statement .)


state 37

    (28) const_declaration -> CONST . type const_declarators
    (3) type -> . class_type
    (4) type -> . value_type
    (5) class_type -> . OBJECT
    (6) class_type -> . STRING
    (7) value_type -> . integral_type
    (8) value_type -> . floating_point_type
    (9) value_type -> . BOOL
    (10) value_type -> . VOID
    (11) integral_type -> . INT
    (12) integral_type -> . LONG
    (13) integral_type -> . CHAR
    (14) floating_point_type -> . FLOAT
    (15) floating_point_type -> . DOUBLE
    (16) floating_point_type -> . DECIMAL

    OBJECT          shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 11
    VOID            shift and go to state 12
    INT             shift and go to state 13
    LONG            shift and go to state 14
    CHAR            shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17
    DECIMAL         shift and go to state 18

    type                           shift and go to state 98
    class_type                     shift and go to state 5
    value_type                     shift and go to state 6
    integral_type                  shift and go to state 9
    floating_point_type            shift and go to state 10

state 38

    (32) var_declaration -> type . var_declarators
    (33) var_declarators -> . var_declarator
    (34) var_declarators -> . var_declarator COMMA var_declarators
    (35) var_declarator -> . ID
    (36) var_declarator -> . ID EQUAL exp

    ID              shift and go to state 101

    var_declarators                shift and go to state 99
    var_declarator                 shift and go to state 100

state 39

    (46) exp_statement -> statement_exp . SEMI

    SEMI            shift and go to state 102


state 40

    (67) selection_statement -> if_statement .

    CONST           reduce using rule 67 (selection_statement -> if_statement .)
    LBRACE          reduce using rule 67 (selection_statement -> if_statement .)
    SEMI            reduce using rule 67 (selection_statement -> if_statement .)
    IF              reduce using rule 67 (selection_statement -> if_statement .)
    SWITCH          reduce using rule 67 (selection_statement -> if_statement .)
    WHILE           reduce using rule 67 (selection_statement -> if_statement .)
    DO              reduce using rule 67 (selection_statement -> if_statement .)
    FOR             reduce using rule 67 (selection_statement -> if_statement .)
    FOREACH         reduce using rule 67 (selection_statement -> if_statement .)
    BREAK           reduce using rule 67 (selection_statement -> if_statement .)
    CONTINUE        reduce using rule 67 (selection_statement -> if_statement .)
    RETURN          reduce using rule 67 (selection_statement -> if_statement .)
    OBJECT          reduce using rule 67 (selection_statement -> if_statement .)
    STRING          reduce using rule 67 (selection_statement -> if_statement .)
    BOOL            reduce using rule 67 (selection_statement -> if_statement .)
    VOID            reduce using rule 67 (selection_statement -> if_statement .)
    NEW             reduce using rule 67 (selection_statement -> if_statement .)
    PLUSPLUS        reduce using rule 67 (selection_statement -> if_statement .)
    MINUSMINUS      reduce using rule 67 (selection_statement -> if_statement .)
    INT             reduce using rule 67 (selection_statement -> if_statement .)
    LONG            reduce using rule 67 (selection_statement -> if_statement .)
    CHAR            reduce using rule 67 (selection_statement -> if_statement .)
    FLOAT           reduce using rule 67 (selection_statement -> if_statement .)
    DOUBLE          reduce using rule 67 (selection_statement -> if_statement .)
    DECIMAL         reduce using rule 67 (selection_statement -> if_statement .)
    TRUE            reduce using rule 67 (selection_statement -> if_statement .)
    FALSE           reduce using rule 67 (selection_statement -> if_statement .)
    NULL            reduce using rule 67 (selection_statement -> if_statement .)
    INTNUM          reduce using rule 67 (selection_statement -> if_statement .)
    HEXADECIMALNUM  reduce using rule 67 (selection_statement -> if_statement .)
    BINARYNUM       reduce using rule 67 (selection_statement -> if_statement .)
    FLOATNUM        reduce using rule 67 (selection_statement -> if_statement .)
    DOUBLENUM       reduce using rule 67 (selection_statement -> if_statement .)
    DECIMALNUM      reduce using rule 67 (selection_statement -> if_statement .)
    CHARLITERAL     reduce using rule 67 (selection_statement -> if_statement .)
    STRINGLITERAL   reduce using rule 67 (selection_statement -> if_statement .)
    ID              reduce using rule 67 (selection_statement -> if_statement .)
    THIS            reduce using rule 67 (selection_statement -> if_statement .)
    LPAREN          reduce using rule 67 (selection_statement -> if_statement .)
    TYPEOF          reduce using rule 67 (selection_statement -> if_statement .)
    SIZEOF          reduce using rule 67 (selection_statement -> if_statement .)
    RBRACE          reduce using rule 67 (selection_statement -> if_statement .)
    CASE            reduce using rule 67 (selection_statement -> if_statement .)
    DEFAULT         reduce using rule 67 (selection_statement -> if_statement .)


state 41

    (68) selection_statement -> switch_statement .

    CONST           reduce using rule 68 (selection_statement -> switch_statement .)
    LBRACE          reduce using rule 68 (selection_statement -> switch_statement .)
    SEMI            reduce using rule 68 (selection_statement -> switch_statement .)
    IF              reduce using rule 68 (selection_statement -> switch_statement .)
    SWITCH          reduce using rule 68 (selection_statement -> switch_statement .)
    WHILE           reduce using rule 68 (selection_statement -> switch_statement .)
    DO              reduce using rule 68 (selection_statement -> switch_statement .)
    FOR             reduce using rule 68 (selection_statement -> switch_statement .)
    FOREACH         reduce using rule 68 (selection_statement -> switch_statement .)
    BREAK           reduce using rule 68 (selection_statement -> switch_statement .)
    CONTINUE        reduce using rule 68 (selection_statement -> switch_statement .)
    RETURN          reduce using rule 68 (selection_statement -> switch_statement .)
    OBJECT          reduce using rule 68 (selection_statement -> switch_statement .)
    STRING          reduce using rule 68 (selection_statement -> switch_statement .)
    BOOL            reduce using rule 68 (selection_statement -> switch_statement .)
    VOID            reduce using rule 68 (selection_statement -> switch_statement .)
    NEW             reduce using rule 68 (selection_statement -> switch_statement .)
    PLUSPLUS        reduce using rule 68 (selection_statement -> switch_statement .)
    MINUSMINUS      reduce using rule 68 (selection_statement -> switch_statement .)
    INT             reduce using rule 68 (selection_statement -> switch_statement .)
    LONG            reduce using rule 68 (selection_statement -> switch_statement .)
    CHAR            reduce using rule 68 (selection_statement -> switch_statement .)
    FLOAT           reduce using rule 68 (selection_statement -> switch_statement .)
    DOUBLE          reduce using rule 68 (selection_statement -> switch_statement .)
    DECIMAL         reduce using rule 68 (selection_statement -> switch_statement .)
    TRUE            reduce using rule 68 (selection_statement -> switch_statement .)
    FALSE           reduce using rule 68 (selection_statement -> switch_statement .)
    NULL            reduce using rule 68 (selection_statement -> switch_statement .)
    INTNUM          reduce using rule 68 (selection_statement -> switch_statement .)
    HEXADECIMALNUM  reduce using rule 68 (selection_statement -> switch_statement .)
    BINARYNUM       reduce using rule 68 (selection_statement -> switch_statement .)
    FLOATNUM        reduce using rule 68 (selection_statement -> switch_statement .)
    DOUBLENUM       reduce using rule 68 (selection_statement -> switch_statement .)
    DECIMALNUM      reduce using rule 68 (selection_statement -> switch_statement .)
    CHARLITERAL     reduce using rule 68 (selection_statement -> switch_statement .)
    STRINGLITERAL   reduce using rule 68 (selection_statement -> switch_statement .)
    ID              reduce using rule 68 (selection_statement -> switch_statement .)
    THIS            reduce using rule 68 (selection_statement -> switch_statement .)
    LPAREN          reduce using rule 68 (selection_statement -> switch_statement .)
    TYPEOF          reduce using rule 68 (selection_statement -> switch_statement .)
    SIZEOF          reduce using rule 68 (selection_statement -> switch_statement .)
    RBRACE          reduce using rule 68 (selection_statement -> switch_statement .)
    CASE            reduce using rule 68 (selection_statement -> switch_statement .)
    DEFAULT         reduce using rule 68 (selection_statement -> switch_statement .)


state 42

    (79) iteration_statement -> while_statement .

    CONST           reduce using rule 79 (iteration_statement -> while_statement .)
    LBRACE          reduce using rule 79 (iteration_statement -> while_statement .)
    SEMI            reduce using rule 79 (iteration_statement -> while_statement .)
    IF              reduce using rule 79 (iteration_statement -> while_statement .)
    SWITCH          reduce using rule 79 (iteration_statement -> while_statement .)
    WHILE           reduce using rule 79 (iteration_statement -> while_statement .)
    DO              reduce using rule 79 (iteration_statement -> while_statement .)
    FOR             reduce using rule 79 (iteration_statement -> while_statement .)
    FOREACH         reduce using rule 79 (iteration_statement -> while_statement .)
    BREAK           reduce using rule 79 (iteration_statement -> while_statement .)
    CONTINUE        reduce using rule 79 (iteration_statement -> while_statement .)
    RETURN          reduce using rule 79 (iteration_statement -> while_statement .)
    OBJECT          reduce using rule 79 (iteration_statement -> while_statement .)
    STRING          reduce using rule 79 (iteration_statement -> while_statement .)
    BOOL            reduce using rule 79 (iteration_statement -> while_statement .)
    VOID            reduce using rule 79 (iteration_statement -> while_statement .)
    NEW             reduce using rule 79 (iteration_statement -> while_statement .)
    PLUSPLUS        reduce using rule 79 (iteration_statement -> while_statement .)
    MINUSMINUS      reduce using rule 79 (iteration_statement -> while_statement .)
    INT             reduce using rule 79 (iteration_statement -> while_statement .)
    LONG            reduce using rule 79 (iteration_statement -> while_statement .)
    CHAR            reduce using rule 79 (iteration_statement -> while_statement .)
    FLOAT           reduce using rule 79 (iteration_statement -> while_statement .)
    DOUBLE          reduce using rule 79 (iteration_statement -> while_statement .)
    DECIMAL         reduce using rule 79 (iteration_statement -> while_statement .)
    TRUE            reduce using rule 79 (iteration_statement -> while_statement .)
    FALSE           reduce using rule 79 (iteration_statement -> while_statement .)
    NULL            reduce using rule 79 (iteration_statement -> while_statement .)
    INTNUM          reduce using rule 79 (iteration_statement -> while_statement .)
    HEXADECIMALNUM  reduce using rule 79 (iteration_statement -> while_statement .)
    BINARYNUM       reduce using rule 79 (iteration_statement -> while_statement .)
    FLOATNUM        reduce using rule 79 (iteration_statement -> while_statement .)
    DOUBLENUM       reduce using rule 79 (iteration_statement -> while_statement .)
    DECIMALNUM      reduce using rule 79 (iteration_statement -> while_statement .)
    CHARLITERAL     reduce using rule 79 (iteration_statement -> while_statement .)
    STRINGLITERAL   reduce using rule 79 (iteration_statement -> while_statement .)
    ID              reduce using rule 79 (iteration_statement -> while_statement .)
    THIS            reduce using rule 79 (iteration_statement -> while_statement .)
    LPAREN          reduce using rule 79 (iteration_statement -> while_statement .)
    TYPEOF          reduce using rule 79 (iteration_statement -> while_statement .)
    SIZEOF          reduce using rule 79 (iteration_statement -> while_statement .)
    RBRACE          reduce using rule 79 (iteration_statement -> while_statement .)
    CASE            reduce using rule 79 (iteration_statement -> while_statement .)
    DEFAULT         reduce using rule 79 (iteration_statement -> while_statement .)


state 43

    (80) iteration_statement -> do_statement .

    CONST           reduce using rule 80 (iteration_statement -> do_statement .)
    LBRACE          reduce using rule 80 (iteration_statement -> do_statement .)
    SEMI            reduce using rule 80 (iteration_statement -> do_statement .)
    IF              reduce using rule 80 (iteration_statement -> do_statement .)
    SWITCH          reduce using rule 80 (iteration_statement -> do_statement .)
    WHILE           reduce using rule 80 (iteration_statement -> do_statement .)
    DO              reduce using rule 80 (iteration_statement -> do_statement .)
    FOR             reduce using rule 80 (iteration_statement -> do_statement .)
    FOREACH         reduce using rule 80 (iteration_statement -> do_statement .)
    BREAK           reduce using rule 80 (iteration_statement -> do_statement .)
    CONTINUE        reduce using rule 80 (iteration_statement -> do_statement .)
    RETURN          reduce using rule 80 (iteration_statement -> do_statement .)
    OBJECT          reduce using rule 80 (iteration_statement -> do_statement .)
    STRING          reduce using rule 80 (iteration_statement -> do_statement .)
    BOOL            reduce using rule 80 (iteration_statement -> do_statement .)
    VOID            reduce using rule 80 (iteration_statement -> do_statement .)
    NEW             reduce using rule 80 (iteration_statement -> do_statement .)
    PLUSPLUS        reduce using rule 80 (iteration_statement -> do_statement .)
    MINUSMINUS      reduce using rule 80 (iteration_statement -> do_statement .)
    INT             reduce using rule 80 (iteration_statement -> do_statement .)
    LONG            reduce using rule 80 (iteration_statement -> do_statement .)
    CHAR            reduce using rule 80 (iteration_statement -> do_statement .)
    FLOAT           reduce using rule 80 (iteration_statement -> do_statement .)
    DOUBLE          reduce using rule 80 (iteration_statement -> do_statement .)
    DECIMAL         reduce using rule 80 (iteration_statement -> do_statement .)
    TRUE            reduce using rule 80 (iteration_statement -> do_statement .)
    FALSE           reduce using rule 80 (iteration_statement -> do_statement .)
    NULL            reduce using rule 80 (iteration_statement -> do_statement .)
    INTNUM          reduce using rule 80 (iteration_statement -> do_statement .)
    HEXADECIMALNUM  reduce using rule 80 (iteration_statement -> do_statement .)
    BINARYNUM       reduce using rule 80 (iteration_statement -> do_statement .)
    FLOATNUM        reduce using rule 80 (iteration_statement -> do_statement .)
    DOUBLENUM       reduce using rule 80 (iteration_statement -> do_statement .)
    DECIMALNUM      reduce using rule 80 (iteration_statement -> do_statement .)
    CHARLITERAL     reduce using rule 80 (iteration_statement -> do_statement .)
    STRINGLITERAL   reduce using rule 80 (iteration_statement -> do_statement .)
    ID              reduce using rule 80 (iteration_statement -> do_statement .)
    THIS            reduce using rule 80 (iteration_statement -> do_statement .)
    LPAREN          reduce using rule 80 (iteration_statement -> do_statement .)
    TYPEOF          reduce using rule 80 (iteration_statement -> do_statement .)
    SIZEOF          reduce using rule 80 (iteration_statement -> do_statement .)
    RBRACE          reduce using rule 80 (iteration_statement -> do_statement .)
    CASE            reduce using rule 80 (iteration_statement -> do_statement .)
    DEFAULT         reduce using rule 80 (iteration_statement -> do_statement .)


state 44

    (81) iteration_statement -> for_statement .

    CONST           reduce using rule 81 (iteration_statement -> for_statement .)
    LBRACE          reduce using rule 81 (iteration_statement -> for_statement .)
    SEMI            reduce using rule 81 (iteration_statement -> for_statement .)
    IF              reduce using rule 81 (iteration_statement -> for_statement .)
    SWITCH          reduce using rule 81 (iteration_statement -> for_statement .)
    WHILE           reduce using rule 81 (iteration_statement -> for_statement .)
    DO              reduce using rule 81 (iteration_statement -> for_statement .)
    FOR             reduce using rule 81 (iteration_statement -> for_statement .)
    FOREACH         reduce using rule 81 (iteration_statement -> for_statement .)
    BREAK           reduce using rule 81 (iteration_statement -> for_statement .)
    CONTINUE        reduce using rule 81 (iteration_statement -> for_statement .)
    RETURN          reduce using rule 81 (iteration_statement -> for_statement .)
    OBJECT          reduce using rule 81 (iteration_statement -> for_statement .)
    STRING          reduce using rule 81 (iteration_statement -> for_statement .)
    BOOL            reduce using rule 81 (iteration_statement -> for_statement .)
    VOID            reduce using rule 81 (iteration_statement -> for_statement .)
    NEW             reduce using rule 81 (iteration_statement -> for_statement .)
    PLUSPLUS        reduce using rule 81 (iteration_statement -> for_statement .)
    MINUSMINUS      reduce using rule 81 (iteration_statement -> for_statement .)
    INT             reduce using rule 81 (iteration_statement -> for_statement .)
    LONG            reduce using rule 81 (iteration_statement -> for_statement .)
    CHAR            reduce using rule 81 (iteration_statement -> for_statement .)
    FLOAT           reduce using rule 81 (iteration_statement -> for_statement .)
    DOUBLE          reduce using rule 81 (iteration_statement -> for_statement .)
    DECIMAL         reduce using rule 81 (iteration_statement -> for_statement .)
    TRUE            reduce using rule 81 (iteration_statement -> for_statement .)
    FALSE           reduce using rule 81 (iteration_statement -> for_statement .)
    NULL            reduce using rule 81 (iteration_statement -> for_statement .)
    INTNUM          reduce using rule 81 (iteration_statement -> for_statement .)
    HEXADECIMALNUM  reduce using rule 81 (iteration_statement -> for_statement .)
    BINARYNUM       reduce using rule 81 (iteration_statement -> for_statement .)
    FLOATNUM        reduce using rule 81 (iteration_statement -> for_statement .)
    DOUBLENUM       reduce using rule 81 (iteration_statement -> for_statement .)
    DECIMALNUM      reduce using rule 81 (iteration_statement -> for_statement .)
    CHARLITERAL     reduce using rule 81 (iteration_statement -> for_statement .)
    STRINGLITERAL   reduce using rule 81 (iteration_statement -> for_statement .)
    ID              reduce using rule 81 (iteration_statement -> for_statement .)
    THIS            reduce using rule 81 (iteration_statement -> for_statement .)
    LPAREN          reduce using rule 81 (iteration_statement -> for_statement .)
    TYPEOF          reduce using rule 81 (iteration_statement -> for_statement .)
    SIZEOF          reduce using rule 81 (iteration_statement -> for_statement .)
    RBRACE          reduce using rule 81 (iteration_statement -> for_statement .)
    CASE            reduce using rule 81 (iteration_statement -> for_statement .)
    DEFAULT         reduce using rule 81 (iteration_statement -> for_statement .)


state 45

    (82) iteration_statement -> foreach_statement .

    CONST           reduce using rule 82 (iteration_statement -> foreach_statement .)
    LBRACE          reduce using rule 82 (iteration_statement -> foreach_statement .)
    SEMI            reduce using rule 82 (iteration_statement -> foreach_statement .)
    IF              reduce using rule 82 (iteration_statement -> foreach_statement .)
    SWITCH          reduce using rule 82 (iteration_statement -> foreach_statement .)
    WHILE           reduce using rule 82 (iteration_statement -> foreach_statement .)
    DO              reduce using rule 82 (iteration_statement -> foreach_statement .)
    FOR             reduce using rule 82 (iteration_statement -> foreach_statement .)
    FOREACH         reduce using rule 82 (iteration_statement -> foreach_statement .)
    BREAK           reduce using rule 82 (iteration_statement -> foreach_statement .)
    CONTINUE        reduce using rule 82 (iteration_statement -> foreach_statement .)
    RETURN          reduce using rule 82 (iteration_statement -> foreach_statement .)
    OBJECT          reduce using rule 82 (iteration_statement -> foreach_statement .)
    STRING          reduce using rule 82 (iteration_statement -> foreach_statement .)
    BOOL            reduce using rule 82 (iteration_statement -> foreach_statement .)
    VOID            reduce using rule 82 (iteration_statement -> foreach_statement .)
    NEW             reduce using rule 82 (iteration_statement -> foreach_statement .)
    PLUSPLUS        reduce using rule 82 (iteration_statement -> foreach_statement .)
    MINUSMINUS      reduce using rule 82 (iteration_statement -> foreach_statement .)
    INT             reduce using rule 82 (iteration_statement -> foreach_statement .)
    LONG            reduce using rule 82 (iteration_statement -> foreach_statement .)
    CHAR            reduce using rule 82 (iteration_statement -> foreach_statement .)
    FLOAT           reduce using rule 82 (iteration_statement -> foreach_statement .)
    DOUBLE          reduce using rule 82 (iteration_statement -> foreach_statement .)
    DECIMAL         reduce using rule 82 (iteration_statement -> foreach_statement .)
    TRUE            reduce using rule 82 (iteration_statement -> foreach_statement .)
    FALSE           reduce using rule 82 (iteration_statement -> foreach_statement .)
    NULL            reduce using rule 82 (iteration_statement -> foreach_statement .)
    INTNUM          reduce using rule 82 (iteration_statement -> foreach_statement .)
    HEXADECIMALNUM  reduce using rule 82 (iteration_statement -> foreach_statement .)
    BINARYNUM       reduce using rule 82 (iteration_statement -> foreach_statement .)
    FLOATNUM        reduce using rule 82 (iteration_statement -> foreach_statement .)
    DOUBLENUM       reduce using rule 82 (iteration_statement -> foreach_statement .)
    DECIMALNUM      reduce using rule 82 (iteration_statement -> foreach_statement .)
    CHARLITERAL     reduce using rule 82 (iteration_statement -> foreach_statement .)
    STRINGLITERAL   reduce using rule 82 (iteration_statement -> foreach_statement .)
    ID              reduce using rule 82 (iteration_statement -> foreach_statement .)
    THIS            reduce using rule 82 (iteration_statement -> foreach_statement .)
    LPAREN          reduce using rule 82 (iteration_statement -> foreach_statement .)
    TYPEOF          reduce using rule 82 (iteration_statement -> foreach_statement .)
    SIZEOF          reduce using rule 82 (iteration_statement -> foreach_statement .)
    RBRACE          reduce using rule 82 (iteration_statement -> foreach_statement .)
    CASE            reduce using rule 82 (iteration_statement -> foreach_statement .)
    DEFAULT         reduce using rule 82 (iteration_statement -> foreach_statement .)


state 46

    (99) jump_statement -> break_statement .

    CONST           reduce using rule 99 (jump_statement -> break_statement .)
    LBRACE          reduce using rule 99 (jump_statement -> break_statement .)
    SEMI            reduce using rule 99 (jump_statement -> break_statement .)
    IF              reduce using rule 99 (jump_statement -> break_statement .)
    SWITCH          reduce using rule 99 (jump_statement -> break_statement .)
    WHILE           reduce using rule 99 (jump_statement -> break_statement .)
    DO              reduce using rule 99 (jump_statement -> break_statement .)
    FOR             reduce using rule 99 (jump_statement -> break_statement .)
    FOREACH         reduce using rule 99 (jump_statement -> break_statement .)
    BREAK           reduce using rule 99 (jump_statement -> break_statement .)
    CONTINUE        reduce using rule 99 (jump_statement -> break_statement .)
    RETURN          reduce using rule 99 (jump_statement -> break_statement .)
    OBJECT          reduce using rule 99 (jump_statement -> break_statement .)
    STRING          reduce using rule 99 (jump_statement -> break_statement .)
    BOOL            reduce using rule 99 (jump_statement -> break_statement .)
    VOID            reduce using rule 99 (jump_statement -> break_statement .)
    NEW             reduce using rule 99 (jump_statement -> break_statement .)
    PLUSPLUS        reduce using rule 99 (jump_statement -> break_statement .)
    MINUSMINUS      reduce using rule 99 (jump_statement -> break_statement .)
    INT             reduce using rule 99 (jump_statement -> break_statement .)
    LONG            reduce using rule 99 (jump_statement -> break_statement .)
    CHAR            reduce using rule 99 (jump_statement -> break_statement .)
    FLOAT           reduce using rule 99 (jump_statement -> break_statement .)
    DOUBLE          reduce using rule 99 (jump_statement -> break_statement .)
    DECIMAL         reduce using rule 99 (jump_statement -> break_statement .)
    TRUE            reduce using rule 99 (jump_statement -> break_statement .)
    FALSE           reduce using rule 99 (jump_statement -> break_statement .)
    NULL            reduce using rule 99 (jump_statement -> break_statement .)
    INTNUM          reduce using rule 99 (jump_statement -> break_statement .)
    HEXADECIMALNUM  reduce using rule 99 (jump_statement -> break_statement .)
    BINARYNUM       reduce using rule 99 (jump_statement -> break_statement .)
    FLOATNUM        reduce using rule 99 (jump_statement -> break_statement .)
    DOUBLENUM       reduce using rule 99 (jump_statement -> break_statement .)
    DECIMALNUM      reduce using rule 99 (jump_statement -> break_statement .)
    CHARLITERAL     reduce using rule 99 (jump_statement -> break_statement .)
    STRINGLITERAL   reduce using rule 99 (jump_statement -> break_statement .)
    ID              reduce using rule 99 (jump_statement -> break_statement .)
    THIS            reduce using rule 99 (jump_statement -> break_statement .)
    LPAREN          reduce using rule 99 (jump_statement -> break_statement .)
    TYPEOF          reduce using rule 99 (jump_statement -> break_statement .)
    SIZEOF          reduce using rule 99 (jump_statement -> break_statement .)
    RBRACE          reduce using rule 99 (jump_statement -> break_statement .)
    CASE            reduce using rule 99 (jump_statement -> break_statement .)
    DEFAULT         reduce using rule 99 (jump_statement -> break_statement .)


state 47

    (100) jump_statement -> continue_statement .

    CONST           reduce using rule 100 (jump_statement -> continue_statement .)
    LBRACE          reduce using rule 100 (jump_statement -> continue_statement .)
    SEMI            reduce using rule 100 (jump_statement -> continue_statement .)
    IF              reduce using rule 100 (jump_statement -> continue_statement .)
    SWITCH          reduce using rule 100 (jump_statement -> continue_statement .)
    WHILE           reduce using rule 100 (jump_statement -> continue_statement .)
    DO              reduce using rule 100 (jump_statement -> continue_statement .)
    FOR             reduce using rule 100 (jump_statement -> continue_statement .)
    FOREACH         reduce using rule 100 (jump_statement -> continue_statement .)
    BREAK           reduce using rule 100 (jump_statement -> continue_statement .)
    CONTINUE        reduce using rule 100 (jump_statement -> continue_statement .)
    RETURN          reduce using rule 100 (jump_statement -> continue_statement .)
    OBJECT          reduce using rule 100 (jump_statement -> continue_statement .)
    STRING          reduce using rule 100 (jump_statement -> continue_statement .)
    BOOL            reduce using rule 100 (jump_statement -> continue_statement .)
    VOID            reduce using rule 100 (jump_statement -> continue_statement .)
    NEW             reduce using rule 100 (jump_statement -> continue_statement .)
    PLUSPLUS        reduce using rule 100 (jump_statement -> continue_statement .)
    MINUSMINUS      reduce using rule 100 (jump_statement -> continue_statement .)
    INT             reduce using rule 100 (jump_statement -> continue_statement .)
    LONG            reduce using rule 100 (jump_statement -> continue_statement .)
    CHAR            reduce using rule 100 (jump_statement -> continue_statement .)
    FLOAT           reduce using rule 100 (jump_statement -> continue_statement .)
    DOUBLE          reduce using rule 100 (jump_statement -> continue_statement .)
    DECIMAL         reduce using rule 100 (jump_statement -> continue_statement .)
    TRUE            reduce using rule 100 (jump_statement -> continue_statement .)
    FALSE           reduce using rule 100 (jump_statement -> continue_statement .)
    NULL            reduce using rule 100 (jump_statement -> continue_statement .)
    INTNUM          reduce using rule 100 (jump_statement -> continue_statement .)
    HEXADECIMALNUM  reduce using rule 100 (jump_statement -> continue_statement .)
    BINARYNUM       reduce using rule 100 (jump_statement -> continue_statement .)
    FLOATNUM        reduce using rule 100 (jump_statement -> continue_statement .)
    DOUBLENUM       reduce using rule 100 (jump_statement -> continue_statement .)
    DECIMALNUM      reduce using rule 100 (jump_statement -> continue_statement .)
    CHARLITERAL     reduce using rule 100 (jump_statement -> continue_statement .)
    STRINGLITERAL   reduce using rule 100 (jump_statement -> continue_statement .)
    ID              reduce using rule 100 (jump_statement -> continue_statement .)
    THIS            reduce using rule 100 (jump_statement -> continue_statement .)
    LPAREN          reduce using rule 100 (jump_statement -> continue_statement .)
    TYPEOF          reduce using rule 100 (jump_statement -> continue_statement .)
    SIZEOF          reduce using rule 100 (jump_statement -> continue_statement .)
    RBRACE          reduce using rule 100 (jump_statement -> continue_statement .)
    CASE            reduce using rule 100 (jump_statement -> continue_statement .)
    DEFAULT         reduce using rule 100 (jump_statement -> continue_statement .)


state 48

    (101) jump_statement -> return_statement .

    CONST           reduce using rule 101 (jump_statement -> return_statement .)
    LBRACE          reduce using rule 101 (jump_statement -> return_statement .)
    SEMI            reduce using rule 101 (jump_statement -> return_statement .)
    IF              reduce using rule 101 (jump_statement -> return_statement .)
    SWITCH          reduce using rule 101 (jump_statement -> return_statement .)
    WHILE           reduce using rule 101 (jump_statement -> return_statement .)
    DO              reduce using rule 101 (jump_statement -> return_statement .)
    FOR             reduce using rule 101 (jump_statement -> return_statement .)
    FOREACH         reduce using rule 101 (jump_statement -> return_statement .)
    BREAK           reduce using rule 101 (jump_statement -> return_statement .)
    CONTINUE        reduce using rule 101 (jump_statement -> return_statement .)
    RETURN          reduce using rule 101 (jump_statement -> return_statement .)
    OBJECT          reduce using rule 101 (jump_statement -> return_statement .)
    STRING          reduce using rule 101 (jump_statement -> return_statement .)
    BOOL            reduce using rule 101 (jump_statement -> return_statement .)
    VOID            reduce using rule 101 (jump_statement -> return_statement .)
    NEW             reduce using rule 101 (jump_statement -> return_statement .)
    PLUSPLUS        reduce using rule 101 (jump_statement -> return_statement .)
    MINUSMINUS      reduce using rule 101 (jump_statement -> return_statement .)
    INT             reduce using rule 101 (jump_statement -> return_statement .)
    LONG            reduce using rule 101 (jump_statement -> return_statement .)
    CHAR            reduce using rule 101 (jump_statement -> return_statement .)
    FLOAT           reduce using rule 101 (jump_statement -> return_statement .)
    DOUBLE          reduce using rule 101 (jump_statement -> return_statement .)
    DECIMAL         reduce using rule 101 (jump_statement -> return_statement .)
    TRUE            reduce using rule 101 (jump_statement -> return_statement .)
    FALSE           reduce using rule 101 (jump_statement -> return_statement .)
    NULL            reduce using rule 101 (jump_statement -> return_statement .)
    INTNUM          reduce using rule 101 (jump_statement -> return_statement .)
    HEXADECIMALNUM  reduce using rule 101 (jump_statement -> return_statement .)
    BINARYNUM       reduce using rule 101 (jump_statement -> return_statement .)
    FLOATNUM        reduce using rule 101 (jump_statement -> return_statement .)
    DOUBLENUM       reduce using rule 101 (jump_statement -> return_statement .)
    DECIMALNUM      reduce using rule 101 (jump_statement -> return_statement .)
    CHARLITERAL     reduce using rule 101 (jump_statement -> return_statement .)
    STRINGLITERAL   reduce using rule 101 (jump_statement -> return_statement .)
    ID              reduce using rule 101 (jump_statement -> return_statement .)
    THIS            reduce using rule 101 (jump_statement -> return_statement .)
    LPAREN          reduce using rule 101 (jump_statement -> return_statement .)
    TYPEOF          reduce using rule 101 (jump_statement -> return_statement .)
    SIZEOF          reduce using rule 101 (jump_statement -> return_statement .)
    RBRACE          reduce using rule 101 (jump_statement -> return_statement .)
    CASE            reduce using rule 101 (jump_statement -> return_statement .)
    DEFAULT         reduce using rule 101 (jump_statement -> return_statement .)


state 49

    (47) statement_exp -> invocation_exp .
    (125) primary_no_array_creation_exp -> invocation_exp .

    SEMI            reduce using rule 47 (statement_exp -> invocation_exp .)
    COMMA           reduce using rule 47 (statement_exp -> invocation_exp .)
    RPAREN          reduce using rule 47 (statement_exp -> invocation_exp .)
    LSB             reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    LPAREN          reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    PLUSPLUS        reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    MINUSMINUS      reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    DOT             reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    EQUAL           reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)


state 50

    (48) statement_exp -> object_creation_exp .
    (133) primary_no_array_creation_exp -> object_creation_exp .

    SEMI            reduce using rule 48 (statement_exp -> object_creation_exp .)
    COMMA           reduce using rule 48 (statement_exp -> object_creation_exp .)
    RPAREN          reduce using rule 48 (statement_exp -> object_creation_exp .)
    LSB             reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    LPAREN          reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    PLUSPLUS        reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    MINUSMINUS      reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    DOT             reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    EQUAL           reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)


state 51

    (49) statement_exp -> assignment .

    SEMI            reduce using rule 49 (statement_exp -> assignment .)
    COMMA           reduce using rule 49 (statement_exp -> assignment .)
    RPAREN          reduce using rule 49 (statement_exp -> assignment .)


state 52

    (50) statement_exp -> post_increment_exp .
    (131) primary_no_array_creation_exp -> post_increment_exp .

    SEMI            reduce using rule 50 (statement_exp -> post_increment_exp .)
    COMMA           reduce using rule 50 (statement_exp -> post_increment_exp .)
    RPAREN          reduce using rule 50 (statement_exp -> post_increment_exp .)
    LSB             reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    LPAREN          reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    PLUSPLUS        reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    MINUSMINUS      reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    DOT             reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    EQUAL           reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)


state 53

    (51) statement_exp -> post_decrement_exp .
    (132) primary_no_array_creation_exp -> post_decrement_exp .

    SEMI            reduce using rule 51 (statement_exp -> post_decrement_exp .)
    COMMA           reduce using rule 51 (statement_exp -> post_decrement_exp .)
    RPAREN          reduce using rule 51 (statement_exp -> post_decrement_exp .)
    LSB             reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    LPAREN          reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    PLUSPLUS        reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    MINUSMINUS      reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    DOT             reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    EQUAL           reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)


state 54

    (52) statement_exp -> pre_increment_exp .
    (141) unary_exp -> pre_increment_exp .

    SEMI            reduce using rule 52 (statement_exp -> pre_increment_exp .)
    COMMA           reduce using rule 52 (statement_exp -> pre_increment_exp .)
    RPAREN          reduce using rule 52 (statement_exp -> pre_increment_exp .)
    EQUAL           reduce using rule 141 (unary_exp -> pre_increment_exp .)


state 55

    (53) statement_exp -> pre_decrement_exp .
    (142) unary_exp -> pre_decrement_exp .

    SEMI            reduce using rule 53 (statement_exp -> pre_decrement_exp .)
    COMMA           reduce using rule 53 (statement_exp -> pre_decrement_exp .)
    RPAREN          reduce using rule 53 (statement_exp -> pre_decrement_exp .)
    EQUAL           reduce using rule 142 (unary_exp -> pre_decrement_exp .)


state 56

    (69) if_statement -> IF . LPAREN exp RPAREN block
    (70) if_statement -> IF . LPAREN exp RPAREN block ELSE block

    LPAREN          shift and go to state 103


state 57

    (144) cast_exp -> LPAREN . type RPAREN unary_exp
    (122) parenthesized_exp -> LPAREN . exp RPAREN
    (3) type -> . class_type
    (4) type -> . value_type
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (5) class_type -> . OBJECT
    (6) class_type -> . STRING
    (7) value_type -> . integral_type
    (8) value_type -> . floating_point_type
    (9) value_type -> . BOOL
    (10) value_type -> . VOID
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (11) integral_type -> . INT
    (12) integral_type -> . LONG
    (13) integral_type -> . CHAR
    (14) floating_point_type -> . FLOAT
    (15) floating_point_type -> . DOUBLE
    (16) floating_point_type -> . DECIMAL
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    OBJECT          shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 11
    VOID            shift and go to state 12
    INT             shift and go to state 13
    LONG            shift and go to state 14
    CHAR            shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17
    DECIMAL         shift and go to state 18
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    type                           shift and go to state 104
    unary_exp                      shift and go to state 105
    exp                            shift and go to state 106
    class_type                     shift and go to state 5
    value_type                     shift and go to state 6
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    integral_type                  shift and go to state 9
    floating_point_type            shift and go to state 10
    conditional_exp                shift and go to state 109
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 58

    (71) switch_statement -> SWITCH . LPAREN exp RPAREN LBRACE switch_body RBRACE

    LPAREN          shift and go to state 127


state 59

    (83) while_statement -> WHILE . LPAREN exp RPAREN embedded_statement

    LPAREN          shift and go to state 128


state 60

    (84) do_statement -> DO . embedded_statement WHILE LPAREN exp RPAREN SEMI
    (37) embedded_statement -> . block
    (38) embedded_statement -> . empty_statement
    (39) embedded_statement -> . exp_statement
    (40) embedded_statement -> . selection_statement
    (41) embedded_statement -> . iteration_statement
    (42) embedded_statement -> . jump_statement
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE
    (45) empty_statement -> . SEMI
    (46) exp_statement -> . statement_exp SEMI
    (67) selection_statement -> . if_statement
    (68) selection_statement -> . switch_statement
    (79) iteration_statement -> . while_statement
    (80) iteration_statement -> . do_statement
    (81) iteration_statement -> . for_statement
    (82) iteration_statement -> . foreach_statement
    (99) jump_statement -> . break_statement
    (100) jump_statement -> . continue_statement
    (101) jump_statement -> . return_statement
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (69) if_statement -> . IF LPAREN exp RPAREN block
    (70) if_statement -> . IF LPAREN exp RPAREN block ELSE block
    (71) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (83) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (84) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (85) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (98) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (102) break_statement -> . BREAK SEMI
    (103) continue_statement -> . CONTINUE SEMI
    (104) return_statement -> . RETURN SEMI
    (105) return_statement -> . RETURN exp SEMI
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    LBRACE          shift and go to state 21
    SEMI            shift and go to state 29
    IF              shift and go to state 56
    SWITCH          shift and go to state 58
    WHILE           shift and go to state 59
    DO              shift and go to state 60
    FOR             shift and go to state 61
    FOREACH         shift and go to state 62
    BREAK           shift and go to state 64
    CONTINUE        shift and go to state 65
    RETURN          shift and go to state 66
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    embedded_statement             shift and go to state 129
    block                          shift and go to state 31
    empty_statement                shift and go to state 32
    exp_statement                  shift and go to state 33
    selection_statement            shift and go to state 34
    iteration_statement            shift and go to state 35
    jump_statement                 shift and go to state 36
    statement_exp                  shift and go to state 39
    if_statement                   shift and go to state 40
    switch_statement               shift and go to state 41
    while_statement                shift and go to state 42
    do_statement                   shift and go to state 43
    for_statement                  shift and go to state 44
    foreach_statement              shift and go to state 45
    break_statement                shift and go to state 46
    continue_statement             shift and go to state 47
    return_statement               shift and go to state 48
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 61

    (85) for_statement -> FOR . LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> FOR . LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> FOR . LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> FOR . LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (89) for_statement -> FOR . LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> FOR . LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> FOR . LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> FOR . LPAREN SEMI SEMI RPAREN embedded_statement

    LPAREN          shift and go to state 130


state 62

    (98) foreach_statement -> FOREACH . LPAREN type ID IN exp RPAREN embedded_statement

    LPAREN          shift and go to state 131


state 63

    (120) primary_no_array_creation_exp -> ID .

    LSB             reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    LPAREN          reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    PLUSPLUS        reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    MINUSMINUS      reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    DOT             reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    EQUAL           reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    STAR            reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    SLASH           reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    PERCENT         reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    PLUS            reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    MINUS           reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    LSHIFT          reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    RSHIFT          reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    LT              reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    GT              reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    LEQ             reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    GEQ             reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    IS              reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    EQEQUAL         reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    NOTEQUAL        reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    AMPER           reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    CIRCUMFLEX      reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    PIPE            reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    AMPERAMPER      reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    HOOK            reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    PIPEPIPE        reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    RPAREN          reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    SEMI            reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    COMMA           reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    RSB             reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    COLON           reduce using rule 120 (primary_no_array_creation_exp -> ID .)
    RBRACE          reduce using rule 120 (primary_no_array_creation_exp -> ID .)


state 64

    (102) break_statement -> BREAK . SEMI

    SEMI            shift and go to state 132


state 65

    (103) continue_statement -> CONTINUE . SEMI

    SEMI            shift and go to state 133


state 66

    (104) return_statement -> RETURN . SEMI
    (105) return_statement -> RETURN . exp SEMI
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    SEMI            shift and go to state 134
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    exp                            shift and go to state 135
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 67

    (126) invocation_exp -> primary_exp . LPAREN RPAREN
    (127) invocation_exp -> primary_exp . LPAREN arg_list RPAREN
    (63) post_increment_exp -> primary_exp . PLUSPLUS
    (64) post_decrement_exp -> primary_exp . MINUSMINUS
    (140) unary_exp -> primary_exp .
    (124) member_access -> primary_exp . DOT ID

    LPAREN          shift and go to state 136
    PLUSPLUS        shift and go to state 137
    MINUSMINUS      shift and go to state 138
    EQUAL           reduce using rule 140 (unary_exp -> primary_exp .)
    DOT             shift and go to state 139


state 68

    (54) object_creation_exp -> NEW . type LPAREN RPAREN
    (55) object_creation_exp -> NEW . type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> NEW . type LPAREN arg_list RPAREN
    (57) object_creation_exp -> NEW . type LPAREN arg_list RPAREN object_initializer
    (3) type -> . class_type
    (4) type -> . value_type
    (5) class_type -> . OBJECT
    (6) class_type -> . STRING
    (7) value_type -> . integral_type
    (8) value_type -> . floating_point_type
    (9) value_type -> . BOOL
    (10) value_type -> . VOID
    (11) integral_type -> . INT
    (12) integral_type -> . LONG
    (13) integral_type -> . CHAR
    (14) floating_point_type -> . FLOAT
    (15) floating_point_type -> . DOUBLE
    (16) floating_point_type -> . DECIMAL

    OBJECT          shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 11
    VOID            shift and go to state 12
    INT             shift and go to state 13
    LONG            shift and go to state 14
    CHAR            shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17
    DECIMAL         shift and go to state 18

    type                           shift and go to state 140
    class_type                     shift and go to state 5
    value_type                     shift and go to state 6
    integral_type                  shift and go to state 9
    floating_point_type            shift and go to state 10

state 69

    (179) assignment -> unary_exp . EQUAL exp

    EQUAL           shift and go to state 141


state 70

    (65) pre_increment_exp -> PLUSPLUS . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    unary_exp                      shift and go to state 142
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 71

    (66) pre_decrement_exp -> MINUSMINUS . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    unary_exp                      shift and go to state 143
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 72

    (108) primary_exp -> primary_no_array_creation_exp .
    (129) element_access -> primary_no_array_creation_exp . LSB exp RSB

    LPAREN          reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    PLUSPLUS        reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    MINUSMINUS      reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    DOT             reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    EQUAL           reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    STAR            reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    SLASH           reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    PERCENT         reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    PLUS            reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    MINUS           reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    LSHIFT          reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    RSHIFT          reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    LT              reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    GT              reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    LEQ             reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    GEQ             reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    IS              reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    EQEQUAL         reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    NOTEQUAL        reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    AMPER           reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    CIRCUMFLEX      reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    PIPE            reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    AMPERAMPER      reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    HOOK            reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    PIPEPIPE        reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    RPAREN          reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    SEMI            reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    COMMA           reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    RSB             reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    COLON           reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    RBRACE          reduce using rule 108 (primary_exp -> primary_no_array_creation_exp .)
    LSB             shift and go to state 144


state 73

    (143) unary_exp -> cast_exp .

    EQUAL           reduce using rule 143 (unary_exp -> cast_exp .)
    STAR            reduce using rule 143 (unary_exp -> cast_exp .)
    SLASH           reduce using rule 143 (unary_exp -> cast_exp .)
    PERCENT         reduce using rule 143 (unary_exp -> cast_exp .)
    PLUS            reduce using rule 143 (unary_exp -> cast_exp .)
    MINUS           reduce using rule 143 (unary_exp -> cast_exp .)
    LSHIFT          reduce using rule 143 (unary_exp -> cast_exp .)
    RSHIFT          reduce using rule 143 (unary_exp -> cast_exp .)
    LT              reduce using rule 143 (unary_exp -> cast_exp .)
    GT              reduce using rule 143 (unary_exp -> cast_exp .)
    LEQ             reduce using rule 143 (unary_exp -> cast_exp .)
    GEQ             reduce using rule 143 (unary_exp -> cast_exp .)
    IS              reduce using rule 143 (unary_exp -> cast_exp .)
    EQEQUAL         reduce using rule 143 (unary_exp -> cast_exp .)
    NOTEQUAL        reduce using rule 143 (unary_exp -> cast_exp .)
    AMPER           reduce using rule 143 (unary_exp -> cast_exp .)
    CIRCUMFLEX      reduce using rule 143 (unary_exp -> cast_exp .)
    PIPE            reduce using rule 143 (unary_exp -> cast_exp .)
    AMPERAMPER      reduce using rule 143 (unary_exp -> cast_exp .)
    HOOK            reduce using rule 143 (unary_exp -> cast_exp .)
    PIPEPIPE        reduce using rule 143 (unary_exp -> cast_exp .)
    RPAREN          reduce using rule 143 (unary_exp -> cast_exp .)
    SEMI            reduce using rule 143 (unary_exp -> cast_exp .)
    COMMA           reduce using rule 143 (unary_exp -> cast_exp .)
    RSB             reduce using rule 143 (unary_exp -> cast_exp .)
    COLON           reduce using rule 143 (unary_exp -> cast_exp .)
    RBRACE          reduce using rule 143 (unary_exp -> cast_exp .)


state 74

    (109) primary_no_array_creation_exp -> TRUE .

    LSB             reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    LPAREN          reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    PLUSPLUS        reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    MINUSMINUS      reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    DOT             reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    EQUAL           reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    STAR            reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    SLASH           reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    PERCENT         reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    PLUS            reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    MINUS           reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    LSHIFT          reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    RSHIFT          reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    LT              reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    GT              reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    LEQ             reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    GEQ             reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    IS              reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    EQEQUAL         reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    NOTEQUAL        reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    AMPER           reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    CIRCUMFLEX      reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    PIPE            reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    AMPERAMPER      reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    HOOK            reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    PIPEPIPE        reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    RPAREN          reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    SEMI            reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    COMMA           reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    RSB             reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    COLON           reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)
    RBRACE          reduce using rule 109 (primary_no_array_creation_exp -> TRUE .)


state 75

    (110) primary_no_array_creation_exp -> FALSE .

    LSB             reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    LPAREN          reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    PLUSPLUS        reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    MINUSMINUS      reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    DOT             reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    EQUAL           reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    STAR            reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    SLASH           reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    PERCENT         reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    PLUS            reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    MINUS           reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    LSHIFT          reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    RSHIFT          reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    LT              reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    GT              reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    LEQ             reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    GEQ             reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    IS              reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    EQEQUAL         reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    NOTEQUAL        reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    AMPER           reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    CIRCUMFLEX      reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    PIPE            reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    AMPERAMPER      reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    HOOK            reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    PIPEPIPE        reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    RPAREN          reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    SEMI            reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    COMMA           reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    RSB             reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    COLON           reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)
    RBRACE          reduce using rule 110 (primary_no_array_creation_exp -> FALSE .)


state 76

    (111) primary_no_array_creation_exp -> NULL .

    LSB             reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    LPAREN          reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    PLUSPLUS        reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    MINUSMINUS      reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    DOT             reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    EQUAL           reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    STAR            reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    SLASH           reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    PERCENT         reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    PLUS            reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    MINUS           reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    LSHIFT          reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    RSHIFT          reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    LT              reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    GT              reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    LEQ             reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    GEQ             reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    IS              reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    EQEQUAL         reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    NOTEQUAL        reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    AMPER           reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    CIRCUMFLEX      reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    PIPE            reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    AMPERAMPER      reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    HOOK            reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    PIPEPIPE        reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    RPAREN          reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    SEMI            reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    COMMA           reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    RSB             reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    COLON           reduce using rule 111 (primary_no_array_creation_exp -> NULL .)
    RBRACE          reduce using rule 111 (primary_no_array_creation_exp -> NULL .)


state 77

    (112) primary_no_array_creation_exp -> INTNUM .

    LSB             reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    LPAREN          reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    PLUSPLUS        reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    MINUSMINUS      reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    DOT             reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    EQUAL           reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    STAR            reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    SLASH           reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    PERCENT         reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    PLUS            reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    MINUS           reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    LSHIFT          reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    RSHIFT          reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    LT              reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    GT              reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    LEQ             reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    GEQ             reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    IS              reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    EQEQUAL         reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    NOTEQUAL        reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    AMPER           reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    CIRCUMFLEX      reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    PIPE            reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    AMPERAMPER      reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    HOOK            reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    PIPEPIPE        reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    RPAREN          reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    SEMI            reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    COMMA           reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    RSB             reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    COLON           reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)
    RBRACE          reduce using rule 112 (primary_no_array_creation_exp -> INTNUM .)


state 78

    (113) primary_no_array_creation_exp -> HEXADECIMALNUM .

    LSB             reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    LPAREN          reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    PLUSPLUS        reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    MINUSMINUS      reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    DOT             reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    EQUAL           reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    STAR            reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    SLASH           reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    PERCENT         reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    PLUS            reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    MINUS           reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    LSHIFT          reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    RSHIFT          reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    LT              reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    GT              reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    LEQ             reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    GEQ             reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    IS              reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    EQEQUAL         reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    NOTEQUAL        reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    AMPER           reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    CIRCUMFLEX      reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    PIPE            reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    AMPERAMPER      reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    HOOK            reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    PIPEPIPE        reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    RPAREN          reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    SEMI            reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    COMMA           reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    RSB             reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    COLON           reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)
    RBRACE          reduce using rule 113 (primary_no_array_creation_exp -> HEXADECIMALNUM .)


state 79

    (114) primary_no_array_creation_exp -> BINARYNUM .

    LSB             reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    LPAREN          reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    PLUSPLUS        reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    MINUSMINUS      reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    DOT             reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    EQUAL           reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    STAR            reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    SLASH           reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    PERCENT         reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    PLUS            reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    MINUS           reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    LSHIFT          reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    RSHIFT          reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    LT              reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    GT              reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    LEQ             reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    GEQ             reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    IS              reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    EQEQUAL         reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    NOTEQUAL        reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    AMPER           reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    CIRCUMFLEX      reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    PIPE            reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    AMPERAMPER      reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    HOOK            reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    PIPEPIPE        reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    RPAREN          reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    SEMI            reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    COMMA           reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    RSB             reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    COLON           reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)
    RBRACE          reduce using rule 114 (primary_no_array_creation_exp -> BINARYNUM .)


state 80

    (115) primary_no_array_creation_exp -> FLOATNUM .

    LSB             reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    LPAREN          reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    PLUSPLUS        reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    MINUSMINUS      reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    DOT             reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    EQUAL           reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    STAR            reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    SLASH           reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    PERCENT         reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    PLUS            reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    MINUS           reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    LSHIFT          reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    RSHIFT          reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    LT              reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    GT              reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    LEQ             reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    GEQ             reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    IS              reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    EQEQUAL         reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    NOTEQUAL        reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    AMPER           reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    CIRCUMFLEX      reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    PIPE            reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    AMPERAMPER      reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    HOOK            reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    PIPEPIPE        reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    RPAREN          reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    SEMI            reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    COMMA           reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    RSB             reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    COLON           reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)
    RBRACE          reduce using rule 115 (primary_no_array_creation_exp -> FLOATNUM .)


state 81

    (116) primary_no_array_creation_exp -> DOUBLENUM .

    LSB             reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    LPAREN          reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    PLUSPLUS        reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    MINUSMINUS      reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    DOT             reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    EQUAL           reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    STAR            reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    SLASH           reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    PERCENT         reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    PLUS            reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    MINUS           reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    LSHIFT          reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    RSHIFT          reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    LT              reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    GT              reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    LEQ             reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    GEQ             reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    IS              reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    EQEQUAL         reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    NOTEQUAL        reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    AMPER           reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    CIRCUMFLEX      reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    PIPE            reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    AMPERAMPER      reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    HOOK            reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    PIPEPIPE        reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    RPAREN          reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    SEMI            reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    COMMA           reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    RSB             reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    COLON           reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)
    RBRACE          reduce using rule 116 (primary_no_array_creation_exp -> DOUBLENUM .)


state 82

    (117) primary_no_array_creation_exp -> DECIMALNUM .

    LSB             reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    LPAREN          reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    PLUSPLUS        reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    MINUSMINUS      reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    DOT             reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    EQUAL           reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    STAR            reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    SLASH           reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    PERCENT         reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    PLUS            reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    MINUS           reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    LSHIFT          reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    RSHIFT          reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    LT              reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    GT              reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    LEQ             reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    GEQ             reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    IS              reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    EQEQUAL         reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    NOTEQUAL        reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    AMPER           reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    CIRCUMFLEX      reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    PIPE            reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    AMPERAMPER      reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    HOOK            reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    PIPEPIPE        reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    RPAREN          reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    SEMI            reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    COMMA           reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    RSB             reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    COLON           reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)
    RBRACE          reduce using rule 117 (primary_no_array_creation_exp -> DECIMALNUM .)


state 83

    (118) primary_no_array_creation_exp -> CHARLITERAL .

    LSB             reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    LPAREN          reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    PLUSPLUS        reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    MINUSMINUS      reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    DOT             reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    EQUAL           reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    STAR            reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    SLASH           reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    PERCENT         reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    PLUS            reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    MINUS           reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    LSHIFT          reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    RSHIFT          reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    LT              reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    GT              reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    LEQ             reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    GEQ             reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    IS              reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    EQEQUAL         reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    NOTEQUAL        reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    AMPER           reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    CIRCUMFLEX      reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    PIPE            reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    AMPERAMPER      reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    HOOK            reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    PIPEPIPE        reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    RPAREN          reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    SEMI            reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    COMMA           reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    RSB             reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    COLON           reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)
    RBRACE          reduce using rule 118 (primary_no_array_creation_exp -> CHARLITERAL .)


state 84

    (119) primary_no_array_creation_exp -> STRINGLITERAL .

    LSB             reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    LPAREN          reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    PLUSPLUS        reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    MINUSMINUS      reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    DOT             reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    EQUAL           reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    STAR            reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    SLASH           reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    PERCENT         reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    PLUS            reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    MINUS           reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    LSHIFT          reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    RSHIFT          reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    LT              reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    GT              reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    LEQ             reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    GEQ             reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    IS              reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    EQEQUAL         reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    NOTEQUAL        reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    AMPER           reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    CIRCUMFLEX      reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    PIPE            reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    AMPERAMPER      reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    HOOK            reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    PIPEPIPE        reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    RPAREN          reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    SEMI            reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    COMMA           reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    RSB             reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    COLON           reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)
    RBRACE          reduce using rule 119 (primary_no_array_creation_exp -> STRINGLITERAL .)


state 85

    (121) primary_no_array_creation_exp -> parenthesized_exp .

    LSB             reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    LPAREN          reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    PLUSPLUS        reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    MINUSMINUS      reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    DOT             reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    EQUAL           reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    STAR            reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    SLASH           reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    PERCENT         reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    PLUS            reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    MINUS           reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    LSHIFT          reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    RSHIFT          reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    LT              reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    GT              reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    LEQ             reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    GEQ             reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    IS              reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    EQEQUAL         reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    NOTEQUAL        reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    AMPER           reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    CIRCUMFLEX      reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    PIPE            reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    AMPERAMPER      reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    HOOK            reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    PIPEPIPE        reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    RPAREN          reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    SEMI            reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    COMMA           reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    RSB             reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    COLON           reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)
    RBRACE          reduce using rule 121 (primary_no_array_creation_exp -> parenthesized_exp .)


state 86

    (123) primary_no_array_creation_exp -> member_access .

    LSB             reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    LPAREN          reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    PLUSPLUS        reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    MINUSMINUS      reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    DOT             reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    EQUAL           reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    STAR            reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    SLASH           reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    PERCENT         reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    PLUS            reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    MINUS           reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    LSHIFT          reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    RSHIFT          reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    LT              reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    GT              reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    LEQ             reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    GEQ             reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    IS              reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    EQEQUAL         reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    NOTEQUAL        reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    AMPER           reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    CIRCUMFLEX      reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    PIPE            reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    AMPERAMPER      reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    HOOK            reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    PIPEPIPE        reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    RPAREN          reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    SEMI            reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    COMMA           reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    RSB             reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    COLON           reduce using rule 123 (primary_no_array_creation_exp -> member_access .)
    RBRACE          reduce using rule 123 (primary_no_array_creation_exp -> member_access .)


state 87

    (128) primary_no_array_creation_exp -> element_access .

    LSB             reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    LPAREN          reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    PLUSPLUS        reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    MINUSMINUS      reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    DOT             reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    EQUAL           reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    STAR            reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    SLASH           reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    PERCENT         reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    PLUS            reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    MINUS           reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    LSHIFT          reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    RSHIFT          reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    LT              reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    GT              reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    LEQ             reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    GEQ             reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    IS              reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    EQEQUAL         reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    NOTEQUAL        reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    AMPER           reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    CIRCUMFLEX      reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    PIPE            reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    AMPERAMPER      reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    HOOK            reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    PIPEPIPE        reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    RPAREN          reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    SEMI            reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    COMMA           reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    RSB             reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    COLON           reduce using rule 128 (primary_no_array_creation_exp -> element_access .)
    RBRACE          reduce using rule 128 (primary_no_array_creation_exp -> element_access .)


state 88

    (130) primary_no_array_creation_exp -> THIS .

    LSB             reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    LPAREN          reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    PLUSPLUS        reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    MINUSMINUS      reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    DOT             reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    EQUAL           reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    STAR            reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    SLASH           reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    PERCENT         reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    PLUS            reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    MINUS           reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    LSHIFT          reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    RSHIFT          reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    LT              reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    GT              reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    LEQ             reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    GEQ             reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    IS              reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    EQEQUAL         reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    NOTEQUAL        reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    AMPER           reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    CIRCUMFLEX      reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    PIPE            reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    AMPERAMPER      reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    HOOK            reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    PIPEPIPE        reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    RPAREN          reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    SEMI            reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    COMMA           reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    RSB             reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    COLON           reduce using rule 130 (primary_no_array_creation_exp -> THIS .)
    RBRACE          reduce using rule 130 (primary_no_array_creation_exp -> THIS .)


state 89

    (134) primary_no_array_creation_exp -> typeof_exp .

    LSB             reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    LPAREN          reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    PLUSPLUS        reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    MINUSMINUS      reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    DOT             reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    EQUAL           reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    STAR            reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    SLASH           reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    PERCENT         reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    PLUS            reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    MINUS           reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    LSHIFT          reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    RSHIFT          reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    LT              reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    GT              reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    LEQ             reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    GEQ             reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    IS              reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    EQEQUAL         reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    NOTEQUAL        reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    AMPER           reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    CIRCUMFLEX      reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    PIPE            reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    AMPERAMPER      reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    HOOK            reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    PIPEPIPE        reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    RPAREN          reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    SEMI            reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    COMMA           reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    RSB             reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    COLON           reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)
    RBRACE          reduce using rule 134 (primary_no_array_creation_exp -> typeof_exp .)


state 90

    (136) primary_no_array_creation_exp -> sizeof_exp .

    LSB             reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    LPAREN          reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    PLUSPLUS        reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    MINUSMINUS      reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    DOT             reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    EQUAL           reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    STAR            reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    SLASH           reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    PERCENT         reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    PLUS            reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    MINUS           reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    LSHIFT          reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    RSHIFT          reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    LT              reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    GT              reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    LEQ             reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    GEQ             reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    IS              reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    EQEQUAL         reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    NOTEQUAL        reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    AMPER           reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    CIRCUMFLEX      reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    PIPE            reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    AMPERAMPER      reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    HOOK            reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    PIPEPIPE        reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    RPAREN          reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    SEMI            reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    COMMA           reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    RSB             reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    COLON           reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)
    RBRACE          reduce using rule 136 (primary_no_array_creation_exp -> sizeof_exp .)


state 91

    (135) typeof_exp -> TYPEOF . LPAREN type RPAREN

    LPAREN          shift and go to state 145


state 92

    (137) sizeof_exp -> SIZEOF . LPAREN value_type RPAREN

    LPAREN          shift and go to state 146


state 93

    (18) signature -> type ID LPAREN . param_list RPAREN
    (19) signature -> type ID LPAREN . RPAREN
    (20) param_list -> . type ID
    (21) param_list -> . type ID COMMA param_list
    (3) type -> . class_type
    (4) type -> . value_type
    (5) class_type -> . OBJECT
    (6) class_type -> . STRING
    (7) value_type -> . integral_type
    (8) value_type -> . floating_point_type
    (9) value_type -> . BOOL
    (10) value_type -> . VOID
    (11) integral_type -> . INT
    (12) integral_type -> . LONG
    (13) integral_type -> . CHAR
    (14) floating_point_type -> . FLOAT
    (15) floating_point_type -> . DOUBLE
    (16) floating_point_type -> . DECIMAL

    RPAREN          shift and go to state 149
    OBJECT          shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 11
    VOID            shift and go to state 12
    INT             shift and go to state 13
    LONG            shift and go to state 14
    CHAR            shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17
    DECIMAL         shift and go to state 18

    type                           shift and go to state 147
    param_list                     shift and go to state 148
    class_type                     shift and go to state 5
    value_type                     shift and go to state 6
    integral_type                  shift and go to state 9
    floating_point_type            shift and go to state 10

state 94

    (43) block -> LBRACE statement_list RBRACE .

    OBJECT          reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    STRING          reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    BOOL            reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    VOID            reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    INT             reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    LONG            reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    CHAR            reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    DOUBLE          reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    DECIMAL         reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    CONST           reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    SEMI            reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    SWITCH          reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    DO              reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    FOREACH         reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    CONTINUE        reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    NEW             reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    PLUSPLUS        reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    MINUSMINUS      reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    TRUE            reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    FALSE           reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    NULL            reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    INTNUM          reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    HEXADECIMALNUM  reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    BINARYNUM       reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    FLOATNUM        reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    DOUBLENUM       reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    DECIMALNUM      reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    CHARLITERAL     reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    STRINGLITERAL   reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    THIS            reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    LPAREN          reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    TYPEOF          reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    SIZEOF          reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    CASE            reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    DEFAULT         reduce using rule 43 (block -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 43 (block -> LBRACE statement_list RBRACE .)


state 95

    (23) statement_list -> statement statement_list .

    RBRACE          reduce using rule 23 (statement_list -> statement statement_list .)
    CASE            reduce using rule 23 (statement_list -> statement statement_list .)
    DEFAULT         reduce using rule 23 (statement_list -> statement statement_list .)


state 96

    (26) declaration_statement -> const_declaration SEMI .

    CONST           reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    LBRACE          reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    SEMI            reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    IF              reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    SWITCH          reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    WHILE           reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    DO              reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    FOR             reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    FOREACH         reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    BREAK           reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    CONTINUE        reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    RETURN          reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    OBJECT          reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    STRING          reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    BOOL            reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    VOID            reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    NEW             reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    PLUSPLUS        reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    MINUSMINUS      reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    INT             reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    LONG            reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    CHAR            reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    FLOAT           reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    DOUBLE          reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    DECIMAL         reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    TRUE            reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    FALSE           reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    NULL            reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    INTNUM          reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    HEXADECIMALNUM  reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    BINARYNUM       reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    FLOATNUM        reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    DOUBLENUM       reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    DECIMALNUM      reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    CHARLITERAL     reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    STRINGLITERAL   reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    ID              reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    THIS            reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    LPAREN          reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    TYPEOF          reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    SIZEOF          reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    RBRACE          reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    CASE            reduce using rule 26 (declaration_statement -> const_declaration SEMI .)
    DEFAULT         reduce using rule 26 (declaration_statement -> const_declaration SEMI .)


state 97

    (27) declaration_statement -> var_declaration SEMI .

    CONST           reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    LBRACE          reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    SEMI            reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    IF              reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    SWITCH          reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    WHILE           reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    DO              reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    FOR             reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    FOREACH         reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    BREAK           reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    CONTINUE        reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    RETURN          reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    OBJECT          reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    STRING          reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    BOOL            reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    VOID            reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    NEW             reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    PLUSPLUS        reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    MINUSMINUS      reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    INT             reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    LONG            reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    CHAR            reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    FLOAT           reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    DOUBLE          reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    DECIMAL         reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    TRUE            reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    FALSE           reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    NULL            reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    INTNUM          reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    HEXADECIMALNUM  reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    BINARYNUM       reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    FLOATNUM        reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    DOUBLENUM       reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    DECIMALNUM      reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    CHARLITERAL     reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    STRINGLITERAL   reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    ID              reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    THIS            reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    LPAREN          reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    TYPEOF          reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    SIZEOF          reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    RBRACE          reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    CASE            reduce using rule 27 (declaration_statement -> var_declaration SEMI .)
    DEFAULT         reduce using rule 27 (declaration_statement -> var_declaration SEMI .)


state 98

    (28) const_declaration -> CONST type . const_declarators
    (29) const_declarators -> . const_declarator
    (30) const_declarators -> . const_declarator COMMA const_declarators
    (31) const_declarator -> . ID EQUAL exp

    ID              shift and go to state 152

    const_declarators              shift and go to state 150
    const_declarator               shift and go to state 151

state 99

    (32) var_declaration -> type var_declarators .

    SEMI            reduce using rule 32 (var_declaration -> type var_declarators .)


state 100

    (33) var_declarators -> var_declarator .
    (34) var_declarators -> var_declarator . COMMA var_declarators

    SEMI            reduce using rule 33 (var_declarators -> var_declarator .)
    COMMA           shift and go to state 153


state 101

    (35) var_declarator -> ID .
    (36) var_declarator -> ID . EQUAL exp

    COMMA           reduce using rule 35 (var_declarator -> ID .)
    SEMI            reduce using rule 35 (var_declarator -> ID .)
    EQUAL           shift and go to state 154


state 102

    (46) exp_statement -> statement_exp SEMI .

    CONST           reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    LBRACE          reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    SEMI            reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    IF              reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    SWITCH          reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    WHILE           reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    DO              reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    FOR             reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    FOREACH         reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    BREAK           reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    CONTINUE        reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    RETURN          reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    OBJECT          reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    STRING          reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    BOOL            reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    VOID            reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    NEW             reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    PLUSPLUS        reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    MINUSMINUS      reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    INT             reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    LONG            reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    CHAR            reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    FLOAT           reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    DOUBLE          reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    DECIMAL         reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    TRUE            reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    FALSE           reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    NULL            reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    INTNUM          reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    HEXADECIMALNUM  reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    BINARYNUM       reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    FLOATNUM        reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    DOUBLENUM       reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    DECIMALNUM      reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    CHARLITERAL     reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    STRINGLITERAL   reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    ID              reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    THIS            reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    LPAREN          reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    TYPEOF          reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    SIZEOF          reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    RBRACE          reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    CASE            reduce using rule 46 (exp_statement -> statement_exp SEMI .)
    DEFAULT         reduce using rule 46 (exp_statement -> statement_exp SEMI .)


state 103

    (69) if_statement -> IF LPAREN . exp RPAREN block
    (70) if_statement -> IF LPAREN . exp RPAREN block ELSE block
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    exp                            shift and go to state 155
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 104

    (144) cast_exp -> LPAREN type . RPAREN unary_exp

    RPAREN          shift and go to state 156


state 105

    (179) assignment -> unary_exp . EQUAL exp
    (178) multiplicative_exp -> unary_exp .

    EQUAL           shift and go to state 141
    STAR            reduce using rule 178 (multiplicative_exp -> unary_exp .)
    SLASH           reduce using rule 178 (multiplicative_exp -> unary_exp .)
    PERCENT         reduce using rule 178 (multiplicative_exp -> unary_exp .)
    PLUS            reduce using rule 178 (multiplicative_exp -> unary_exp .)
    MINUS           reduce using rule 178 (multiplicative_exp -> unary_exp .)
    LSHIFT          reduce using rule 178 (multiplicative_exp -> unary_exp .)
    RSHIFT          reduce using rule 178 (multiplicative_exp -> unary_exp .)
    LT              reduce using rule 178 (multiplicative_exp -> unary_exp .)
    GT              reduce using rule 178 (multiplicative_exp -> unary_exp .)
    LEQ             reduce using rule 178 (multiplicative_exp -> unary_exp .)
    GEQ             reduce using rule 178 (multiplicative_exp -> unary_exp .)
    IS              reduce using rule 178 (multiplicative_exp -> unary_exp .)
    EQEQUAL         reduce using rule 178 (multiplicative_exp -> unary_exp .)
    NOTEQUAL        reduce using rule 178 (multiplicative_exp -> unary_exp .)
    AMPER           reduce using rule 178 (multiplicative_exp -> unary_exp .)
    CIRCUMFLEX      reduce using rule 178 (multiplicative_exp -> unary_exp .)
    PIPE            reduce using rule 178 (multiplicative_exp -> unary_exp .)
    AMPERAMPER      reduce using rule 178 (multiplicative_exp -> unary_exp .)
    HOOK            reduce using rule 178 (multiplicative_exp -> unary_exp .)
    PIPEPIPE        reduce using rule 178 (multiplicative_exp -> unary_exp .)
    RPAREN          reduce using rule 178 (multiplicative_exp -> unary_exp .)
    SEMI            reduce using rule 178 (multiplicative_exp -> unary_exp .)
    COMMA           reduce using rule 178 (multiplicative_exp -> unary_exp .)
    RSB             reduce using rule 178 (multiplicative_exp -> unary_exp .)
    COLON           reduce using rule 178 (multiplicative_exp -> unary_exp .)
    RBRACE          reduce using rule 178 (multiplicative_exp -> unary_exp .)


state 106

    (122) parenthesized_exp -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 157


state 107

    (145) exp -> non_assignment_exp .

    RPAREN          reduce using rule 145 (exp -> non_assignment_exp .)
    SEMI            reduce using rule 145 (exp -> non_assignment_exp .)
    COMMA           reduce using rule 145 (exp -> non_assignment_exp .)
    RSB             reduce using rule 145 (exp -> non_assignment_exp .)
    COLON           reduce using rule 145 (exp -> non_assignment_exp .)
    RBRACE          reduce using rule 145 (exp -> non_assignment_exp .)


state 108

    (146) exp -> assignment .

    RPAREN          reduce using rule 146 (exp -> assignment .)
    SEMI            reduce using rule 146 (exp -> assignment .)
    COMMA           reduce using rule 146 (exp -> assignment .)
    RSB             reduce using rule 146 (exp -> assignment .)
    COLON           reduce using rule 146 (exp -> assignment .)
    RBRACE          reduce using rule 146 (exp -> assignment .)


state 109

    (147) non_assignment_exp -> conditional_exp .

    RPAREN          reduce using rule 147 (non_assignment_exp -> conditional_exp .)
    SEMI            reduce using rule 147 (non_assignment_exp -> conditional_exp .)
    COMMA           reduce using rule 147 (non_assignment_exp -> conditional_exp .)
    RSB             reduce using rule 147 (non_assignment_exp -> conditional_exp .)
    COLON           reduce using rule 147 (non_assignment_exp -> conditional_exp .)
    RBRACE          reduce using rule 147 (non_assignment_exp -> conditional_exp .)


state 110

    (148) conditional_exp -> conditional_or_exp . HOOK exp COLON exp
    (149) conditional_exp -> conditional_or_exp .
    (150) conditional_or_exp -> conditional_or_exp . PIPEPIPE conditional_and_exp

    HOOK            shift and go to state 158
    RPAREN          reduce using rule 149 (conditional_exp -> conditional_or_exp .)
    SEMI            reduce using rule 149 (conditional_exp -> conditional_or_exp .)
    COMMA           reduce using rule 149 (conditional_exp -> conditional_or_exp .)
    RSB             reduce using rule 149 (conditional_exp -> conditional_or_exp .)
    COLON           reduce using rule 149 (conditional_exp -> conditional_or_exp .)
    RBRACE          reduce using rule 149 (conditional_exp -> conditional_or_exp .)
    PIPEPIPE        shift and go to state 159


state 111

    (140) unary_exp -> primary_exp .
    (124) member_access -> primary_exp . DOT ID
    (126) invocation_exp -> primary_exp . LPAREN RPAREN
    (127) invocation_exp -> primary_exp . LPAREN arg_list RPAREN
    (63) post_increment_exp -> primary_exp . PLUSPLUS
    (64) post_decrement_exp -> primary_exp . MINUSMINUS

    EQUAL           reduce using rule 140 (unary_exp -> primary_exp .)
    STAR            reduce using rule 140 (unary_exp -> primary_exp .)
    SLASH           reduce using rule 140 (unary_exp -> primary_exp .)
    PERCENT         reduce using rule 140 (unary_exp -> primary_exp .)
    PLUS            reduce using rule 140 (unary_exp -> primary_exp .)
    MINUS           reduce using rule 140 (unary_exp -> primary_exp .)
    LSHIFT          reduce using rule 140 (unary_exp -> primary_exp .)
    RSHIFT          reduce using rule 140 (unary_exp -> primary_exp .)
    LT              reduce using rule 140 (unary_exp -> primary_exp .)
    GT              reduce using rule 140 (unary_exp -> primary_exp .)
    LEQ             reduce using rule 140 (unary_exp -> primary_exp .)
    GEQ             reduce using rule 140 (unary_exp -> primary_exp .)
    IS              reduce using rule 140 (unary_exp -> primary_exp .)
    EQEQUAL         reduce using rule 140 (unary_exp -> primary_exp .)
    NOTEQUAL        reduce using rule 140 (unary_exp -> primary_exp .)
    AMPER           reduce using rule 140 (unary_exp -> primary_exp .)
    CIRCUMFLEX      reduce using rule 140 (unary_exp -> primary_exp .)
    PIPE            reduce using rule 140 (unary_exp -> primary_exp .)
    AMPERAMPER      reduce using rule 140 (unary_exp -> primary_exp .)
    HOOK            reduce using rule 140 (unary_exp -> primary_exp .)
    PIPEPIPE        reduce using rule 140 (unary_exp -> primary_exp .)
    RPAREN          reduce using rule 140 (unary_exp -> primary_exp .)
    SEMI            reduce using rule 140 (unary_exp -> primary_exp .)
    COMMA           reduce using rule 140 (unary_exp -> primary_exp .)
    RSB             reduce using rule 140 (unary_exp -> primary_exp .)
    COLON           reduce using rule 140 (unary_exp -> primary_exp .)
    RBRACE          reduce using rule 140 (unary_exp -> primary_exp .)
    DOT             shift and go to state 139
    LPAREN          shift and go to state 136
    PLUSPLUS        shift and go to state 137
    MINUSMINUS      shift and go to state 138


state 112

    (141) unary_exp -> pre_increment_exp .

    EQUAL           reduce using rule 141 (unary_exp -> pre_increment_exp .)
    STAR            reduce using rule 141 (unary_exp -> pre_increment_exp .)
    SLASH           reduce using rule 141 (unary_exp -> pre_increment_exp .)
    PERCENT         reduce using rule 141 (unary_exp -> pre_increment_exp .)
    PLUS            reduce using rule 141 (unary_exp -> pre_increment_exp .)
    MINUS           reduce using rule 141 (unary_exp -> pre_increment_exp .)
    LSHIFT          reduce using rule 141 (unary_exp -> pre_increment_exp .)
    RSHIFT          reduce using rule 141 (unary_exp -> pre_increment_exp .)
    LT              reduce using rule 141 (unary_exp -> pre_increment_exp .)
    GT              reduce using rule 141 (unary_exp -> pre_increment_exp .)
    LEQ             reduce using rule 141 (unary_exp -> pre_increment_exp .)
    GEQ             reduce using rule 141 (unary_exp -> pre_increment_exp .)
    IS              reduce using rule 141 (unary_exp -> pre_increment_exp .)
    EQEQUAL         reduce using rule 141 (unary_exp -> pre_increment_exp .)
    NOTEQUAL        reduce using rule 141 (unary_exp -> pre_increment_exp .)
    AMPER           reduce using rule 141 (unary_exp -> pre_increment_exp .)
    CIRCUMFLEX      reduce using rule 141 (unary_exp -> pre_increment_exp .)
    PIPE            reduce using rule 141 (unary_exp -> pre_increment_exp .)
    AMPERAMPER      reduce using rule 141 (unary_exp -> pre_increment_exp .)
    HOOK            reduce using rule 141 (unary_exp -> pre_increment_exp .)
    PIPEPIPE        reduce using rule 141 (unary_exp -> pre_increment_exp .)
    RPAREN          reduce using rule 141 (unary_exp -> pre_increment_exp .)
    SEMI            reduce using rule 141 (unary_exp -> pre_increment_exp .)
    COMMA           reduce using rule 141 (unary_exp -> pre_increment_exp .)
    RSB             reduce using rule 141 (unary_exp -> pre_increment_exp .)
    COLON           reduce using rule 141 (unary_exp -> pre_increment_exp .)
    RBRACE          reduce using rule 141 (unary_exp -> pre_increment_exp .)


state 113

    (142) unary_exp -> pre_decrement_exp .

    EQUAL           reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    STAR            reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    SLASH           reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    PERCENT         reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    PLUS            reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    MINUS           reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    LSHIFT          reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    RSHIFT          reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    LT              reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    GT              reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    LEQ             reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    GEQ             reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    IS              reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    EQEQUAL         reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    NOTEQUAL        reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    AMPER           reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    CIRCUMFLEX      reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    PIPE            reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    AMPERAMPER      reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    HOOK            reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    PIPEPIPE        reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    RPAREN          reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    SEMI            reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    COMMA           reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    RSB             reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    COLON           reduce using rule 142 (unary_exp -> pre_decrement_exp .)
    RBRACE          reduce using rule 142 (unary_exp -> pre_decrement_exp .)


state 114

    (151) conditional_or_exp -> conditional_and_exp .
    (152) conditional_and_exp -> conditional_and_exp . AMPERAMPER inclusive_or_exp

    HOOK            reduce using rule 151 (conditional_or_exp -> conditional_and_exp .)
    PIPEPIPE        reduce using rule 151 (conditional_or_exp -> conditional_and_exp .)
    RPAREN          reduce using rule 151 (conditional_or_exp -> conditional_and_exp .)
    SEMI            reduce using rule 151 (conditional_or_exp -> conditional_and_exp .)
    COMMA           reduce using rule 151 (conditional_or_exp -> conditional_and_exp .)
    RSB             reduce using rule 151 (conditional_or_exp -> conditional_and_exp .)
    COLON           reduce using rule 151 (conditional_or_exp -> conditional_and_exp .)
    RBRACE          reduce using rule 151 (conditional_or_exp -> conditional_and_exp .)
    AMPERAMPER      shift and go to state 160


state 115

    (153) conditional_and_exp -> inclusive_or_exp .
    (154) inclusive_or_exp -> inclusive_or_exp . PIPE exclusive_or_exp

    AMPERAMPER      reduce using rule 153 (conditional_and_exp -> inclusive_or_exp .)
    HOOK            reduce using rule 153 (conditional_and_exp -> inclusive_or_exp .)
    PIPEPIPE        reduce using rule 153 (conditional_and_exp -> inclusive_or_exp .)
    RPAREN          reduce using rule 153 (conditional_and_exp -> inclusive_or_exp .)
    SEMI            reduce using rule 153 (conditional_and_exp -> inclusive_or_exp .)
    COMMA           reduce using rule 153 (conditional_and_exp -> inclusive_or_exp .)
    RSB             reduce using rule 153 (conditional_and_exp -> inclusive_or_exp .)
    COLON           reduce using rule 153 (conditional_and_exp -> inclusive_or_exp .)
    RBRACE          reduce using rule 153 (conditional_and_exp -> inclusive_or_exp .)
    PIPE            shift and go to state 161


state 116

    (125) primary_no_array_creation_exp -> invocation_exp .

    LSB             reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    DOT             reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    LPAREN          reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    PLUSPLUS        reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    MINUSMINUS      reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    EQUAL           reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    STAR            reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    SLASH           reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    PERCENT         reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    PLUS            reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    MINUS           reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    LSHIFT          reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    RSHIFT          reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    LT              reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    GT              reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    LEQ             reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    GEQ             reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    IS              reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    EQEQUAL         reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    NOTEQUAL        reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    AMPER           reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    CIRCUMFLEX      reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    PIPE            reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    AMPERAMPER      reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    HOOK            reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    PIPEPIPE        reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    RPAREN          reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    SEMI            reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    COMMA           reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    RSB             reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    COLON           reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)
    RBRACE          reduce using rule 125 (primary_no_array_creation_exp -> invocation_exp .)


state 117

    (131) primary_no_array_creation_exp -> post_increment_exp .

    LSB             reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    DOT             reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    LPAREN          reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    PLUSPLUS        reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    MINUSMINUS      reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    EQUAL           reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    STAR            reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    SLASH           reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    PERCENT         reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    PLUS            reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    MINUS           reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    LSHIFT          reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    RSHIFT          reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    LT              reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    GT              reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    LEQ             reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    GEQ             reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    IS              reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    EQEQUAL         reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    NOTEQUAL        reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    AMPER           reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    CIRCUMFLEX      reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    PIPE            reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    AMPERAMPER      reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    HOOK            reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    PIPEPIPE        reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    RPAREN          reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    SEMI            reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    COMMA           reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    RSB             reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    COLON           reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)
    RBRACE          reduce using rule 131 (primary_no_array_creation_exp -> post_increment_exp .)


state 118

    (132) primary_no_array_creation_exp -> post_decrement_exp .

    LSB             reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    DOT             reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    LPAREN          reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    PLUSPLUS        reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    MINUSMINUS      reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    EQUAL           reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    STAR            reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    SLASH           reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    PERCENT         reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    PLUS            reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    MINUS           reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    LSHIFT          reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    RSHIFT          reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    LT              reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    GT              reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    LEQ             reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    GEQ             reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    IS              reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    EQEQUAL         reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    NOTEQUAL        reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    AMPER           reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    CIRCUMFLEX      reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    PIPE            reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    AMPERAMPER      reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    HOOK            reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    PIPEPIPE        reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    RPAREN          reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    SEMI            reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    COMMA           reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    RSB             reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    COLON           reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)
    RBRACE          reduce using rule 132 (primary_no_array_creation_exp -> post_decrement_exp .)


state 119

    (133) primary_no_array_creation_exp -> object_creation_exp .

    LSB             reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    DOT             reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    LPAREN          reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    PLUSPLUS        reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    MINUSMINUS      reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    EQUAL           reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    STAR            reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    SLASH           reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    PERCENT         reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    PLUS            reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    MINUS           reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    LSHIFT          reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    RSHIFT          reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    LT              reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    GT              reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    LEQ             reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    GEQ             reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    IS              reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    EQEQUAL         reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    NOTEQUAL        reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    AMPER           reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    CIRCUMFLEX      reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    PIPE            reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    AMPERAMPER      reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    HOOK            reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    PIPEPIPE        reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    RPAREN          reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    SEMI            reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    COMMA           reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    RSB             reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    COLON           reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)
    RBRACE          reduce using rule 133 (primary_no_array_creation_exp -> object_creation_exp .)


state 120

    (155) inclusive_or_exp -> exclusive_or_exp .
    (156) exclusive_or_exp -> exclusive_or_exp . CIRCUMFLEX and_exp

    PIPE            reduce using rule 155 (inclusive_or_exp -> exclusive_or_exp .)
    AMPERAMPER      reduce using rule 155 (inclusive_or_exp -> exclusive_or_exp .)
    HOOK            reduce using rule 155 (inclusive_or_exp -> exclusive_or_exp .)
    PIPEPIPE        reduce using rule 155 (inclusive_or_exp -> exclusive_or_exp .)
    RPAREN          reduce using rule 155 (inclusive_or_exp -> exclusive_or_exp .)
    SEMI            reduce using rule 155 (inclusive_or_exp -> exclusive_or_exp .)
    COMMA           reduce using rule 155 (inclusive_or_exp -> exclusive_or_exp .)
    RSB             reduce using rule 155 (inclusive_or_exp -> exclusive_or_exp .)
    COLON           reduce using rule 155 (inclusive_or_exp -> exclusive_or_exp .)
    RBRACE          reduce using rule 155 (inclusive_or_exp -> exclusive_or_exp .)
    CIRCUMFLEX      shift and go to state 162


state 121

    (157) exclusive_or_exp -> and_exp .
    (158) and_exp -> and_exp . AMPER equality_exp

    CIRCUMFLEX      reduce using rule 157 (exclusive_or_exp -> and_exp .)
    PIPE            reduce using rule 157 (exclusive_or_exp -> and_exp .)
    AMPERAMPER      reduce using rule 157 (exclusive_or_exp -> and_exp .)
    HOOK            reduce using rule 157 (exclusive_or_exp -> and_exp .)
    PIPEPIPE        reduce using rule 157 (exclusive_or_exp -> and_exp .)
    RPAREN          reduce using rule 157 (exclusive_or_exp -> and_exp .)
    SEMI            reduce using rule 157 (exclusive_or_exp -> and_exp .)
    COMMA           reduce using rule 157 (exclusive_or_exp -> and_exp .)
    RSB             reduce using rule 157 (exclusive_or_exp -> and_exp .)
    COLON           reduce using rule 157 (exclusive_or_exp -> and_exp .)
    RBRACE          reduce using rule 157 (exclusive_or_exp -> and_exp .)
    AMPER           shift and go to state 163


state 122

    (159) and_exp -> equality_exp .
    (160) equality_exp -> equality_exp . EQEQUAL relational_exp
    (161) equality_exp -> equality_exp . NOTEQUAL relational_exp

    AMPER           reduce using rule 159 (and_exp -> equality_exp .)
    CIRCUMFLEX      reduce using rule 159 (and_exp -> equality_exp .)
    PIPE            reduce using rule 159 (and_exp -> equality_exp .)
    AMPERAMPER      reduce using rule 159 (and_exp -> equality_exp .)
    HOOK            reduce using rule 159 (and_exp -> equality_exp .)
    PIPEPIPE        reduce using rule 159 (and_exp -> equality_exp .)
    RPAREN          reduce using rule 159 (and_exp -> equality_exp .)
    SEMI            reduce using rule 159 (and_exp -> equality_exp .)
    COMMA           reduce using rule 159 (and_exp -> equality_exp .)
    RSB             reduce using rule 159 (and_exp -> equality_exp .)
    COLON           reduce using rule 159 (and_exp -> equality_exp .)
    RBRACE          reduce using rule 159 (and_exp -> equality_exp .)
    EQEQUAL         shift and go to state 164
    NOTEQUAL        shift and go to state 165


state 123

    (162) equality_exp -> relational_exp .
    (163) relational_exp -> relational_exp . LT shift_exp
    (164) relational_exp -> relational_exp . GT shift_exp
    (165) relational_exp -> relational_exp . LEQ shift_exp
    (166) relational_exp -> relational_exp . GEQ shift_exp
    (167) relational_exp -> relational_exp . IS type

    EQEQUAL         reduce using rule 162 (equality_exp -> relational_exp .)
    NOTEQUAL        reduce using rule 162 (equality_exp -> relational_exp .)
    AMPER           reduce using rule 162 (equality_exp -> relational_exp .)
    CIRCUMFLEX      reduce using rule 162 (equality_exp -> relational_exp .)
    PIPE            reduce using rule 162 (equality_exp -> relational_exp .)
    AMPERAMPER      reduce using rule 162 (equality_exp -> relational_exp .)
    HOOK            reduce using rule 162 (equality_exp -> relational_exp .)
    PIPEPIPE        reduce using rule 162 (equality_exp -> relational_exp .)
    RPAREN          reduce using rule 162 (equality_exp -> relational_exp .)
    SEMI            reduce using rule 162 (equality_exp -> relational_exp .)
    COMMA           reduce using rule 162 (equality_exp -> relational_exp .)
    RSB             reduce using rule 162 (equality_exp -> relational_exp .)
    COLON           reduce using rule 162 (equality_exp -> relational_exp .)
    RBRACE          reduce using rule 162 (equality_exp -> relational_exp .)
    LT              shift and go to state 166
    GT              shift and go to state 167
    LEQ             shift and go to state 168
    GEQ             shift and go to state 169
    IS              shift and go to state 170


state 124

    (168) relational_exp -> shift_exp .
    (169) shift_exp -> shift_exp . LSHIFT additive_exp
    (170) shift_exp -> shift_exp . RSHIFT additive_exp

    LT              reduce using rule 168 (relational_exp -> shift_exp .)
    GT              reduce using rule 168 (relational_exp -> shift_exp .)
    LEQ             reduce using rule 168 (relational_exp -> shift_exp .)
    GEQ             reduce using rule 168 (relational_exp -> shift_exp .)
    IS              reduce using rule 168 (relational_exp -> shift_exp .)
    EQEQUAL         reduce using rule 168 (relational_exp -> shift_exp .)
    NOTEQUAL        reduce using rule 168 (relational_exp -> shift_exp .)
    AMPER           reduce using rule 168 (relational_exp -> shift_exp .)
    CIRCUMFLEX      reduce using rule 168 (relational_exp -> shift_exp .)
    PIPE            reduce using rule 168 (relational_exp -> shift_exp .)
    AMPERAMPER      reduce using rule 168 (relational_exp -> shift_exp .)
    HOOK            reduce using rule 168 (relational_exp -> shift_exp .)
    PIPEPIPE        reduce using rule 168 (relational_exp -> shift_exp .)
    RPAREN          reduce using rule 168 (relational_exp -> shift_exp .)
    SEMI            reduce using rule 168 (relational_exp -> shift_exp .)
    COMMA           reduce using rule 168 (relational_exp -> shift_exp .)
    RSB             reduce using rule 168 (relational_exp -> shift_exp .)
    COLON           reduce using rule 168 (relational_exp -> shift_exp .)
    RBRACE          reduce using rule 168 (relational_exp -> shift_exp .)
    LSHIFT          shift and go to state 171
    RSHIFT          shift and go to state 172


state 125

    (171) shift_exp -> additive_exp .
    (172) additive_exp -> additive_exp . PLUS multiplicative_exp
    (173) additive_exp -> additive_exp . MINUS multiplicative_exp

    LSHIFT          reduce using rule 171 (shift_exp -> additive_exp .)
    RSHIFT          reduce using rule 171 (shift_exp -> additive_exp .)
    LT              reduce using rule 171 (shift_exp -> additive_exp .)
    GT              reduce using rule 171 (shift_exp -> additive_exp .)
    LEQ             reduce using rule 171 (shift_exp -> additive_exp .)
    GEQ             reduce using rule 171 (shift_exp -> additive_exp .)
    IS              reduce using rule 171 (shift_exp -> additive_exp .)
    EQEQUAL         reduce using rule 171 (shift_exp -> additive_exp .)
    NOTEQUAL        reduce using rule 171 (shift_exp -> additive_exp .)
    AMPER           reduce using rule 171 (shift_exp -> additive_exp .)
    CIRCUMFLEX      reduce using rule 171 (shift_exp -> additive_exp .)
    PIPE            reduce using rule 171 (shift_exp -> additive_exp .)
    AMPERAMPER      reduce using rule 171 (shift_exp -> additive_exp .)
    HOOK            reduce using rule 171 (shift_exp -> additive_exp .)
    PIPEPIPE        reduce using rule 171 (shift_exp -> additive_exp .)
    RPAREN          reduce using rule 171 (shift_exp -> additive_exp .)
    SEMI            reduce using rule 171 (shift_exp -> additive_exp .)
    COMMA           reduce using rule 171 (shift_exp -> additive_exp .)
    RSB             reduce using rule 171 (shift_exp -> additive_exp .)
    COLON           reduce using rule 171 (shift_exp -> additive_exp .)
    RBRACE          reduce using rule 171 (shift_exp -> additive_exp .)
    PLUS            shift and go to state 173
    MINUS           shift and go to state 174


state 126

    (174) additive_exp -> multiplicative_exp .
    (175) multiplicative_exp -> multiplicative_exp . STAR unary_exp
    (176) multiplicative_exp -> multiplicative_exp . SLASH unary_exp
    (177) multiplicative_exp -> multiplicative_exp . PERCENT unary_exp

    PLUS            reduce using rule 174 (additive_exp -> multiplicative_exp .)
    MINUS           reduce using rule 174 (additive_exp -> multiplicative_exp .)
    LSHIFT          reduce using rule 174 (additive_exp -> multiplicative_exp .)
    RSHIFT          reduce using rule 174 (additive_exp -> multiplicative_exp .)
    LT              reduce using rule 174 (additive_exp -> multiplicative_exp .)
    GT              reduce using rule 174 (additive_exp -> multiplicative_exp .)
    LEQ             reduce using rule 174 (additive_exp -> multiplicative_exp .)
    GEQ             reduce using rule 174 (additive_exp -> multiplicative_exp .)
    IS              reduce using rule 174 (additive_exp -> multiplicative_exp .)
    EQEQUAL         reduce using rule 174 (additive_exp -> multiplicative_exp .)
    NOTEQUAL        reduce using rule 174 (additive_exp -> multiplicative_exp .)
    AMPER           reduce using rule 174 (additive_exp -> multiplicative_exp .)
    CIRCUMFLEX      reduce using rule 174 (additive_exp -> multiplicative_exp .)
    PIPE            reduce using rule 174 (additive_exp -> multiplicative_exp .)
    AMPERAMPER      reduce using rule 174 (additive_exp -> multiplicative_exp .)
    HOOK            reduce using rule 174 (additive_exp -> multiplicative_exp .)
    PIPEPIPE        reduce using rule 174 (additive_exp -> multiplicative_exp .)
    RPAREN          reduce using rule 174 (additive_exp -> multiplicative_exp .)
    SEMI            reduce using rule 174 (additive_exp -> multiplicative_exp .)
    COMMA           reduce using rule 174 (additive_exp -> multiplicative_exp .)
    RSB             reduce using rule 174 (additive_exp -> multiplicative_exp .)
    COLON           reduce using rule 174 (additive_exp -> multiplicative_exp .)
    RBRACE          reduce using rule 174 (additive_exp -> multiplicative_exp .)
    STAR            shift and go to state 175
    SLASH           shift and go to state 176
    PERCENT         shift and go to state 177


state 127

    (71) switch_statement -> SWITCH LPAREN . exp RPAREN LBRACE switch_body RBRACE
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    exp                            shift and go to state 178
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 128

    (83) while_statement -> WHILE LPAREN . exp RPAREN embedded_statement
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    exp                            shift and go to state 179
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 129

    (84) do_statement -> DO embedded_statement . WHILE LPAREN exp RPAREN SEMI

    WHILE           shift and go to state 180


state 130

    (85) for_statement -> FOR LPAREN . for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> FOR LPAREN . for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> FOR LPAREN . for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> FOR LPAREN . for_initializer SEMI SEMI RPAREN embedded_statement
    (89) for_statement -> FOR LPAREN . SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> FOR LPAREN . SEMI for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> FOR LPAREN . SEMI SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> FOR LPAREN . SEMI SEMI RPAREN embedded_statement
    (93) for_initializer -> . var_declaration
    (32) var_declaration -> . type var_declarators
    (3) type -> . class_type
    (4) type -> . value_type
    (5) class_type -> . OBJECT
    (6) class_type -> . STRING
    (7) value_type -> . integral_type
    (8) value_type -> . floating_point_type
    (9) value_type -> . BOOL
    (10) value_type -> . VOID
    (11) integral_type -> . INT
    (12) integral_type -> . LONG
    (13) integral_type -> . CHAR
    (14) floating_point_type -> . FLOAT
    (15) floating_point_type -> . DOUBLE
    (16) floating_point_type -> . DECIMAL

    SEMI            shift and go to state 182
    OBJECT          shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 11
    VOID            shift and go to state 12
    INT             shift and go to state 13
    LONG            shift and go to state 14
    CHAR            shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17
    DECIMAL         shift and go to state 18

    for_initializer                shift and go to state 181
    var_declaration                shift and go to state 183
    type                           shift and go to state 38
    class_type                     shift and go to state 5
    value_type                     shift and go to state 6
    integral_type                  shift and go to state 9
    floating_point_type            shift and go to state 10

state 131

    (98) foreach_statement -> FOREACH LPAREN . type ID IN exp RPAREN embedded_statement
    (3) type -> . class_type
    (4) type -> . value_type
    (5) class_type -> . OBJECT
    (6) class_type -> . STRING
    (7) value_type -> . integral_type
    (8) value_type -> . floating_point_type
    (9) value_type -> . BOOL
    (10) value_type -> . VOID
    (11) integral_type -> . INT
    (12) integral_type -> . LONG
    (13) integral_type -> . CHAR
    (14) floating_point_type -> . FLOAT
    (15) floating_point_type -> . DOUBLE
    (16) floating_point_type -> . DECIMAL

    OBJECT          shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 11
    VOID            shift and go to state 12
    INT             shift and go to state 13
    LONG            shift and go to state 14
    CHAR            shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17
    DECIMAL         shift and go to state 18

    type                           shift and go to state 184
    class_type                     shift and go to state 5
    value_type                     shift and go to state 6
    integral_type                  shift and go to state 9
    floating_point_type            shift and go to state 10

state 132

    (102) break_statement -> BREAK SEMI .

    CONST           reduce using rule 102 (break_statement -> BREAK SEMI .)
    LBRACE          reduce using rule 102 (break_statement -> BREAK SEMI .)
    SEMI            reduce using rule 102 (break_statement -> BREAK SEMI .)
    IF              reduce using rule 102 (break_statement -> BREAK SEMI .)
    SWITCH          reduce using rule 102 (break_statement -> BREAK SEMI .)
    WHILE           reduce using rule 102 (break_statement -> BREAK SEMI .)
    DO              reduce using rule 102 (break_statement -> BREAK SEMI .)
    FOR             reduce using rule 102 (break_statement -> BREAK SEMI .)
    FOREACH         reduce using rule 102 (break_statement -> BREAK SEMI .)
    BREAK           reduce using rule 102 (break_statement -> BREAK SEMI .)
    CONTINUE        reduce using rule 102 (break_statement -> BREAK SEMI .)
    RETURN          reduce using rule 102 (break_statement -> BREAK SEMI .)
    OBJECT          reduce using rule 102 (break_statement -> BREAK SEMI .)
    STRING          reduce using rule 102 (break_statement -> BREAK SEMI .)
    BOOL            reduce using rule 102 (break_statement -> BREAK SEMI .)
    VOID            reduce using rule 102 (break_statement -> BREAK SEMI .)
    NEW             reduce using rule 102 (break_statement -> BREAK SEMI .)
    PLUSPLUS        reduce using rule 102 (break_statement -> BREAK SEMI .)
    MINUSMINUS      reduce using rule 102 (break_statement -> BREAK SEMI .)
    INT             reduce using rule 102 (break_statement -> BREAK SEMI .)
    LONG            reduce using rule 102 (break_statement -> BREAK SEMI .)
    CHAR            reduce using rule 102 (break_statement -> BREAK SEMI .)
    FLOAT           reduce using rule 102 (break_statement -> BREAK SEMI .)
    DOUBLE          reduce using rule 102 (break_statement -> BREAK SEMI .)
    DECIMAL         reduce using rule 102 (break_statement -> BREAK SEMI .)
    TRUE            reduce using rule 102 (break_statement -> BREAK SEMI .)
    FALSE           reduce using rule 102 (break_statement -> BREAK SEMI .)
    NULL            reduce using rule 102 (break_statement -> BREAK SEMI .)
    INTNUM          reduce using rule 102 (break_statement -> BREAK SEMI .)
    HEXADECIMALNUM  reduce using rule 102 (break_statement -> BREAK SEMI .)
    BINARYNUM       reduce using rule 102 (break_statement -> BREAK SEMI .)
    FLOATNUM        reduce using rule 102 (break_statement -> BREAK SEMI .)
    DOUBLENUM       reduce using rule 102 (break_statement -> BREAK SEMI .)
    DECIMALNUM      reduce using rule 102 (break_statement -> BREAK SEMI .)
    CHARLITERAL     reduce using rule 102 (break_statement -> BREAK SEMI .)
    STRINGLITERAL   reduce using rule 102 (break_statement -> BREAK SEMI .)
    ID              reduce using rule 102 (break_statement -> BREAK SEMI .)
    THIS            reduce using rule 102 (break_statement -> BREAK SEMI .)
    LPAREN          reduce using rule 102 (break_statement -> BREAK SEMI .)
    TYPEOF          reduce using rule 102 (break_statement -> BREAK SEMI .)
    SIZEOF          reduce using rule 102 (break_statement -> BREAK SEMI .)
    RBRACE          reduce using rule 102 (break_statement -> BREAK SEMI .)
    CASE            reduce using rule 102 (break_statement -> BREAK SEMI .)
    DEFAULT         reduce using rule 102 (break_statement -> BREAK SEMI .)


state 133

    (103) continue_statement -> CONTINUE SEMI .

    CONST           reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    LBRACE          reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    SEMI            reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    IF              reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    SWITCH          reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    WHILE           reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    DO              reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    FOR             reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    FOREACH         reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    BREAK           reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    CONTINUE        reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    RETURN          reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    OBJECT          reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    STRING          reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    BOOL            reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    VOID            reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    NEW             reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    PLUSPLUS        reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    MINUSMINUS      reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    INT             reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    LONG            reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    CHAR            reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    FLOAT           reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    DOUBLE          reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    DECIMAL         reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    TRUE            reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    FALSE           reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    NULL            reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    INTNUM          reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    HEXADECIMALNUM  reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    BINARYNUM       reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    FLOATNUM        reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    DOUBLENUM       reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    DECIMALNUM      reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    CHARLITERAL     reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    STRINGLITERAL   reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    ID              reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    THIS            reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    LPAREN          reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    TYPEOF          reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    SIZEOF          reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    RBRACE          reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    CASE            reduce using rule 103 (continue_statement -> CONTINUE SEMI .)
    DEFAULT         reduce using rule 103 (continue_statement -> CONTINUE SEMI .)


state 134

    (104) return_statement -> RETURN SEMI .

    CONST           reduce using rule 104 (return_statement -> RETURN SEMI .)
    LBRACE          reduce using rule 104 (return_statement -> RETURN SEMI .)
    SEMI            reduce using rule 104 (return_statement -> RETURN SEMI .)
    IF              reduce using rule 104 (return_statement -> RETURN SEMI .)
    SWITCH          reduce using rule 104 (return_statement -> RETURN SEMI .)
    WHILE           reduce using rule 104 (return_statement -> RETURN SEMI .)
    DO              reduce using rule 104 (return_statement -> RETURN SEMI .)
    FOR             reduce using rule 104 (return_statement -> RETURN SEMI .)
    FOREACH         reduce using rule 104 (return_statement -> RETURN SEMI .)
    BREAK           reduce using rule 104 (return_statement -> RETURN SEMI .)
    CONTINUE        reduce using rule 104 (return_statement -> RETURN SEMI .)
    RETURN          reduce using rule 104 (return_statement -> RETURN SEMI .)
    OBJECT          reduce using rule 104 (return_statement -> RETURN SEMI .)
    STRING          reduce using rule 104 (return_statement -> RETURN SEMI .)
    BOOL            reduce using rule 104 (return_statement -> RETURN SEMI .)
    VOID            reduce using rule 104 (return_statement -> RETURN SEMI .)
    NEW             reduce using rule 104 (return_statement -> RETURN SEMI .)
    PLUSPLUS        reduce using rule 104 (return_statement -> RETURN SEMI .)
    MINUSMINUS      reduce using rule 104 (return_statement -> RETURN SEMI .)
    INT             reduce using rule 104 (return_statement -> RETURN SEMI .)
    LONG            reduce using rule 104 (return_statement -> RETURN SEMI .)
    CHAR            reduce using rule 104 (return_statement -> RETURN SEMI .)
    FLOAT           reduce using rule 104 (return_statement -> RETURN SEMI .)
    DOUBLE          reduce using rule 104 (return_statement -> RETURN SEMI .)
    DECIMAL         reduce using rule 104 (return_statement -> RETURN SEMI .)
    TRUE            reduce using rule 104 (return_statement -> RETURN SEMI .)
    FALSE           reduce using rule 104 (return_statement -> RETURN SEMI .)
    NULL            reduce using rule 104 (return_statement -> RETURN SEMI .)
    INTNUM          reduce using rule 104 (return_statement -> RETURN SEMI .)
    HEXADECIMALNUM  reduce using rule 104 (return_statement -> RETURN SEMI .)
    BINARYNUM       reduce using rule 104 (return_statement -> RETURN SEMI .)
    FLOATNUM        reduce using rule 104 (return_statement -> RETURN SEMI .)
    DOUBLENUM       reduce using rule 104 (return_statement -> RETURN SEMI .)
    DECIMALNUM      reduce using rule 104 (return_statement -> RETURN SEMI .)
    CHARLITERAL     reduce using rule 104 (return_statement -> RETURN SEMI .)
    STRINGLITERAL   reduce using rule 104 (return_statement -> RETURN SEMI .)
    ID              reduce using rule 104 (return_statement -> RETURN SEMI .)
    THIS            reduce using rule 104 (return_statement -> RETURN SEMI .)
    LPAREN          reduce using rule 104 (return_statement -> RETURN SEMI .)
    TYPEOF          reduce using rule 104 (return_statement -> RETURN SEMI .)
    SIZEOF          reduce using rule 104 (return_statement -> RETURN SEMI .)
    RBRACE          reduce using rule 104 (return_statement -> RETURN SEMI .)
    CASE            reduce using rule 104 (return_statement -> RETURN SEMI .)
    DEFAULT         reduce using rule 104 (return_statement -> RETURN SEMI .)


state 135

    (105) return_statement -> RETURN exp . SEMI

    SEMI            shift and go to state 185


state 136

    (126) invocation_exp -> primary_exp LPAREN . RPAREN
    (127) invocation_exp -> primary_exp LPAREN . arg_list RPAREN
    (106) arg_list -> . exp
    (107) arg_list -> . exp COMMA arg_list
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    RPAREN          shift and go to state 186
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    primary_exp                    shift and go to state 111
    arg_list                       shift and go to state 187
    exp                            shift and go to state 188
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    conditional_or_exp             shift and go to state 110
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 137

    (63) post_increment_exp -> primary_exp PLUSPLUS .

    SEMI            reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    LSB             reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    LPAREN          reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    PLUSPLUS        reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    MINUSMINUS      reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    DOT             reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    EQUAL           reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    STAR            reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    SLASH           reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    PERCENT         reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    PLUS            reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    MINUS           reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    LSHIFT          reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    RSHIFT          reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    LT              reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    GT              reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    LEQ             reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    GEQ             reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    IS              reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    EQEQUAL         reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    NOTEQUAL        reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    AMPER           reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    CIRCUMFLEX      reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    PIPE            reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    AMPERAMPER      reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    HOOK            reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    PIPEPIPE        reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    RPAREN          reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    COMMA           reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    RSB             reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    COLON           reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)
    RBRACE          reduce using rule 63 (post_increment_exp -> primary_exp PLUSPLUS .)


state 138

    (64) post_decrement_exp -> primary_exp MINUSMINUS .

    SEMI            reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    LSB             reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    LPAREN          reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    PLUSPLUS        reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    MINUSMINUS      reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    DOT             reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    EQUAL           reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    STAR            reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    SLASH           reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    PERCENT         reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    PLUS            reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    MINUS           reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    LSHIFT          reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    RSHIFT          reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    LT              reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    GT              reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    LEQ             reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    GEQ             reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    IS              reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    EQEQUAL         reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    NOTEQUAL        reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    AMPER           reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    CIRCUMFLEX      reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    PIPE            reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    AMPERAMPER      reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    HOOK            reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    PIPEPIPE        reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    RPAREN          reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    COMMA           reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    RSB             reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    COLON           reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)
    RBRACE          reduce using rule 64 (post_decrement_exp -> primary_exp MINUSMINUS .)


state 139

    (124) member_access -> primary_exp DOT . ID

    ID              shift and go to state 189


state 140

    (54) object_creation_exp -> NEW type . LPAREN RPAREN
    (55) object_creation_exp -> NEW type . LPAREN RPAREN object_initializer
    (56) object_creation_exp -> NEW type . LPAREN arg_list RPAREN
    (57) object_creation_exp -> NEW type . LPAREN arg_list RPAREN object_initializer

    LPAREN          shift and go to state 190


state 141

    (179) assignment -> unary_exp EQUAL . exp
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    unary_exp                      shift and go to state 105
    exp                            shift and go to state 191
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 142

    (65) pre_increment_exp -> PLUSPLUS unary_exp .

    SEMI            reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    EQUAL           reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    STAR            reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    SLASH           reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    PERCENT         reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    PLUS            reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    MINUS           reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    LSHIFT          reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    RSHIFT          reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    LT              reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    GT              reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    LEQ             reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    GEQ             reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    IS              reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    EQEQUAL         reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    NOTEQUAL        reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    AMPER           reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    CIRCUMFLEX      reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    PIPE            reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    AMPERAMPER      reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    HOOK            reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    PIPEPIPE        reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    RPAREN          reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    COMMA           reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    RSB             reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    COLON           reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)
    RBRACE          reduce using rule 65 (pre_increment_exp -> PLUSPLUS unary_exp .)


state 143

    (66) pre_decrement_exp -> MINUSMINUS unary_exp .

    SEMI            reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    EQUAL           reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    STAR            reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    SLASH           reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    PERCENT         reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    PLUS            reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    MINUS           reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    LSHIFT          reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    RSHIFT          reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    LT              reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    GT              reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    LEQ             reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    GEQ             reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    IS              reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    EQEQUAL         reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    NOTEQUAL        reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    AMPER           reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    CIRCUMFLEX      reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    PIPE            reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    AMPERAMPER      reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    HOOK            reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    PIPEPIPE        reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    RPAREN          reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    COMMA           reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    RSB             reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    COLON           reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)
    RBRACE          reduce using rule 66 (pre_decrement_exp -> MINUSMINUS unary_exp .)


state 144

    (129) element_access -> primary_no_array_creation_exp LSB . exp RSB
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    primary_no_array_creation_exp  shift and go to state 72
    exp                            shift and go to state 192
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 145

    (135) typeof_exp -> TYPEOF LPAREN . type RPAREN
    (3) type -> . class_type
    (4) type -> . value_type
    (5) class_type -> . OBJECT
    (6) class_type -> . STRING
    (7) value_type -> . integral_type
    (8) value_type -> . floating_point_type
    (9) value_type -> . BOOL
    (10) value_type -> . VOID
    (11) integral_type -> . INT
    (12) integral_type -> . LONG
    (13) integral_type -> . CHAR
    (14) floating_point_type -> . FLOAT
    (15) floating_point_type -> . DOUBLE
    (16) floating_point_type -> . DECIMAL

    OBJECT          shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 11
    VOID            shift and go to state 12
    INT             shift and go to state 13
    LONG            shift and go to state 14
    CHAR            shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17
    DECIMAL         shift and go to state 18

    type                           shift and go to state 193
    class_type                     shift and go to state 5
    value_type                     shift and go to state 6
    integral_type                  shift and go to state 9
    floating_point_type            shift and go to state 10

state 146

    (137) sizeof_exp -> SIZEOF LPAREN . value_type RPAREN
    (7) value_type -> . integral_type
    (8) value_type -> . floating_point_type
    (9) value_type -> . BOOL
    (10) value_type -> . VOID
    (11) integral_type -> . INT
    (12) integral_type -> . LONG
    (13) integral_type -> . CHAR
    (14) floating_point_type -> . FLOAT
    (15) floating_point_type -> . DOUBLE
    (16) floating_point_type -> . DECIMAL

    BOOL            shift and go to state 11
    VOID            shift and go to state 12
    INT             shift and go to state 13
    LONG            shift and go to state 14
    CHAR            shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17
    DECIMAL         shift and go to state 18

    value_type                     shift and go to state 194
    integral_type                  shift and go to state 9
    floating_point_type            shift and go to state 10

state 147

    (20) param_list -> type . ID
    (21) param_list -> type . ID COMMA param_list

    ID              shift and go to state 195


state 148

    (18) signature -> type ID LPAREN param_list . RPAREN

    RPAREN          shift and go to state 196


state 149

    (19) signature -> type ID LPAREN RPAREN .

    LBRACE          reduce using rule 19 (signature -> type ID LPAREN RPAREN .)


state 150

    (28) const_declaration -> CONST type const_declarators .

    SEMI            reduce using rule 28 (const_declaration -> CONST type const_declarators .)


state 151

    (29) const_declarators -> const_declarator .
    (30) const_declarators -> const_declarator . COMMA const_declarators

    SEMI            reduce using rule 29 (const_declarators -> const_declarator .)
    COMMA           shift and go to state 197


state 152

    (31) const_declarator -> ID . EQUAL exp

    EQUAL           shift and go to state 198


state 153

    (34) var_declarators -> var_declarator COMMA . var_declarators
    (33) var_declarators -> . var_declarator
    (34) var_declarators -> . var_declarator COMMA var_declarators
    (35) var_declarator -> . ID
    (36) var_declarator -> . ID EQUAL exp

    ID              shift and go to state 101

    var_declarator                 shift and go to state 100
    var_declarators                shift and go to state 199

state 154

    (36) var_declarator -> ID EQUAL . exp
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    exp                            shift and go to state 200
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 155

    (69) if_statement -> IF LPAREN exp . RPAREN block
    (70) if_statement -> IF LPAREN exp . RPAREN block ELSE block

    RPAREN          shift and go to state 201


state 156

    (144) cast_exp -> LPAREN type RPAREN . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    unary_exp                      shift and go to state 202
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 157

    (122) parenthesized_exp -> LPAREN exp RPAREN .

    LSB             reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    LPAREN          reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    PLUSPLUS        reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    MINUSMINUS      reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    DOT             reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    EQUAL           reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    STAR            reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    SLASH           reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    PERCENT         reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    LSHIFT          reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    RSHIFT          reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    LT              reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    GT              reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    LEQ             reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    GEQ             reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    IS              reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    EQEQUAL         reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    NOTEQUAL        reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    AMPER           reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    CIRCUMFLEX      reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    PIPE            reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    AMPERAMPER      reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    HOOK            reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    PIPEPIPE        reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    SEMI            reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    RSB             reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    COLON           reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)
    RBRACE          reduce using rule 122 (parenthesized_exp -> LPAREN exp RPAREN .)


state 158

    (148) conditional_exp -> conditional_or_exp HOOK . exp COLON exp
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    conditional_or_exp             shift and go to state 110
    exp                            shift and go to state 203
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 159

    (150) conditional_or_exp -> conditional_or_exp PIPEPIPE . conditional_and_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    conditional_and_exp            shift and go to state 204
    inclusive_or_exp               shift and go to state 115
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126
    unary_exp                      shift and go to state 205
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 160

    (152) conditional_and_exp -> conditional_and_exp AMPERAMPER . inclusive_or_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    inclusive_or_exp               shift and go to state 206
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126
    unary_exp                      shift and go to state 205
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 161

    (154) inclusive_or_exp -> inclusive_or_exp PIPE . exclusive_or_exp
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    exclusive_or_exp               shift and go to state 207
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126
    unary_exp                      shift and go to state 205
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 162

    (156) exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    and_exp                        shift and go to state 208
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126
    unary_exp                      shift and go to state 205
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 163

    (158) and_exp -> and_exp AMPER . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    equality_exp                   shift and go to state 209
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126
    unary_exp                      shift and go to state 205
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 164

    (160) equality_exp -> equality_exp EQEQUAL . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    relational_exp                 shift and go to state 210
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126
    unary_exp                      shift and go to state 205
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 165

    (161) equality_exp -> equality_exp NOTEQUAL . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    relational_exp                 shift and go to state 211
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126
    unary_exp                      shift and go to state 205
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 166

    (163) relational_exp -> relational_exp LT . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    shift_exp                      shift and go to state 212
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126
    unary_exp                      shift and go to state 205
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 167

    (164) relational_exp -> relational_exp GT . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    shift_exp                      shift and go to state 213
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126
    unary_exp                      shift and go to state 205
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 168

    (165) relational_exp -> relational_exp LEQ . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    shift_exp                      shift and go to state 214
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126
    unary_exp                      shift and go to state 205
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 169

    (166) relational_exp -> relational_exp GEQ . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    shift_exp                      shift and go to state 215
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126
    unary_exp                      shift and go to state 205
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 170

    (167) relational_exp -> relational_exp IS . type
    (3) type -> . class_type
    (4) type -> . value_type
    (5) class_type -> . OBJECT
    (6) class_type -> . STRING
    (7) value_type -> . integral_type
    (8) value_type -> . floating_point_type
    (9) value_type -> . BOOL
    (10) value_type -> . VOID
    (11) integral_type -> . INT
    (12) integral_type -> . LONG
    (13) integral_type -> . CHAR
    (14) floating_point_type -> . FLOAT
    (15) floating_point_type -> . DOUBLE
    (16) floating_point_type -> . DECIMAL

    OBJECT          shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 11
    VOID            shift and go to state 12
    INT             shift and go to state 13
    LONG            shift and go to state 14
    CHAR            shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17
    DECIMAL         shift and go to state 18

    type                           shift and go to state 216
    class_type                     shift and go to state 5
    value_type                     shift and go to state 6
    integral_type                  shift and go to state 9
    floating_point_type            shift and go to state 10

state 171

    (169) shift_exp -> shift_exp LSHIFT . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    additive_exp                   shift and go to state 217
    multiplicative_exp             shift and go to state 126
    unary_exp                      shift and go to state 205
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 172

    (170) shift_exp -> shift_exp RSHIFT . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    additive_exp                   shift and go to state 218
    multiplicative_exp             shift and go to state 126
    unary_exp                      shift and go to state 205
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 173

    (172) additive_exp -> additive_exp PLUS . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    multiplicative_exp             shift and go to state 219
    unary_exp                      shift and go to state 205
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 174

    (173) additive_exp -> additive_exp MINUS . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    multiplicative_exp             shift and go to state 220
    unary_exp                      shift and go to state 205
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 175

    (175) multiplicative_exp -> multiplicative_exp STAR . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    unary_exp                      shift and go to state 221
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 176

    (176) multiplicative_exp -> multiplicative_exp SLASH . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    unary_exp                      shift and go to state 222
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 177

    (177) multiplicative_exp -> multiplicative_exp PERCENT . unary_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    unary_exp                      shift and go to state 223
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    primary_no_array_creation_exp  shift and go to state 72
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 178

    (71) switch_statement -> SWITCH LPAREN exp . RPAREN LBRACE switch_body RBRACE

    RPAREN          shift and go to state 224


state 179

    (83) while_statement -> WHILE LPAREN exp . RPAREN embedded_statement

    RPAREN          shift and go to state 225


state 180

    (84) do_statement -> DO embedded_statement WHILE . LPAREN exp RPAREN SEMI

    LPAREN          shift and go to state 226


state 181

    (85) for_statement -> FOR LPAREN for_initializer . SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> FOR LPAREN for_initializer . SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> FOR LPAREN for_initializer . SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> FOR LPAREN for_initializer . SEMI SEMI RPAREN embedded_statement

    SEMI            shift and go to state 227


state 182

    (89) for_statement -> FOR LPAREN SEMI . for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> FOR LPAREN SEMI . for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> FOR LPAREN SEMI . SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> FOR LPAREN SEMI . SEMI RPAREN embedded_statement
    (94) for_condition -> . exp
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    SEMI            shift and go to state 228
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    for_condition                  shift and go to state 229
    exp                            shift and go to state 230
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 183

    (93) for_initializer -> var_declaration .

    SEMI            reduce using rule 93 (for_initializer -> var_declaration .)


state 184

    (98) foreach_statement -> FOREACH LPAREN type . ID IN exp RPAREN embedded_statement

    ID              shift and go to state 231


state 185

    (105) return_statement -> RETURN exp SEMI .

    CONST           reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    LBRACE          reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    SEMI            reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    IF              reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    SWITCH          reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    WHILE           reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    DO              reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    FOR             reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    FOREACH         reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    BREAK           reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    CONTINUE        reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    RETURN          reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    OBJECT          reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    STRING          reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    BOOL            reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    VOID            reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    NEW             reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    PLUSPLUS        reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    MINUSMINUS      reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    INT             reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    LONG            reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    CHAR            reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    FLOAT           reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    DOUBLE          reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    DECIMAL         reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    TRUE            reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    FALSE           reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    NULL            reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    INTNUM          reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    HEXADECIMALNUM  reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    BINARYNUM       reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    FLOATNUM        reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    DOUBLENUM       reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    DECIMALNUM      reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    CHARLITERAL     reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    STRINGLITERAL   reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    ID              reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    THIS            reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    LPAREN          reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    TYPEOF          reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    SIZEOF          reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    RBRACE          reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    CASE            reduce using rule 105 (return_statement -> RETURN exp SEMI .)
    DEFAULT         reduce using rule 105 (return_statement -> RETURN exp SEMI .)


state 186

    (126) invocation_exp -> primary_exp LPAREN RPAREN .

    SEMI            reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    LSB             reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    LPAREN          reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    PLUSPLUS        reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    MINUSMINUS      reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    DOT             reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    EQUAL           reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    STAR            reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    SLASH           reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    PERCENT         reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    PLUS            reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    MINUS           reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    LSHIFT          reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    RSHIFT          reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    LT              reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    GT              reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    LEQ             reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    GEQ             reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    IS              reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    EQEQUAL         reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    AMPER           reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    CIRCUMFLEX      reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    PIPE            reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    AMPERAMPER      reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    HOOK            reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    PIPEPIPE        reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    RPAREN          reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    COMMA           reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    RSB             reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    COLON           reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)
    RBRACE          reduce using rule 126 (invocation_exp -> primary_exp LPAREN RPAREN .)


state 187

    (127) invocation_exp -> primary_exp LPAREN arg_list . RPAREN

    RPAREN          shift and go to state 232


state 188

    (106) arg_list -> exp .
    (107) arg_list -> exp . COMMA arg_list

    RPAREN          reduce using rule 106 (arg_list -> exp .)
    COMMA           shift and go to state 233


state 189

    (124) member_access -> primary_exp DOT ID .

    LSB             reduce using rule 124 (member_access -> primary_exp DOT ID .)
    LPAREN          reduce using rule 124 (member_access -> primary_exp DOT ID .)
    PLUSPLUS        reduce using rule 124 (member_access -> primary_exp DOT ID .)
    MINUSMINUS      reduce using rule 124 (member_access -> primary_exp DOT ID .)
    DOT             reduce using rule 124 (member_access -> primary_exp DOT ID .)
    EQUAL           reduce using rule 124 (member_access -> primary_exp DOT ID .)
    STAR            reduce using rule 124 (member_access -> primary_exp DOT ID .)
    SLASH           reduce using rule 124 (member_access -> primary_exp DOT ID .)
    PERCENT         reduce using rule 124 (member_access -> primary_exp DOT ID .)
    PLUS            reduce using rule 124 (member_access -> primary_exp DOT ID .)
    MINUS           reduce using rule 124 (member_access -> primary_exp DOT ID .)
    LSHIFT          reduce using rule 124 (member_access -> primary_exp DOT ID .)
    RSHIFT          reduce using rule 124 (member_access -> primary_exp DOT ID .)
    LT              reduce using rule 124 (member_access -> primary_exp DOT ID .)
    GT              reduce using rule 124 (member_access -> primary_exp DOT ID .)
    LEQ             reduce using rule 124 (member_access -> primary_exp DOT ID .)
    GEQ             reduce using rule 124 (member_access -> primary_exp DOT ID .)
    IS              reduce using rule 124 (member_access -> primary_exp DOT ID .)
    EQEQUAL         reduce using rule 124 (member_access -> primary_exp DOT ID .)
    NOTEQUAL        reduce using rule 124 (member_access -> primary_exp DOT ID .)
    AMPER           reduce using rule 124 (member_access -> primary_exp DOT ID .)
    CIRCUMFLEX      reduce using rule 124 (member_access -> primary_exp DOT ID .)
    PIPE            reduce using rule 124 (member_access -> primary_exp DOT ID .)
    AMPERAMPER      reduce using rule 124 (member_access -> primary_exp DOT ID .)
    HOOK            reduce using rule 124 (member_access -> primary_exp DOT ID .)
    PIPEPIPE        reduce using rule 124 (member_access -> primary_exp DOT ID .)
    RPAREN          reduce using rule 124 (member_access -> primary_exp DOT ID .)
    SEMI            reduce using rule 124 (member_access -> primary_exp DOT ID .)
    COMMA           reduce using rule 124 (member_access -> primary_exp DOT ID .)
    RSB             reduce using rule 124 (member_access -> primary_exp DOT ID .)
    COLON           reduce using rule 124 (member_access -> primary_exp DOT ID .)
    RBRACE          reduce using rule 124 (member_access -> primary_exp DOT ID .)


state 190

    (54) object_creation_exp -> NEW type LPAREN . RPAREN
    (55) object_creation_exp -> NEW type LPAREN . RPAREN object_initializer
    (56) object_creation_exp -> NEW type LPAREN . arg_list RPAREN
    (57) object_creation_exp -> NEW type LPAREN . arg_list RPAREN object_initializer
    (106) arg_list -> . exp
    (107) arg_list -> . exp COMMA arg_list
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    RPAREN          shift and go to state 234
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    arg_list                       shift and go to state 235
    exp                            shift and go to state 188
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 191

    (179) assignment -> unary_exp EQUAL exp .

    SEMI            reduce using rule 179 (assignment -> unary_exp EQUAL exp .)
    RPAREN          reduce using rule 179 (assignment -> unary_exp EQUAL exp .)
    COMMA           reduce using rule 179 (assignment -> unary_exp EQUAL exp .)
    RSB             reduce using rule 179 (assignment -> unary_exp EQUAL exp .)
    COLON           reduce using rule 179 (assignment -> unary_exp EQUAL exp .)
    RBRACE          reduce using rule 179 (assignment -> unary_exp EQUAL exp .)


state 192

    (129) element_access -> primary_no_array_creation_exp LSB exp . RSB

    RSB             shift and go to state 236


state 193

    (135) typeof_exp -> TYPEOF LPAREN type . RPAREN

    RPAREN          shift and go to state 237


state 194

    (137) sizeof_exp -> SIZEOF LPAREN value_type . RPAREN

    RPAREN          shift and go to state 238


state 195

    (20) param_list -> type ID .
    (21) param_list -> type ID . COMMA param_list

    RPAREN          reduce using rule 20 (param_list -> type ID .)
    COMMA           shift and go to state 239


state 196

    (18) signature -> type ID LPAREN param_list RPAREN .

    LBRACE          reduce using rule 18 (signature -> type ID LPAREN param_list RPAREN .)


state 197

    (30) const_declarators -> const_declarator COMMA . const_declarators
    (29) const_declarators -> . const_declarator
    (30) const_declarators -> . const_declarator COMMA const_declarators
    (31) const_declarator -> . ID EQUAL exp

    ID              shift and go to state 152

    const_declarator               shift and go to state 151
    const_declarators              shift and go to state 240

state 198

    (31) const_declarator -> ID EQUAL . exp
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    exp                            shift and go to state 241
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 199

    (34) var_declarators -> var_declarator COMMA var_declarators .

    SEMI            reduce using rule 34 (var_declarators -> var_declarator COMMA var_declarators .)


state 200

    (36) var_declarator -> ID EQUAL exp .

    COMMA           reduce using rule 36 (var_declarator -> ID EQUAL exp .)
    SEMI            reduce using rule 36 (var_declarator -> ID EQUAL exp .)


state 201

    (69) if_statement -> IF LPAREN exp RPAREN . block
    (70) if_statement -> IF LPAREN exp RPAREN . block ELSE block
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE

    LBRACE          shift and go to state 21

    block                          shift and go to state 242

state 202

    (144) cast_exp -> LPAREN type RPAREN unary_exp .

    EQUAL           reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    STAR            reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    SLASH           reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    PERCENT         reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    PLUS            reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    MINUS           reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    LSHIFT          reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    RSHIFT          reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    LT              reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    GT              reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    LEQ             reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    GEQ             reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    IS              reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    EQEQUAL         reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    NOTEQUAL        reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    AMPER           reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    CIRCUMFLEX      reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    PIPE            reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    AMPERAMPER      reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    HOOK            reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    PIPEPIPE        reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    RPAREN          reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    SEMI            reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    COMMA           reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    RSB             reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    COLON           reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)
    RBRACE          reduce using rule 144 (cast_exp -> LPAREN type RPAREN unary_exp .)


state 203

    (148) conditional_exp -> conditional_or_exp HOOK exp . COLON exp

    COLON           shift and go to state 243


state 204

    (150) conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .
    (152) conditional_and_exp -> conditional_and_exp . AMPERAMPER inclusive_or_exp

    HOOK            reduce using rule 150 (conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .)
    PIPEPIPE        reduce using rule 150 (conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .)
    RPAREN          reduce using rule 150 (conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .)
    SEMI            reduce using rule 150 (conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .)
    COMMA           reduce using rule 150 (conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .)
    RSB             reduce using rule 150 (conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .)
    COLON           reduce using rule 150 (conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .)
    RBRACE          reduce using rule 150 (conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp .)
    AMPERAMPER      shift and go to state 160


state 205

    (178) multiplicative_exp -> unary_exp .

    STAR            reduce using rule 178 (multiplicative_exp -> unary_exp .)
    SLASH           reduce using rule 178 (multiplicative_exp -> unary_exp .)
    PERCENT         reduce using rule 178 (multiplicative_exp -> unary_exp .)
    PLUS            reduce using rule 178 (multiplicative_exp -> unary_exp .)
    MINUS           reduce using rule 178 (multiplicative_exp -> unary_exp .)
    LSHIFT          reduce using rule 178 (multiplicative_exp -> unary_exp .)
    RSHIFT          reduce using rule 178 (multiplicative_exp -> unary_exp .)
    LT              reduce using rule 178 (multiplicative_exp -> unary_exp .)
    GT              reduce using rule 178 (multiplicative_exp -> unary_exp .)
    LEQ             reduce using rule 178 (multiplicative_exp -> unary_exp .)
    GEQ             reduce using rule 178 (multiplicative_exp -> unary_exp .)
    IS              reduce using rule 178 (multiplicative_exp -> unary_exp .)
    EQEQUAL         reduce using rule 178 (multiplicative_exp -> unary_exp .)
    NOTEQUAL        reduce using rule 178 (multiplicative_exp -> unary_exp .)
    AMPER           reduce using rule 178 (multiplicative_exp -> unary_exp .)
    CIRCUMFLEX      reduce using rule 178 (multiplicative_exp -> unary_exp .)
    PIPE            reduce using rule 178 (multiplicative_exp -> unary_exp .)
    AMPERAMPER      reduce using rule 178 (multiplicative_exp -> unary_exp .)
    HOOK            reduce using rule 178 (multiplicative_exp -> unary_exp .)
    PIPEPIPE        reduce using rule 178 (multiplicative_exp -> unary_exp .)
    RPAREN          reduce using rule 178 (multiplicative_exp -> unary_exp .)
    SEMI            reduce using rule 178 (multiplicative_exp -> unary_exp .)
    COMMA           reduce using rule 178 (multiplicative_exp -> unary_exp .)
    RSB             reduce using rule 178 (multiplicative_exp -> unary_exp .)
    COLON           reduce using rule 178 (multiplicative_exp -> unary_exp .)
    RBRACE          reduce using rule 178 (multiplicative_exp -> unary_exp .)


state 206

    (152) conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .
    (154) inclusive_or_exp -> inclusive_or_exp . PIPE exclusive_or_exp

    AMPERAMPER      reduce using rule 152 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    HOOK            reduce using rule 152 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    PIPEPIPE        reduce using rule 152 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    RPAREN          reduce using rule 152 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    SEMI            reduce using rule 152 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    COMMA           reduce using rule 152 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    RSB             reduce using rule 152 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    COLON           reduce using rule 152 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    RBRACE          reduce using rule 152 (conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp .)
    PIPE            shift and go to state 161


state 207

    (154) inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .
    (156) exclusive_or_exp -> exclusive_or_exp . CIRCUMFLEX and_exp

    PIPE            reduce using rule 154 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    AMPERAMPER      reduce using rule 154 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    HOOK            reduce using rule 154 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    PIPEPIPE        reduce using rule 154 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    RPAREN          reduce using rule 154 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    SEMI            reduce using rule 154 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    COMMA           reduce using rule 154 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    RSB             reduce using rule 154 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    COLON           reduce using rule 154 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    RBRACE          reduce using rule 154 (inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp .)
    CIRCUMFLEX      shift and go to state 162


state 208

    (156) exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .
    (158) and_exp -> and_exp . AMPER equality_exp

    CIRCUMFLEX      reduce using rule 156 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    PIPE            reduce using rule 156 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    AMPERAMPER      reduce using rule 156 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    HOOK            reduce using rule 156 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    PIPEPIPE        reduce using rule 156 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    RPAREN          reduce using rule 156 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    SEMI            reduce using rule 156 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    COMMA           reduce using rule 156 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    RSB             reduce using rule 156 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    COLON           reduce using rule 156 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    RBRACE          reduce using rule 156 (exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp .)
    AMPER           shift and go to state 163


state 209

    (158) and_exp -> and_exp AMPER equality_exp .
    (160) equality_exp -> equality_exp . EQEQUAL relational_exp
    (161) equality_exp -> equality_exp . NOTEQUAL relational_exp

    AMPER           reduce using rule 158 (and_exp -> and_exp AMPER equality_exp .)
    CIRCUMFLEX      reduce using rule 158 (and_exp -> and_exp AMPER equality_exp .)
    PIPE            reduce using rule 158 (and_exp -> and_exp AMPER equality_exp .)
    AMPERAMPER      reduce using rule 158 (and_exp -> and_exp AMPER equality_exp .)
    HOOK            reduce using rule 158 (and_exp -> and_exp AMPER equality_exp .)
    PIPEPIPE        reduce using rule 158 (and_exp -> and_exp AMPER equality_exp .)
    RPAREN          reduce using rule 158 (and_exp -> and_exp AMPER equality_exp .)
    SEMI            reduce using rule 158 (and_exp -> and_exp AMPER equality_exp .)
    COMMA           reduce using rule 158 (and_exp -> and_exp AMPER equality_exp .)
    RSB             reduce using rule 158 (and_exp -> and_exp AMPER equality_exp .)
    COLON           reduce using rule 158 (and_exp -> and_exp AMPER equality_exp .)
    RBRACE          reduce using rule 158 (and_exp -> and_exp AMPER equality_exp .)
    EQEQUAL         shift and go to state 164
    NOTEQUAL        shift and go to state 165


state 210

    (160) equality_exp -> equality_exp EQEQUAL relational_exp .
    (163) relational_exp -> relational_exp . LT shift_exp
    (164) relational_exp -> relational_exp . GT shift_exp
    (165) relational_exp -> relational_exp . LEQ shift_exp
    (166) relational_exp -> relational_exp . GEQ shift_exp
    (167) relational_exp -> relational_exp . IS type

    EQEQUAL         reduce using rule 160 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    NOTEQUAL        reduce using rule 160 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    AMPER           reduce using rule 160 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    CIRCUMFLEX      reduce using rule 160 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    PIPE            reduce using rule 160 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    AMPERAMPER      reduce using rule 160 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    HOOK            reduce using rule 160 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    PIPEPIPE        reduce using rule 160 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    RPAREN          reduce using rule 160 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    SEMI            reduce using rule 160 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    COMMA           reduce using rule 160 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    RSB             reduce using rule 160 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    COLON           reduce using rule 160 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    RBRACE          reduce using rule 160 (equality_exp -> equality_exp EQEQUAL relational_exp .)
    LT              shift and go to state 166
    GT              shift and go to state 167
    LEQ             shift and go to state 168
    GEQ             shift and go to state 169
    IS              shift and go to state 170


state 211

    (161) equality_exp -> equality_exp NOTEQUAL relational_exp .
    (163) relational_exp -> relational_exp . LT shift_exp
    (164) relational_exp -> relational_exp . GT shift_exp
    (165) relational_exp -> relational_exp . LEQ shift_exp
    (166) relational_exp -> relational_exp . GEQ shift_exp
    (167) relational_exp -> relational_exp . IS type

    EQEQUAL         reduce using rule 161 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    NOTEQUAL        reduce using rule 161 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    AMPER           reduce using rule 161 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    CIRCUMFLEX      reduce using rule 161 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    PIPE            reduce using rule 161 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    AMPERAMPER      reduce using rule 161 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    HOOK            reduce using rule 161 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    PIPEPIPE        reduce using rule 161 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    RPAREN          reduce using rule 161 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    SEMI            reduce using rule 161 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    COMMA           reduce using rule 161 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    RSB             reduce using rule 161 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    COLON           reduce using rule 161 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    RBRACE          reduce using rule 161 (equality_exp -> equality_exp NOTEQUAL relational_exp .)
    LT              shift and go to state 166
    GT              shift and go to state 167
    LEQ             shift and go to state 168
    GEQ             shift and go to state 169
    IS              shift and go to state 170


state 212

    (163) relational_exp -> relational_exp LT shift_exp .
    (169) shift_exp -> shift_exp . LSHIFT additive_exp
    (170) shift_exp -> shift_exp . RSHIFT additive_exp

    LT              reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    GT              reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    LEQ             reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    GEQ             reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    IS              reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    EQEQUAL         reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    NOTEQUAL        reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    AMPER           reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    CIRCUMFLEX      reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    PIPE            reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    AMPERAMPER      reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    HOOK            reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    PIPEPIPE        reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    RPAREN          reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    SEMI            reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    COMMA           reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    RSB             reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    COLON           reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    RBRACE          reduce using rule 163 (relational_exp -> relational_exp LT shift_exp .)
    LSHIFT          shift and go to state 171
    RSHIFT          shift and go to state 172


state 213

    (164) relational_exp -> relational_exp GT shift_exp .
    (169) shift_exp -> shift_exp . LSHIFT additive_exp
    (170) shift_exp -> shift_exp . RSHIFT additive_exp

    LT              reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    GT              reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    LEQ             reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    GEQ             reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    IS              reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    EQEQUAL         reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    NOTEQUAL        reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    AMPER           reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    CIRCUMFLEX      reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    PIPE            reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    AMPERAMPER      reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    HOOK            reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    PIPEPIPE        reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    RPAREN          reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    SEMI            reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    COMMA           reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    RSB             reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    COLON           reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    RBRACE          reduce using rule 164 (relational_exp -> relational_exp GT shift_exp .)
    LSHIFT          shift and go to state 171
    RSHIFT          shift and go to state 172


state 214

    (165) relational_exp -> relational_exp LEQ shift_exp .
    (169) shift_exp -> shift_exp . LSHIFT additive_exp
    (170) shift_exp -> shift_exp . RSHIFT additive_exp

    LT              reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    GT              reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    LEQ             reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    GEQ             reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    IS              reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    EQEQUAL         reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    NOTEQUAL        reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    AMPER           reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    CIRCUMFLEX      reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    PIPE            reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    AMPERAMPER      reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    HOOK            reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    PIPEPIPE        reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    RPAREN          reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    SEMI            reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    COMMA           reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    RSB             reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    COLON           reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    RBRACE          reduce using rule 165 (relational_exp -> relational_exp LEQ shift_exp .)
    LSHIFT          shift and go to state 171
    RSHIFT          shift and go to state 172


state 215

    (166) relational_exp -> relational_exp GEQ shift_exp .
    (169) shift_exp -> shift_exp . LSHIFT additive_exp
    (170) shift_exp -> shift_exp . RSHIFT additive_exp

    LT              reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    GT              reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    LEQ             reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    GEQ             reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    IS              reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    EQEQUAL         reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    NOTEQUAL        reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    AMPER           reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    CIRCUMFLEX      reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    PIPE            reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    AMPERAMPER      reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    HOOK            reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    PIPEPIPE        reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    RPAREN          reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    SEMI            reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    COMMA           reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    RSB             reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    COLON           reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    RBRACE          reduce using rule 166 (relational_exp -> relational_exp GEQ shift_exp .)
    LSHIFT          shift and go to state 171
    RSHIFT          shift and go to state 172


state 216

    (167) relational_exp -> relational_exp IS type .

    LT              reduce using rule 167 (relational_exp -> relational_exp IS type .)
    GT              reduce using rule 167 (relational_exp -> relational_exp IS type .)
    LEQ             reduce using rule 167 (relational_exp -> relational_exp IS type .)
    GEQ             reduce using rule 167 (relational_exp -> relational_exp IS type .)
    IS              reduce using rule 167 (relational_exp -> relational_exp IS type .)
    EQEQUAL         reduce using rule 167 (relational_exp -> relational_exp IS type .)
    NOTEQUAL        reduce using rule 167 (relational_exp -> relational_exp IS type .)
    AMPER           reduce using rule 167 (relational_exp -> relational_exp IS type .)
    CIRCUMFLEX      reduce using rule 167 (relational_exp -> relational_exp IS type .)
    PIPE            reduce using rule 167 (relational_exp -> relational_exp IS type .)
    AMPERAMPER      reduce using rule 167 (relational_exp -> relational_exp IS type .)
    HOOK            reduce using rule 167 (relational_exp -> relational_exp IS type .)
    PIPEPIPE        reduce using rule 167 (relational_exp -> relational_exp IS type .)
    RPAREN          reduce using rule 167 (relational_exp -> relational_exp IS type .)
    SEMI            reduce using rule 167 (relational_exp -> relational_exp IS type .)
    COMMA           reduce using rule 167 (relational_exp -> relational_exp IS type .)
    RSB             reduce using rule 167 (relational_exp -> relational_exp IS type .)
    COLON           reduce using rule 167 (relational_exp -> relational_exp IS type .)
    RBRACE          reduce using rule 167 (relational_exp -> relational_exp IS type .)


state 217

    (169) shift_exp -> shift_exp LSHIFT additive_exp .
    (172) additive_exp -> additive_exp . PLUS multiplicative_exp
    (173) additive_exp -> additive_exp . MINUS multiplicative_exp

    LSHIFT          reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    RSHIFT          reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    LT              reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    GT              reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    LEQ             reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    GEQ             reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    IS              reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    EQEQUAL         reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    NOTEQUAL        reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    AMPER           reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    CIRCUMFLEX      reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    PIPE            reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    AMPERAMPER      reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    HOOK            reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    PIPEPIPE        reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    RPAREN          reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    SEMI            reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    COMMA           reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    RSB             reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    COLON           reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    RBRACE          reduce using rule 169 (shift_exp -> shift_exp LSHIFT additive_exp .)
    PLUS            shift and go to state 173
    MINUS           shift and go to state 174


state 218

    (170) shift_exp -> shift_exp RSHIFT additive_exp .
    (172) additive_exp -> additive_exp . PLUS multiplicative_exp
    (173) additive_exp -> additive_exp . MINUS multiplicative_exp

    LSHIFT          reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    RSHIFT          reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    LT              reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    GT              reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    LEQ             reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    GEQ             reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    IS              reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    EQEQUAL         reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    NOTEQUAL        reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    AMPER           reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    CIRCUMFLEX      reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    PIPE            reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    AMPERAMPER      reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    HOOK            reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    PIPEPIPE        reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    RPAREN          reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    SEMI            reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    COMMA           reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    RSB             reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    COLON           reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    RBRACE          reduce using rule 170 (shift_exp -> shift_exp RSHIFT additive_exp .)
    PLUS            shift and go to state 173
    MINUS           shift and go to state 174


state 219

    (172) additive_exp -> additive_exp PLUS multiplicative_exp .
    (175) multiplicative_exp -> multiplicative_exp . STAR unary_exp
    (176) multiplicative_exp -> multiplicative_exp . SLASH unary_exp
    (177) multiplicative_exp -> multiplicative_exp . PERCENT unary_exp

    PLUS            reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    MINUS           reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    LSHIFT          reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    RSHIFT          reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    LT              reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    GT              reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    LEQ             reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    GEQ             reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    IS              reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    EQEQUAL         reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    NOTEQUAL        reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    AMPER           reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    CIRCUMFLEX      reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    PIPE            reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    AMPERAMPER      reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    HOOK            reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    PIPEPIPE        reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    RPAREN          reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    SEMI            reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    COMMA           reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    RSB             reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    COLON           reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    RBRACE          reduce using rule 172 (additive_exp -> additive_exp PLUS multiplicative_exp .)
    STAR            shift and go to state 175
    SLASH           shift and go to state 176
    PERCENT         shift and go to state 177


state 220

    (173) additive_exp -> additive_exp MINUS multiplicative_exp .
    (175) multiplicative_exp -> multiplicative_exp . STAR unary_exp
    (176) multiplicative_exp -> multiplicative_exp . SLASH unary_exp
    (177) multiplicative_exp -> multiplicative_exp . PERCENT unary_exp

    PLUS            reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    MINUS           reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    LSHIFT          reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    RSHIFT          reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    LT              reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    GT              reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    LEQ             reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    GEQ             reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    IS              reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    EQEQUAL         reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    NOTEQUAL        reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    AMPER           reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    CIRCUMFLEX      reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    PIPE            reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    AMPERAMPER      reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    HOOK            reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    PIPEPIPE        reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    RPAREN          reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    SEMI            reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    COMMA           reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    RSB             reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    COLON           reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    RBRACE          reduce using rule 173 (additive_exp -> additive_exp MINUS multiplicative_exp .)
    STAR            shift and go to state 175
    SLASH           shift and go to state 176
    PERCENT         shift and go to state 177


state 221

    (175) multiplicative_exp -> multiplicative_exp STAR unary_exp .

    STAR            reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    SLASH           reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    PERCENT         reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    PLUS            reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    MINUS           reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    LSHIFT          reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    RSHIFT          reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    LT              reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    GT              reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    LEQ             reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    GEQ             reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    IS              reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    EQEQUAL         reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    NOTEQUAL        reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    AMPER           reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    CIRCUMFLEX      reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    PIPE            reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    AMPERAMPER      reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    HOOK            reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    PIPEPIPE        reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    RPAREN          reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    SEMI            reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    COMMA           reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    RSB             reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    COLON           reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)
    RBRACE          reduce using rule 175 (multiplicative_exp -> multiplicative_exp STAR unary_exp .)


state 222

    (176) multiplicative_exp -> multiplicative_exp SLASH unary_exp .

    STAR            reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    SLASH           reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    PERCENT         reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    PLUS            reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    MINUS           reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    LSHIFT          reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    RSHIFT          reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    LT              reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    GT              reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    LEQ             reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    GEQ             reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    IS              reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    EQEQUAL         reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    NOTEQUAL        reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    AMPER           reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    CIRCUMFLEX      reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    PIPE            reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    AMPERAMPER      reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    HOOK            reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    PIPEPIPE        reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    RPAREN          reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    SEMI            reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    COMMA           reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    RSB             reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    COLON           reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)
    RBRACE          reduce using rule 176 (multiplicative_exp -> multiplicative_exp SLASH unary_exp .)


state 223

    (177) multiplicative_exp -> multiplicative_exp PERCENT unary_exp .

    STAR            reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    SLASH           reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    PERCENT         reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    PLUS            reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    MINUS           reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    LSHIFT          reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    RSHIFT          reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    LT              reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    GT              reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    LEQ             reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    GEQ             reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    IS              reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    EQEQUAL         reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    NOTEQUAL        reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    AMPER           reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    CIRCUMFLEX      reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    PIPE            reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    AMPERAMPER      reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    HOOK            reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    PIPEPIPE        reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    RPAREN          reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    SEMI            reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    COMMA           reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    RSB             reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    COLON           reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)
    RBRACE          reduce using rule 177 (multiplicative_exp -> multiplicative_exp PERCENT unary_exp .)


state 224

    (71) switch_statement -> SWITCH LPAREN exp RPAREN . LBRACE switch_body RBRACE

    LBRACE          shift and go to state 244


state 225

    (83) while_statement -> WHILE LPAREN exp RPAREN . embedded_statement
    (37) embedded_statement -> . block
    (38) embedded_statement -> . empty_statement
    (39) embedded_statement -> . exp_statement
    (40) embedded_statement -> . selection_statement
    (41) embedded_statement -> . iteration_statement
    (42) embedded_statement -> . jump_statement
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE
    (45) empty_statement -> . SEMI
    (46) exp_statement -> . statement_exp SEMI
    (67) selection_statement -> . if_statement
    (68) selection_statement -> . switch_statement
    (79) iteration_statement -> . while_statement
    (80) iteration_statement -> . do_statement
    (81) iteration_statement -> . for_statement
    (82) iteration_statement -> . foreach_statement
    (99) jump_statement -> . break_statement
    (100) jump_statement -> . continue_statement
    (101) jump_statement -> . return_statement
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (69) if_statement -> . IF LPAREN exp RPAREN block
    (70) if_statement -> . IF LPAREN exp RPAREN block ELSE block
    (71) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (83) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (84) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (85) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (98) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (102) break_statement -> . BREAK SEMI
    (103) continue_statement -> . CONTINUE SEMI
    (104) return_statement -> . RETURN SEMI
    (105) return_statement -> . RETURN exp SEMI
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    LBRACE          shift and go to state 21
    SEMI            shift and go to state 29
    IF              shift and go to state 56
    SWITCH          shift and go to state 58
    WHILE           shift and go to state 59
    DO              shift and go to state 60
    FOR             shift and go to state 61
    FOREACH         shift and go to state 62
    BREAK           shift and go to state 64
    CONTINUE        shift and go to state 65
    RETURN          shift and go to state 66
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    embedded_statement             shift and go to state 245
    block                          shift and go to state 31
    empty_statement                shift and go to state 32
    exp_statement                  shift and go to state 33
    selection_statement            shift and go to state 34
    iteration_statement            shift and go to state 35
    jump_statement                 shift and go to state 36
    statement_exp                  shift and go to state 39
    if_statement                   shift and go to state 40
    switch_statement               shift and go to state 41
    while_statement                shift and go to state 42
    do_statement                   shift and go to state 43
    for_statement                  shift and go to state 44
    foreach_statement              shift and go to state 45
    break_statement                shift and go to state 46
    continue_statement             shift and go to state 47
    return_statement               shift and go to state 48
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 226

    (84) do_statement -> DO embedded_statement WHILE LPAREN . exp RPAREN SEMI
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    exp                            shift and go to state 246
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 227

    (85) for_statement -> FOR LPAREN for_initializer SEMI . for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> FOR LPAREN for_initializer SEMI . for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> FOR LPAREN for_initializer SEMI . SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> FOR LPAREN for_initializer SEMI . SEMI RPAREN embedded_statement
    (94) for_condition -> . exp
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    SEMI            shift and go to state 247
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    for_condition                  shift and go to state 248
    exp                            shift and go to state 230
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 228

    (91) for_statement -> FOR LPAREN SEMI SEMI . for_iterator RPAREN embedded_statement
    (92) for_statement -> FOR LPAREN SEMI SEMI . RPAREN embedded_statement
    (95) for_iterator -> . statement_exp_list
    (96) statement_exp_list -> . statement_exp
    (97) statement_exp_list -> . statement_exp COMMA statement_exp_list
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    RPAREN          shift and go to state 250
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    for_iterator                   shift and go to state 249
    statement_exp_list             shift and go to state 251
    statement_exp                  shift and go to state 252
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 229

    (89) for_statement -> FOR LPAREN SEMI for_condition . SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> FOR LPAREN SEMI for_condition . SEMI RPAREN embedded_statement

    SEMI            shift and go to state 253


state 230

    (94) for_condition -> exp .

    SEMI            reduce using rule 94 (for_condition -> exp .)


state 231

    (98) foreach_statement -> FOREACH LPAREN type ID . IN exp RPAREN embedded_statement

    IN              shift and go to state 254


state 232

    (127) invocation_exp -> primary_exp LPAREN arg_list RPAREN .

    SEMI            reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    LSB             reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    LPAREN          reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    PLUSPLUS        reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    MINUSMINUS      reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    DOT             reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    EQUAL           reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    STAR            reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    SLASH           reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    PERCENT         reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    PLUS            reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    LSHIFT          reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    RSHIFT          reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    LT              reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    GT              reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    LEQ             reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    GEQ             reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    IS              reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    EQEQUAL         reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    NOTEQUAL        reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    AMPER           reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    CIRCUMFLEX      reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    PIPE            reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    AMPERAMPER      reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    HOOK            reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    PIPEPIPE        reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    RSB             reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    COLON           reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)
    RBRACE          reduce using rule 127 (invocation_exp -> primary_exp LPAREN arg_list RPAREN .)


state 233

    (107) arg_list -> exp COMMA . arg_list
    (106) arg_list -> . exp
    (107) arg_list -> . exp COMMA arg_list
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    exp                            shift and go to state 188
    arg_list                       shift and go to state 255
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 234

    (54) object_creation_exp -> NEW type LPAREN RPAREN .
    (55) object_creation_exp -> NEW type LPAREN RPAREN . object_initializer
    (58) object_initializer -> . LBRACE RBRACE
    (59) object_initializer -> . LBRACE member_initializer_list RBRACE

    SEMI            reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    LSB             reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    LPAREN          reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    PLUSPLUS        reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    MINUSMINUS      reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    DOT             reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    EQUAL           reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    STAR            reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    SLASH           reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    PERCENT         reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    PLUS            reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    MINUS           reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    LSHIFT          reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    RSHIFT          reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    LT              reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    GT              reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    LEQ             reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    GEQ             reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    IS              reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    EQEQUAL         reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    AMPER           reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    CIRCUMFLEX      reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    PIPE            reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    AMPERAMPER      reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    HOOK            reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    PIPEPIPE        reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    RPAREN          reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    COMMA           reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    RSB             reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    COLON           reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    RBRACE          reduce using rule 54 (object_creation_exp -> NEW type LPAREN RPAREN .)
    LBRACE          shift and go to state 257

    object_initializer             shift and go to state 256

state 235

    (56) object_creation_exp -> NEW type LPAREN arg_list . RPAREN
    (57) object_creation_exp -> NEW type LPAREN arg_list . RPAREN object_initializer

    RPAREN          shift and go to state 258


state 236

    (129) element_access -> primary_no_array_creation_exp LSB exp RSB .

    LSB             reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    LPAREN          reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    PLUSPLUS        reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    MINUSMINUS      reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    DOT             reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    EQUAL           reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    STAR            reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    SLASH           reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    PERCENT         reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    PLUS            reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    MINUS           reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    LSHIFT          reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    RSHIFT          reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    LT              reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    GT              reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    LEQ             reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    GEQ             reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    IS              reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    EQEQUAL         reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    NOTEQUAL        reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    AMPER           reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    CIRCUMFLEX      reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    PIPE            reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    AMPERAMPER      reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    HOOK            reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    PIPEPIPE        reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    RPAREN          reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    SEMI            reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    COMMA           reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    RSB             reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    COLON           reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)
    RBRACE          reduce using rule 129 (element_access -> primary_no_array_creation_exp LSB exp RSB .)


state 237

    (135) typeof_exp -> TYPEOF LPAREN type RPAREN .

    LSB             reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    LPAREN          reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    PLUSPLUS        reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    MINUSMINUS      reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    DOT             reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    EQUAL           reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    STAR            reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    SLASH           reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    PERCENT         reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    PLUS            reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    MINUS           reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    LSHIFT          reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    RSHIFT          reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    LT              reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    GT              reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    LEQ             reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    GEQ             reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    IS              reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    EQEQUAL         reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    NOTEQUAL        reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    AMPER           reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    CIRCUMFLEX      reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    PIPE            reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    AMPERAMPER      reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    HOOK            reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    PIPEPIPE        reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    RPAREN          reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    SEMI            reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    COMMA           reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    RSB             reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    COLON           reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)
    RBRACE          reduce using rule 135 (typeof_exp -> TYPEOF LPAREN type RPAREN .)


state 238

    (137) sizeof_exp -> SIZEOF LPAREN value_type RPAREN .

    LSB             reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    LPAREN          reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    PLUSPLUS        reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    MINUSMINUS      reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    DOT             reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    EQUAL           reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    STAR            reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    SLASH           reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    PERCENT         reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    PLUS            reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    MINUS           reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    LSHIFT          reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    RSHIFT          reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    LT              reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    GT              reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    LEQ             reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    GEQ             reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    IS              reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    EQEQUAL         reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    NOTEQUAL        reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    AMPER           reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    CIRCUMFLEX      reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    PIPE            reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    AMPERAMPER      reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    HOOK            reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    PIPEPIPE        reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    RPAREN          reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    SEMI            reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    COMMA           reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    RSB             reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    COLON           reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)
    RBRACE          reduce using rule 137 (sizeof_exp -> SIZEOF LPAREN value_type RPAREN .)


state 239

    (21) param_list -> type ID COMMA . param_list
    (20) param_list -> . type ID
    (21) param_list -> . type ID COMMA param_list
    (3) type -> . class_type
    (4) type -> . value_type
    (5) class_type -> . OBJECT
    (6) class_type -> . STRING
    (7) value_type -> . integral_type
    (8) value_type -> . floating_point_type
    (9) value_type -> . BOOL
    (10) value_type -> . VOID
    (11) integral_type -> . INT
    (12) integral_type -> . LONG
    (13) integral_type -> . CHAR
    (14) floating_point_type -> . FLOAT
    (15) floating_point_type -> . DOUBLE
    (16) floating_point_type -> . DECIMAL

    OBJECT          shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 11
    VOID            shift and go to state 12
    INT             shift and go to state 13
    LONG            shift and go to state 14
    CHAR            shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17
    DECIMAL         shift and go to state 18

    type                           shift and go to state 147
    param_list                     shift and go to state 259
    class_type                     shift and go to state 5
    value_type                     shift and go to state 6
    integral_type                  shift and go to state 9
    floating_point_type            shift and go to state 10

state 240

    (30) const_declarators -> const_declarator COMMA const_declarators .

    SEMI            reduce using rule 30 (const_declarators -> const_declarator COMMA const_declarators .)


state 241

    (31) const_declarator -> ID EQUAL exp .

    COMMA           reduce using rule 31 (const_declarator -> ID EQUAL exp .)
    SEMI            reduce using rule 31 (const_declarator -> ID EQUAL exp .)


state 242

    (69) if_statement -> IF LPAREN exp RPAREN block .
    (70) if_statement -> IF LPAREN exp RPAREN block . ELSE block

    CONST           reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    LBRACE          reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    SEMI            reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    IF              reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    SWITCH          reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    WHILE           reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    DO              reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    FOR             reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    FOREACH         reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    BREAK           reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    CONTINUE        reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    RETURN          reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    OBJECT          reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    STRING          reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    BOOL            reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    VOID            reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    NEW             reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    PLUSPLUS        reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    MINUSMINUS      reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    INT             reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    LONG            reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    CHAR            reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    FLOAT           reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    DOUBLE          reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    DECIMAL         reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    TRUE            reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    FALSE           reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    NULL            reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    INTNUM          reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    HEXADECIMALNUM  reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    BINARYNUM       reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    FLOATNUM        reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    DOUBLENUM       reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    DECIMALNUM      reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    CHARLITERAL     reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    STRINGLITERAL   reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    ID              reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    THIS            reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    LPAREN          reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    TYPEOF          reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    SIZEOF          reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    RBRACE          reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    CASE            reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    DEFAULT         reduce using rule 69 (if_statement -> IF LPAREN exp RPAREN block .)
    ELSE            shift and go to state 260


state 243

    (148) conditional_exp -> conditional_or_exp HOOK exp COLON . exp
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    conditional_or_exp             shift and go to state 110
    exp                            shift and go to state 261
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 244

    (71) switch_statement -> SWITCH LPAREN exp RPAREN LBRACE . switch_body RBRACE
    (72) switch_body -> . switch_section
    (73) switch_body -> . switch_section switch_body
    (74) switch_section -> . switch_label statement_list
    (75) switch_section -> . switch_label switch_section
    (76) switch_label -> . CASE pattern COLON
    (77) switch_label -> . DEFAULT COLON

    CASE            shift and go to state 265
    DEFAULT         shift and go to state 266

    switch_body                    shift and go to state 262
    switch_section                 shift and go to state 263
    switch_label                   shift and go to state 264

state 245

    (83) while_statement -> WHILE LPAREN exp RPAREN embedded_statement .

    CONST           reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    LBRACE          reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    SEMI            reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    IF              reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    SWITCH          reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    WHILE           reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    DO              reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    FOR             reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    FOREACH         reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    BREAK           reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    CONTINUE        reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    RETURN          reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    OBJECT          reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    STRING          reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    BOOL            reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    VOID            reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    NEW             reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    INT             reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    LONG            reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    CHAR            reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    FLOAT           reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    DOUBLE          reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    DECIMAL         reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    TRUE            reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    FALSE           reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    NULL            reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    INTNUM          reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    ID              reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    THIS            reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    LPAREN          reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    TYPEOF          reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    SIZEOF          reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    RBRACE          reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    CASE            reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)
    DEFAULT         reduce using rule 83 (while_statement -> WHILE LPAREN exp RPAREN embedded_statement .)


state 246

    (84) do_statement -> DO embedded_statement WHILE LPAREN exp . RPAREN SEMI

    RPAREN          shift and go to state 267


state 247

    (87) for_statement -> FOR LPAREN for_initializer SEMI SEMI . for_iterator RPAREN embedded_statement
    (88) for_statement -> FOR LPAREN for_initializer SEMI SEMI . RPAREN embedded_statement
    (95) for_iterator -> . statement_exp_list
    (96) statement_exp_list -> . statement_exp
    (97) statement_exp_list -> . statement_exp COMMA statement_exp_list
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    RPAREN          shift and go to state 269
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    for_iterator                   shift and go to state 268
    statement_exp_list             shift and go to state 251
    statement_exp                  shift and go to state 252
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 248

    (85) for_statement -> FOR LPAREN for_initializer SEMI for_condition . SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> FOR LPAREN for_initializer SEMI for_condition . SEMI RPAREN embedded_statement

    SEMI            shift and go to state 270


state 249

    (91) for_statement -> FOR LPAREN SEMI SEMI for_iterator . RPAREN embedded_statement

    RPAREN          shift and go to state 271


state 250

    (92) for_statement -> FOR LPAREN SEMI SEMI RPAREN . embedded_statement
    (37) embedded_statement -> . block
    (38) embedded_statement -> . empty_statement
    (39) embedded_statement -> . exp_statement
    (40) embedded_statement -> . selection_statement
    (41) embedded_statement -> . iteration_statement
    (42) embedded_statement -> . jump_statement
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE
    (45) empty_statement -> . SEMI
    (46) exp_statement -> . statement_exp SEMI
    (67) selection_statement -> . if_statement
    (68) selection_statement -> . switch_statement
    (79) iteration_statement -> . while_statement
    (80) iteration_statement -> . do_statement
    (81) iteration_statement -> . for_statement
    (82) iteration_statement -> . foreach_statement
    (99) jump_statement -> . break_statement
    (100) jump_statement -> . continue_statement
    (101) jump_statement -> . return_statement
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (69) if_statement -> . IF LPAREN exp RPAREN block
    (70) if_statement -> . IF LPAREN exp RPAREN block ELSE block
    (71) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (83) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (84) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (85) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (98) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (102) break_statement -> . BREAK SEMI
    (103) continue_statement -> . CONTINUE SEMI
    (104) return_statement -> . RETURN SEMI
    (105) return_statement -> . RETURN exp SEMI
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    LBRACE          shift and go to state 21
    SEMI            shift and go to state 29
    IF              shift and go to state 56
    SWITCH          shift and go to state 58
    WHILE           shift and go to state 59
    DO              shift and go to state 60
    FOR             shift and go to state 61
    FOREACH         shift and go to state 62
    BREAK           shift and go to state 64
    CONTINUE        shift and go to state 65
    RETURN          shift and go to state 66
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    embedded_statement             shift and go to state 272
    block                          shift and go to state 31
    empty_statement                shift and go to state 32
    exp_statement                  shift and go to state 33
    selection_statement            shift and go to state 34
    iteration_statement            shift and go to state 35
    jump_statement                 shift and go to state 36
    statement_exp                  shift and go to state 39
    if_statement                   shift and go to state 40
    switch_statement               shift and go to state 41
    while_statement                shift and go to state 42
    do_statement                   shift and go to state 43
    for_statement                  shift and go to state 44
    foreach_statement              shift and go to state 45
    break_statement                shift and go to state 46
    continue_statement             shift and go to state 47
    return_statement               shift and go to state 48
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 251

    (95) for_iterator -> statement_exp_list .

    RPAREN          reduce using rule 95 (for_iterator -> statement_exp_list .)


state 252

    (96) statement_exp_list -> statement_exp .
    (97) statement_exp_list -> statement_exp . COMMA statement_exp_list

    RPAREN          reduce using rule 96 (statement_exp_list -> statement_exp .)
    COMMA           shift and go to state 273


state 253

    (89) for_statement -> FOR LPAREN SEMI for_condition SEMI . for_iterator RPAREN embedded_statement
    (90) for_statement -> FOR LPAREN SEMI for_condition SEMI . RPAREN embedded_statement
    (95) for_iterator -> . statement_exp_list
    (96) statement_exp_list -> . statement_exp
    (97) statement_exp_list -> . statement_exp COMMA statement_exp_list
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    RPAREN          shift and go to state 275
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    for_iterator                   shift and go to state 274
    statement_exp_list             shift and go to state 251
    statement_exp                  shift and go to state 252
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 254

    (98) foreach_statement -> FOREACH LPAREN type ID IN . exp RPAREN embedded_statement
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    exp                            shift and go to state 276
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 255

    (107) arg_list -> exp COMMA arg_list .

    RPAREN          reduce using rule 107 (arg_list -> exp COMMA arg_list .)


state 256

    (55) object_creation_exp -> NEW type LPAREN RPAREN object_initializer .

    SEMI            reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    LSB             reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    LPAREN          reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    PLUSPLUS        reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    MINUSMINUS      reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    DOT             reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    EQUAL           reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    STAR            reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    SLASH           reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    PERCENT         reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    PLUS            reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    MINUS           reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    LSHIFT          reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    RSHIFT          reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    LT              reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    GT              reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    LEQ             reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    GEQ             reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    IS              reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    EQEQUAL         reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    NOTEQUAL        reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    AMPER           reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    CIRCUMFLEX      reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    PIPE            reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    AMPERAMPER      reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    HOOK            reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    PIPEPIPE        reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    RPAREN          reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    COMMA           reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    RSB             reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    COLON           reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)
    RBRACE          reduce using rule 55 (object_creation_exp -> NEW type LPAREN RPAREN object_initializer .)


state 257

    (58) object_initializer -> LBRACE . RBRACE
    (59) object_initializer -> LBRACE . member_initializer_list RBRACE
    (60) member_initializer_list -> . member_initializer
    (61) member_initializer_list -> . member_initializer COMMA member_initializer_list
    (62) member_initializer -> . ID EQUAL exp

    RBRACE          shift and go to state 277
    ID              shift and go to state 280

    member_initializer_list        shift and go to state 278
    member_initializer             shift and go to state 279

state 258

    (56) object_creation_exp -> NEW type LPAREN arg_list RPAREN .
    (57) object_creation_exp -> NEW type LPAREN arg_list RPAREN . object_initializer
    (58) object_initializer -> . LBRACE RBRACE
    (59) object_initializer -> . LBRACE member_initializer_list RBRACE

    SEMI            reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    LSB             reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    LPAREN          reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    PLUSPLUS        reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    MINUSMINUS      reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    DOT             reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    EQUAL           reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    STAR            reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    SLASH           reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    PERCENT         reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    PLUS            reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    MINUS           reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    LSHIFT          reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    RSHIFT          reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    LT              reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    GT              reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    LEQ             reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    GEQ             reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    IS              reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    EQEQUAL         reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    NOTEQUAL        reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    AMPER           reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    CIRCUMFLEX      reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    PIPE            reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    AMPERAMPER      reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    HOOK            reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    PIPEPIPE        reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    RPAREN          reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    COMMA           reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    RSB             reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    COLON           reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    RBRACE          reduce using rule 56 (object_creation_exp -> NEW type LPAREN arg_list RPAREN .)
    LBRACE          shift and go to state 257

    object_initializer             shift and go to state 281

state 259

    (21) param_list -> type ID COMMA param_list .

    RPAREN          reduce using rule 21 (param_list -> type ID COMMA param_list .)


state 260

    (70) if_statement -> IF LPAREN exp RPAREN block ELSE . block
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE

    LBRACE          shift and go to state 21

    block                          shift and go to state 282

state 261

    (148) conditional_exp -> conditional_or_exp HOOK exp COLON exp .

    RPAREN          reduce using rule 148 (conditional_exp -> conditional_or_exp HOOK exp COLON exp .)
    SEMI            reduce using rule 148 (conditional_exp -> conditional_or_exp HOOK exp COLON exp .)
    COMMA           reduce using rule 148 (conditional_exp -> conditional_or_exp HOOK exp COLON exp .)
    RSB             reduce using rule 148 (conditional_exp -> conditional_or_exp HOOK exp COLON exp .)
    COLON           reduce using rule 148 (conditional_exp -> conditional_or_exp HOOK exp COLON exp .)
    RBRACE          reduce using rule 148 (conditional_exp -> conditional_or_exp HOOK exp COLON exp .)


state 262

    (71) switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body . RBRACE

    RBRACE          shift and go to state 283


state 263

    (72) switch_body -> switch_section .
    (73) switch_body -> switch_section . switch_body
    (72) switch_body -> . switch_section
    (73) switch_body -> . switch_section switch_body
    (74) switch_section -> . switch_label statement_list
    (75) switch_section -> . switch_label switch_section
    (76) switch_label -> . CASE pattern COLON
    (77) switch_label -> . DEFAULT COLON

    RBRACE          reduce using rule 72 (switch_body -> switch_section .)
    CASE            shift and go to state 265
    DEFAULT         shift and go to state 266

    switch_section                 shift and go to state 263
    switch_body                    shift and go to state 284
    switch_label                   shift and go to state 264

state 264

    (74) switch_section -> switch_label . statement_list
    (75) switch_section -> switch_label . switch_section
    (22) statement_list -> . statement
    (23) statement_list -> . statement statement_list
    (74) switch_section -> . switch_label statement_list
    (75) switch_section -> . switch_label switch_section
    (24) statement -> . declaration_statement
    (25) statement -> . embedded_statement
    (76) switch_label -> . CASE pattern COLON
    (77) switch_label -> . DEFAULT COLON
    (26) declaration_statement -> . const_declaration SEMI
    (27) declaration_statement -> . var_declaration SEMI
    (37) embedded_statement -> . block
    (38) embedded_statement -> . empty_statement
    (39) embedded_statement -> . exp_statement
    (40) embedded_statement -> . selection_statement
    (41) embedded_statement -> . iteration_statement
    (42) embedded_statement -> . jump_statement
    (28) const_declaration -> . CONST type const_declarators
    (32) var_declaration -> . type var_declarators
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE
    (45) empty_statement -> . SEMI
    (46) exp_statement -> . statement_exp SEMI
    (67) selection_statement -> . if_statement
    (68) selection_statement -> . switch_statement
    (79) iteration_statement -> . while_statement
    (80) iteration_statement -> . do_statement
    (81) iteration_statement -> . for_statement
    (82) iteration_statement -> . foreach_statement
    (99) jump_statement -> . break_statement
    (100) jump_statement -> . continue_statement
    (101) jump_statement -> . return_statement
    (3) type -> . class_type
    (4) type -> . value_type
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (69) if_statement -> . IF LPAREN exp RPAREN block
    (70) if_statement -> . IF LPAREN exp RPAREN block ELSE block
    (71) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (83) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (84) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (85) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (98) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (102) break_statement -> . BREAK SEMI
    (103) continue_statement -> . CONTINUE SEMI
    (104) return_statement -> . RETURN SEMI
    (105) return_statement -> . RETURN exp SEMI
    (5) class_type -> . OBJECT
    (6) class_type -> . STRING
    (7) value_type -> . integral_type
    (8) value_type -> . floating_point_type
    (9) value_type -> . BOOL
    (10) value_type -> . VOID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (11) integral_type -> . INT
    (12) integral_type -> . LONG
    (13) integral_type -> . CHAR
    (14) floating_point_type -> . FLOAT
    (15) floating_point_type -> . DOUBLE
    (16) floating_point_type -> . DECIMAL
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    CASE            shift and go to state 265
    DEFAULT         shift and go to state 266
    CONST           shift and go to state 37
    LBRACE          shift and go to state 21
    SEMI            shift and go to state 29
    IF              shift and go to state 56
    SWITCH          shift and go to state 58
    WHILE           shift and go to state 59
    DO              shift and go to state 60
    FOR             shift and go to state 61
    FOREACH         shift and go to state 62
    BREAK           shift and go to state 64
    CONTINUE        shift and go to state 65
    RETURN          shift and go to state 66
    OBJECT          shift and go to state 7
    STRING          shift and go to state 8
    BOOL            shift and go to state 11
    VOID            shift and go to state 12
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    INT             shift and go to state 13
    LONG            shift and go to state 14
    CHAR            shift and go to state 15
    FLOAT           shift and go to state 16
    DOUBLE          shift and go to state 17
    DECIMAL         shift and go to state 18
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    switch_label                   shift and go to state 264
    statement_list                 shift and go to state 285
    switch_section                 shift and go to state 286
    statement                      shift and go to state 25
    declaration_statement          shift and go to state 26
    embedded_statement             shift and go to state 27
    const_declaration              shift and go to state 28
    var_declaration                shift and go to state 30
    block                          shift and go to state 31
    empty_statement                shift and go to state 32
    exp_statement                  shift and go to state 33
    selection_statement            shift and go to state 34
    iteration_statement            shift and go to state 35
    jump_statement                 shift and go to state 36
    type                           shift and go to state 38
    statement_exp                  shift and go to state 39
    if_statement                   shift and go to state 40
    switch_statement               shift and go to state 41
    while_statement                shift and go to state 42
    do_statement                   shift and go to state 43
    for_statement                  shift and go to state 44
    foreach_statement              shift and go to state 45
    break_statement                shift and go to state 46
    continue_statement             shift and go to state 47
    return_statement               shift and go to state 48
    class_type                     shift and go to state 5
    value_type                     shift and go to state 6
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    integral_type                  shift and go to state 9
    floating_point_type            shift and go to state 10
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 265

    (76) switch_label -> CASE . pattern COLON
    (78) pattern -> . exp
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    pattern                        shift and go to state 287
    exp                            shift and go to state 288
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 266

    (77) switch_label -> DEFAULT . COLON

    COLON           shift and go to state 289


state 267

    (84) do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN . SEMI

    SEMI            shift and go to state 290


state 268

    (87) for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator . RPAREN embedded_statement

    RPAREN          shift and go to state 291


state 269

    (88) for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN . embedded_statement
    (37) embedded_statement -> . block
    (38) embedded_statement -> . empty_statement
    (39) embedded_statement -> . exp_statement
    (40) embedded_statement -> . selection_statement
    (41) embedded_statement -> . iteration_statement
    (42) embedded_statement -> . jump_statement
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE
    (45) empty_statement -> . SEMI
    (46) exp_statement -> . statement_exp SEMI
    (67) selection_statement -> . if_statement
    (68) selection_statement -> . switch_statement
    (79) iteration_statement -> . while_statement
    (80) iteration_statement -> . do_statement
    (81) iteration_statement -> . for_statement
    (82) iteration_statement -> . foreach_statement
    (99) jump_statement -> . break_statement
    (100) jump_statement -> . continue_statement
    (101) jump_statement -> . return_statement
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (69) if_statement -> . IF LPAREN exp RPAREN block
    (70) if_statement -> . IF LPAREN exp RPAREN block ELSE block
    (71) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (83) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (84) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (85) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (98) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (102) break_statement -> . BREAK SEMI
    (103) continue_statement -> . CONTINUE SEMI
    (104) return_statement -> . RETURN SEMI
    (105) return_statement -> . RETURN exp SEMI
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    LBRACE          shift and go to state 21
    SEMI            shift and go to state 29
    IF              shift and go to state 56
    SWITCH          shift and go to state 58
    WHILE           shift and go to state 59
    DO              shift and go to state 60
    FOR             shift and go to state 61
    FOREACH         shift and go to state 62
    BREAK           shift and go to state 64
    CONTINUE        shift and go to state 65
    RETURN          shift and go to state 66
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    embedded_statement             shift and go to state 292
    block                          shift and go to state 31
    empty_statement                shift and go to state 32
    exp_statement                  shift and go to state 33
    selection_statement            shift and go to state 34
    iteration_statement            shift and go to state 35
    jump_statement                 shift and go to state 36
    statement_exp                  shift and go to state 39
    if_statement                   shift and go to state 40
    switch_statement               shift and go to state 41
    while_statement                shift and go to state 42
    do_statement                   shift and go to state 43
    for_statement                  shift and go to state 44
    foreach_statement              shift and go to state 45
    break_statement                shift and go to state 46
    continue_statement             shift and go to state 47
    return_statement               shift and go to state 48
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 270

    (85) for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI . for_iterator RPAREN embedded_statement
    (86) for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI . RPAREN embedded_statement
    (95) for_iterator -> . statement_exp_list
    (96) statement_exp_list -> . statement_exp
    (97) statement_exp_list -> . statement_exp COMMA statement_exp_list
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    RPAREN          shift and go to state 294
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    for_iterator                   shift and go to state 293
    statement_exp_list             shift and go to state 251
    statement_exp                  shift and go to state 252
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 271

    (91) for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN . embedded_statement
    (37) embedded_statement -> . block
    (38) embedded_statement -> . empty_statement
    (39) embedded_statement -> . exp_statement
    (40) embedded_statement -> . selection_statement
    (41) embedded_statement -> . iteration_statement
    (42) embedded_statement -> . jump_statement
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE
    (45) empty_statement -> . SEMI
    (46) exp_statement -> . statement_exp SEMI
    (67) selection_statement -> . if_statement
    (68) selection_statement -> . switch_statement
    (79) iteration_statement -> . while_statement
    (80) iteration_statement -> . do_statement
    (81) iteration_statement -> . for_statement
    (82) iteration_statement -> . foreach_statement
    (99) jump_statement -> . break_statement
    (100) jump_statement -> . continue_statement
    (101) jump_statement -> . return_statement
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (69) if_statement -> . IF LPAREN exp RPAREN block
    (70) if_statement -> . IF LPAREN exp RPAREN block ELSE block
    (71) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (83) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (84) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (85) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (98) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (102) break_statement -> . BREAK SEMI
    (103) continue_statement -> . CONTINUE SEMI
    (104) return_statement -> . RETURN SEMI
    (105) return_statement -> . RETURN exp SEMI
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    LBRACE          shift and go to state 21
    SEMI            shift and go to state 29
    IF              shift and go to state 56
    SWITCH          shift and go to state 58
    WHILE           shift and go to state 59
    DO              shift and go to state 60
    FOR             shift and go to state 61
    FOREACH         shift and go to state 62
    BREAK           shift and go to state 64
    CONTINUE        shift and go to state 65
    RETURN          shift and go to state 66
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    embedded_statement             shift and go to state 295
    block                          shift and go to state 31
    empty_statement                shift and go to state 32
    exp_statement                  shift and go to state 33
    selection_statement            shift and go to state 34
    iteration_statement            shift and go to state 35
    jump_statement                 shift and go to state 36
    statement_exp                  shift and go to state 39
    if_statement                   shift and go to state 40
    switch_statement               shift and go to state 41
    while_statement                shift and go to state 42
    do_statement                   shift and go to state 43
    for_statement                  shift and go to state 44
    foreach_statement              shift and go to state 45
    break_statement                shift and go to state 46
    continue_statement             shift and go to state 47
    return_statement               shift and go to state 48
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 272

    (92) for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .

    CONST           reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    LBRACE          reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    SEMI            reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    IF              reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    SWITCH          reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    WHILE           reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    DO              reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    FOR             reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    FOREACH         reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    BREAK           reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    CONTINUE        reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    RETURN          reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    OBJECT          reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    STRING          reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    BOOL            reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    VOID            reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    NEW             reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    INT             reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    LONG            reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    CHAR            reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    FLOAT           reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    DOUBLE          reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    DECIMAL         reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    TRUE            reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    FALSE           reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    NULL            reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    INTNUM          reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    ID              reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    THIS            reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    LPAREN          reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    TYPEOF          reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    SIZEOF          reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    RBRACE          reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    CASE            reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)
    DEFAULT         reduce using rule 92 (for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement .)


state 273

    (97) statement_exp_list -> statement_exp COMMA . statement_exp_list
    (96) statement_exp_list -> . statement_exp
    (97) statement_exp_list -> . statement_exp COMMA statement_exp_list
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    statement_exp                  shift and go to state 252
    statement_exp_list             shift and go to state 296
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 274

    (89) for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator . RPAREN embedded_statement

    RPAREN          shift and go to state 297


state 275

    (90) for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN . embedded_statement
    (37) embedded_statement -> . block
    (38) embedded_statement -> . empty_statement
    (39) embedded_statement -> . exp_statement
    (40) embedded_statement -> . selection_statement
    (41) embedded_statement -> . iteration_statement
    (42) embedded_statement -> . jump_statement
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE
    (45) empty_statement -> . SEMI
    (46) exp_statement -> . statement_exp SEMI
    (67) selection_statement -> . if_statement
    (68) selection_statement -> . switch_statement
    (79) iteration_statement -> . while_statement
    (80) iteration_statement -> . do_statement
    (81) iteration_statement -> . for_statement
    (82) iteration_statement -> . foreach_statement
    (99) jump_statement -> . break_statement
    (100) jump_statement -> . continue_statement
    (101) jump_statement -> . return_statement
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (69) if_statement -> . IF LPAREN exp RPAREN block
    (70) if_statement -> . IF LPAREN exp RPAREN block ELSE block
    (71) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (83) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (84) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (85) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (98) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (102) break_statement -> . BREAK SEMI
    (103) continue_statement -> . CONTINUE SEMI
    (104) return_statement -> . RETURN SEMI
    (105) return_statement -> . RETURN exp SEMI
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    LBRACE          shift and go to state 21
    SEMI            shift and go to state 29
    IF              shift and go to state 56
    SWITCH          shift and go to state 58
    WHILE           shift and go to state 59
    DO              shift and go to state 60
    FOR             shift and go to state 61
    FOREACH         shift and go to state 62
    BREAK           shift and go to state 64
    CONTINUE        shift and go to state 65
    RETURN          shift and go to state 66
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    embedded_statement             shift and go to state 298
    block                          shift and go to state 31
    empty_statement                shift and go to state 32
    exp_statement                  shift and go to state 33
    selection_statement            shift and go to state 34
    iteration_statement            shift and go to state 35
    jump_statement                 shift and go to state 36
    statement_exp                  shift and go to state 39
    if_statement                   shift and go to state 40
    switch_statement               shift and go to state 41
    while_statement                shift and go to state 42
    do_statement                   shift and go to state 43
    for_statement                  shift and go to state 44
    foreach_statement              shift and go to state 45
    break_statement                shift and go to state 46
    continue_statement             shift and go to state 47
    return_statement               shift and go to state 48
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 276

    (98) foreach_statement -> FOREACH LPAREN type ID IN exp . RPAREN embedded_statement

    RPAREN          shift and go to state 299


state 277

    (58) object_initializer -> LBRACE RBRACE .

    SEMI            reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    LSB             reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    LPAREN          reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    PLUSPLUS        reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    MINUSMINUS      reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    DOT             reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    EQUAL           reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    STAR            reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    SLASH           reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    PERCENT         reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    PLUS            reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    MINUS           reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    LSHIFT          reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    RSHIFT          reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    LT              reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    GT              reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    LEQ             reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    GEQ             reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    IS              reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    EQEQUAL         reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    NOTEQUAL        reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    AMPER           reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    CIRCUMFLEX      reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    PIPE            reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    AMPERAMPER      reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    HOOK            reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    PIPEPIPE        reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    RPAREN          reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    COMMA           reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    RSB             reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    COLON           reduce using rule 58 (object_initializer -> LBRACE RBRACE .)
    RBRACE          reduce using rule 58 (object_initializer -> LBRACE RBRACE .)


state 278

    (59) object_initializer -> LBRACE member_initializer_list . RBRACE

    RBRACE          shift and go to state 300


state 279

    (60) member_initializer_list -> member_initializer .
    (61) member_initializer_list -> member_initializer . COMMA member_initializer_list

    RBRACE          reduce using rule 60 (member_initializer_list -> member_initializer .)
    COMMA           shift and go to state 301


state 280

    (62) member_initializer -> ID . EQUAL exp

    EQUAL           shift and go to state 302


state 281

    (57) object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .

    SEMI            reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    LSB             reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    LPAREN          reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    PLUSPLUS        reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    MINUSMINUS      reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    DOT             reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    EQUAL           reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    STAR            reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    SLASH           reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    PERCENT         reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    PLUS            reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    MINUS           reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    LSHIFT          reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    RSHIFT          reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    LT              reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    GT              reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    LEQ             reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    GEQ             reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    IS              reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    EQEQUAL         reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    NOTEQUAL        reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    AMPER           reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    CIRCUMFLEX      reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    PIPE            reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    AMPERAMPER      reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    HOOK            reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    PIPEPIPE        reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    RPAREN          reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    COMMA           reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    RSB             reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    COLON           reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)
    RBRACE          reduce using rule 57 (object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer .)


state 282

    (70) if_statement -> IF LPAREN exp RPAREN block ELSE block .

    CONST           reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    LBRACE          reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    SEMI            reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    IF              reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    SWITCH          reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    WHILE           reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    DO              reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    FOR             reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    FOREACH         reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    BREAK           reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    CONTINUE        reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    RETURN          reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    OBJECT          reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    STRING          reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    BOOL            reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    VOID            reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    NEW             reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    PLUSPLUS        reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    MINUSMINUS      reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    INT             reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    LONG            reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    CHAR            reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    FLOAT           reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    DOUBLE          reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    DECIMAL         reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    TRUE            reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    FALSE           reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    NULL            reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    INTNUM          reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    HEXADECIMALNUM  reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    BINARYNUM       reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    FLOATNUM        reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    DOUBLENUM       reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    DECIMALNUM      reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    CHARLITERAL     reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    STRINGLITERAL   reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    ID              reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    THIS            reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    LPAREN          reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    TYPEOF          reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    SIZEOF          reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    RBRACE          reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    CASE            reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)
    DEFAULT         reduce using rule 70 (if_statement -> IF LPAREN exp RPAREN block ELSE block .)


state 283

    (71) switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .

    CONST           reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    LBRACE          reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    SEMI            reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    IF              reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    SWITCH          reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    WHILE           reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    DO              reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    FOR             reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    FOREACH         reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    BREAK           reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    CONTINUE        reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    RETURN          reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    OBJECT          reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    STRING          reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    BOOL            reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    VOID            reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    NEW             reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    PLUSPLUS        reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    MINUSMINUS      reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    INT             reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    LONG            reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    CHAR            reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    FLOAT           reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    DOUBLE          reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    DECIMAL         reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    TRUE            reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    FALSE           reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    NULL            reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    INTNUM          reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    HEXADECIMALNUM  reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    BINARYNUM       reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    FLOATNUM        reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    DOUBLENUM       reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    DECIMALNUM      reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    CHARLITERAL     reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    STRINGLITERAL   reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    ID              reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    THIS            reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    LPAREN          reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    TYPEOF          reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    SIZEOF          reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    RBRACE          reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    CASE            reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)
    DEFAULT         reduce using rule 71 (switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE .)


state 284

    (73) switch_body -> switch_section switch_body .

    RBRACE          reduce using rule 73 (switch_body -> switch_section switch_body .)


state 285

    (74) switch_section -> switch_label statement_list .

    CASE            reduce using rule 74 (switch_section -> switch_label statement_list .)
    DEFAULT         reduce using rule 74 (switch_section -> switch_label statement_list .)
    RBRACE          reduce using rule 74 (switch_section -> switch_label statement_list .)


state 286

    (75) switch_section -> switch_label switch_section .

    CASE            reduce using rule 75 (switch_section -> switch_label switch_section .)
    DEFAULT         reduce using rule 75 (switch_section -> switch_label switch_section .)
    RBRACE          reduce using rule 75 (switch_section -> switch_label switch_section .)


state 287

    (76) switch_label -> CASE pattern . COLON

    COLON           shift and go to state 303


state 288

    (78) pattern -> exp .

    COLON           reduce using rule 78 (pattern -> exp .)


state 289

    (77) switch_label -> DEFAULT COLON .

    CASE            reduce using rule 77 (switch_label -> DEFAULT COLON .)
    DEFAULT         reduce using rule 77 (switch_label -> DEFAULT COLON .)
    CONST           reduce using rule 77 (switch_label -> DEFAULT COLON .)
    LBRACE          reduce using rule 77 (switch_label -> DEFAULT COLON .)
    SEMI            reduce using rule 77 (switch_label -> DEFAULT COLON .)
    IF              reduce using rule 77 (switch_label -> DEFAULT COLON .)
    SWITCH          reduce using rule 77 (switch_label -> DEFAULT COLON .)
    WHILE           reduce using rule 77 (switch_label -> DEFAULT COLON .)
    DO              reduce using rule 77 (switch_label -> DEFAULT COLON .)
    FOR             reduce using rule 77 (switch_label -> DEFAULT COLON .)
    FOREACH         reduce using rule 77 (switch_label -> DEFAULT COLON .)
    BREAK           reduce using rule 77 (switch_label -> DEFAULT COLON .)
    CONTINUE        reduce using rule 77 (switch_label -> DEFAULT COLON .)
    RETURN          reduce using rule 77 (switch_label -> DEFAULT COLON .)
    OBJECT          reduce using rule 77 (switch_label -> DEFAULT COLON .)
    STRING          reduce using rule 77 (switch_label -> DEFAULT COLON .)
    BOOL            reduce using rule 77 (switch_label -> DEFAULT COLON .)
    VOID            reduce using rule 77 (switch_label -> DEFAULT COLON .)
    NEW             reduce using rule 77 (switch_label -> DEFAULT COLON .)
    PLUSPLUS        reduce using rule 77 (switch_label -> DEFAULT COLON .)
    MINUSMINUS      reduce using rule 77 (switch_label -> DEFAULT COLON .)
    INT             reduce using rule 77 (switch_label -> DEFAULT COLON .)
    LONG            reduce using rule 77 (switch_label -> DEFAULT COLON .)
    CHAR            reduce using rule 77 (switch_label -> DEFAULT COLON .)
    FLOAT           reduce using rule 77 (switch_label -> DEFAULT COLON .)
    DOUBLE          reduce using rule 77 (switch_label -> DEFAULT COLON .)
    DECIMAL         reduce using rule 77 (switch_label -> DEFAULT COLON .)
    TRUE            reduce using rule 77 (switch_label -> DEFAULT COLON .)
    FALSE           reduce using rule 77 (switch_label -> DEFAULT COLON .)
    NULL            reduce using rule 77 (switch_label -> DEFAULT COLON .)
    INTNUM          reduce using rule 77 (switch_label -> DEFAULT COLON .)
    HEXADECIMALNUM  reduce using rule 77 (switch_label -> DEFAULT COLON .)
    BINARYNUM       reduce using rule 77 (switch_label -> DEFAULT COLON .)
    FLOATNUM        reduce using rule 77 (switch_label -> DEFAULT COLON .)
    DOUBLENUM       reduce using rule 77 (switch_label -> DEFAULT COLON .)
    DECIMALNUM      reduce using rule 77 (switch_label -> DEFAULT COLON .)
    CHARLITERAL     reduce using rule 77 (switch_label -> DEFAULT COLON .)
    STRINGLITERAL   reduce using rule 77 (switch_label -> DEFAULT COLON .)
    ID              reduce using rule 77 (switch_label -> DEFAULT COLON .)
    THIS            reduce using rule 77 (switch_label -> DEFAULT COLON .)
    LPAREN          reduce using rule 77 (switch_label -> DEFAULT COLON .)
    TYPEOF          reduce using rule 77 (switch_label -> DEFAULT COLON .)
    SIZEOF          reduce using rule 77 (switch_label -> DEFAULT COLON .)


state 290

    (84) do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .

    CONST           reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    LBRACE          reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    SEMI            reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    IF              reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    SWITCH          reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    WHILE           reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    DO              reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    FOR             reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    FOREACH         reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    BREAK           reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    CONTINUE        reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    RETURN          reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    OBJECT          reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    STRING          reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    BOOL            reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    VOID            reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    NEW             reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    PLUSPLUS        reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    MINUSMINUS      reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    INT             reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    LONG            reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    CHAR            reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    FLOAT           reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    DOUBLE          reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    DECIMAL         reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    TRUE            reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    FALSE           reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    NULL            reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    INTNUM          reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    HEXADECIMALNUM  reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    BINARYNUM       reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    FLOATNUM        reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    DOUBLENUM       reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    DECIMALNUM      reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    CHARLITERAL     reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    STRINGLITERAL   reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    ID              reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    THIS            reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    LPAREN          reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    TYPEOF          reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    SIZEOF          reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    RBRACE          reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    CASE            reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)
    DEFAULT         reduce using rule 84 (do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI .)


state 291

    (87) for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN . embedded_statement
    (37) embedded_statement -> . block
    (38) embedded_statement -> . empty_statement
    (39) embedded_statement -> . exp_statement
    (40) embedded_statement -> . selection_statement
    (41) embedded_statement -> . iteration_statement
    (42) embedded_statement -> . jump_statement
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE
    (45) empty_statement -> . SEMI
    (46) exp_statement -> . statement_exp SEMI
    (67) selection_statement -> . if_statement
    (68) selection_statement -> . switch_statement
    (79) iteration_statement -> . while_statement
    (80) iteration_statement -> . do_statement
    (81) iteration_statement -> . for_statement
    (82) iteration_statement -> . foreach_statement
    (99) jump_statement -> . break_statement
    (100) jump_statement -> . continue_statement
    (101) jump_statement -> . return_statement
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (69) if_statement -> . IF LPAREN exp RPAREN block
    (70) if_statement -> . IF LPAREN exp RPAREN block ELSE block
    (71) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (83) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (84) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (85) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (98) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (102) break_statement -> . BREAK SEMI
    (103) continue_statement -> . CONTINUE SEMI
    (104) return_statement -> . RETURN SEMI
    (105) return_statement -> . RETURN exp SEMI
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    LBRACE          shift and go to state 21
    SEMI            shift and go to state 29
    IF              shift and go to state 56
    SWITCH          shift and go to state 58
    WHILE           shift and go to state 59
    DO              shift and go to state 60
    FOR             shift and go to state 61
    FOREACH         shift and go to state 62
    BREAK           shift and go to state 64
    CONTINUE        shift and go to state 65
    RETURN          shift and go to state 66
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    embedded_statement             shift and go to state 304
    block                          shift and go to state 31
    empty_statement                shift and go to state 32
    exp_statement                  shift and go to state 33
    selection_statement            shift and go to state 34
    iteration_statement            shift and go to state 35
    jump_statement                 shift and go to state 36
    statement_exp                  shift and go to state 39
    if_statement                   shift and go to state 40
    switch_statement               shift and go to state 41
    while_statement                shift and go to state 42
    do_statement                   shift and go to state 43
    for_statement                  shift and go to state 44
    foreach_statement              shift and go to state 45
    break_statement                shift and go to state 46
    continue_statement             shift and go to state 47
    return_statement               shift and go to state 48
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 292

    (88) for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .

    CONST           reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    LBRACE          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    SEMI            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    IF              reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    SWITCH          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    WHILE           reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    DO              reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    FOR             reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    FOREACH         reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    BREAK           reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    CONTINUE        reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    RETURN          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    OBJECT          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    STRING          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    BOOL            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    VOID            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    NEW             reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    INT             reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    LONG            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    CHAR            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    FLOAT           reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    DOUBLE          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    DECIMAL         reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    TRUE            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    FALSE           reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    NULL            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    INTNUM          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    ID              reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    THIS            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    LPAREN          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    TYPEOF          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    SIZEOF          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    RBRACE          reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    CASE            reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)
    DEFAULT         reduce using rule 88 (for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement .)


state 293

    (85) for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator . RPAREN embedded_statement

    RPAREN          shift and go to state 305


state 294

    (86) for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN . embedded_statement
    (37) embedded_statement -> . block
    (38) embedded_statement -> . empty_statement
    (39) embedded_statement -> . exp_statement
    (40) embedded_statement -> . selection_statement
    (41) embedded_statement -> . iteration_statement
    (42) embedded_statement -> . jump_statement
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE
    (45) empty_statement -> . SEMI
    (46) exp_statement -> . statement_exp SEMI
    (67) selection_statement -> . if_statement
    (68) selection_statement -> . switch_statement
    (79) iteration_statement -> . while_statement
    (80) iteration_statement -> . do_statement
    (81) iteration_statement -> . for_statement
    (82) iteration_statement -> . foreach_statement
    (99) jump_statement -> . break_statement
    (100) jump_statement -> . continue_statement
    (101) jump_statement -> . return_statement
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (69) if_statement -> . IF LPAREN exp RPAREN block
    (70) if_statement -> . IF LPAREN exp RPAREN block ELSE block
    (71) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (83) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (84) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (85) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (98) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (102) break_statement -> . BREAK SEMI
    (103) continue_statement -> . CONTINUE SEMI
    (104) return_statement -> . RETURN SEMI
    (105) return_statement -> . RETURN exp SEMI
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    LBRACE          shift and go to state 21
    SEMI            shift and go to state 29
    IF              shift and go to state 56
    SWITCH          shift and go to state 58
    WHILE           shift and go to state 59
    DO              shift and go to state 60
    FOR             shift and go to state 61
    FOREACH         shift and go to state 62
    BREAK           shift and go to state 64
    CONTINUE        shift and go to state 65
    RETURN          shift and go to state 66
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    embedded_statement             shift and go to state 306
    block                          shift and go to state 31
    empty_statement                shift and go to state 32
    exp_statement                  shift and go to state 33
    selection_statement            shift and go to state 34
    iteration_statement            shift and go to state 35
    jump_statement                 shift and go to state 36
    statement_exp                  shift and go to state 39
    if_statement                   shift and go to state 40
    switch_statement               shift and go to state 41
    while_statement                shift and go to state 42
    do_statement                   shift and go to state 43
    for_statement                  shift and go to state 44
    foreach_statement              shift and go to state 45
    break_statement                shift and go to state 46
    continue_statement             shift and go to state 47
    return_statement               shift and go to state 48
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 295

    (91) for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .

    CONST           reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    LBRACE          reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    SEMI            reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    IF              reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    SWITCH          reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    WHILE           reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    DO              reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    FOR             reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    FOREACH         reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    BREAK           reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    CONTINUE        reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    RETURN          reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    OBJECT          reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    STRING          reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    BOOL            reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    VOID            reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    NEW             reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    INT             reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    LONG            reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    CHAR            reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    FLOAT           reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    DOUBLE          reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    DECIMAL         reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    TRUE            reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    FALSE           reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    NULL            reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    INTNUM          reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    ID              reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    THIS            reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    LPAREN          reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    TYPEOF          reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    SIZEOF          reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    RBRACE          reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    CASE            reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)
    DEFAULT         reduce using rule 91 (for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement .)


state 296

    (97) statement_exp_list -> statement_exp COMMA statement_exp_list .

    RPAREN          reduce using rule 97 (statement_exp_list -> statement_exp COMMA statement_exp_list .)


state 297

    (89) for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN . embedded_statement
    (37) embedded_statement -> . block
    (38) embedded_statement -> . empty_statement
    (39) embedded_statement -> . exp_statement
    (40) embedded_statement -> . selection_statement
    (41) embedded_statement -> . iteration_statement
    (42) embedded_statement -> . jump_statement
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE
    (45) empty_statement -> . SEMI
    (46) exp_statement -> . statement_exp SEMI
    (67) selection_statement -> . if_statement
    (68) selection_statement -> . switch_statement
    (79) iteration_statement -> . while_statement
    (80) iteration_statement -> . do_statement
    (81) iteration_statement -> . for_statement
    (82) iteration_statement -> . foreach_statement
    (99) jump_statement -> . break_statement
    (100) jump_statement -> . continue_statement
    (101) jump_statement -> . return_statement
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (69) if_statement -> . IF LPAREN exp RPAREN block
    (70) if_statement -> . IF LPAREN exp RPAREN block ELSE block
    (71) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (83) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (84) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (85) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (98) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (102) break_statement -> . BREAK SEMI
    (103) continue_statement -> . CONTINUE SEMI
    (104) return_statement -> . RETURN SEMI
    (105) return_statement -> . RETURN exp SEMI
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    LBRACE          shift and go to state 21
    SEMI            shift and go to state 29
    IF              shift and go to state 56
    SWITCH          shift and go to state 58
    WHILE           shift and go to state 59
    DO              shift and go to state 60
    FOR             shift and go to state 61
    FOREACH         shift and go to state 62
    BREAK           shift and go to state 64
    CONTINUE        shift and go to state 65
    RETURN          shift and go to state 66
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    embedded_statement             shift and go to state 307
    block                          shift and go to state 31
    empty_statement                shift and go to state 32
    exp_statement                  shift and go to state 33
    selection_statement            shift and go to state 34
    iteration_statement            shift and go to state 35
    jump_statement                 shift and go to state 36
    statement_exp                  shift and go to state 39
    if_statement                   shift and go to state 40
    switch_statement               shift and go to state 41
    while_statement                shift and go to state 42
    do_statement                   shift and go to state 43
    for_statement                  shift and go to state 44
    foreach_statement              shift and go to state 45
    break_statement                shift and go to state 46
    continue_statement             shift and go to state 47
    return_statement               shift and go to state 48
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 298

    (90) for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .

    CONST           reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    LBRACE          reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    SEMI            reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    IF              reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    SWITCH          reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    WHILE           reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    DO              reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    FOR             reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    FOREACH         reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    BREAK           reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    CONTINUE        reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    RETURN          reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    OBJECT          reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    STRING          reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    BOOL            reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    VOID            reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    NEW             reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    INT             reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    LONG            reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    CHAR            reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    FLOAT           reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    DOUBLE          reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    DECIMAL         reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    TRUE            reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    FALSE           reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    NULL            reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    INTNUM          reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    ID              reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    THIS            reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    LPAREN          reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    TYPEOF          reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    SIZEOF          reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    RBRACE          reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    CASE            reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)
    DEFAULT         reduce using rule 90 (for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement .)


state 299

    (98) foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN . embedded_statement
    (37) embedded_statement -> . block
    (38) embedded_statement -> . empty_statement
    (39) embedded_statement -> . exp_statement
    (40) embedded_statement -> . selection_statement
    (41) embedded_statement -> . iteration_statement
    (42) embedded_statement -> . jump_statement
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE
    (45) empty_statement -> . SEMI
    (46) exp_statement -> . statement_exp SEMI
    (67) selection_statement -> . if_statement
    (68) selection_statement -> . switch_statement
    (79) iteration_statement -> . while_statement
    (80) iteration_statement -> . do_statement
    (81) iteration_statement -> . for_statement
    (82) iteration_statement -> . foreach_statement
    (99) jump_statement -> . break_statement
    (100) jump_statement -> . continue_statement
    (101) jump_statement -> . return_statement
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (69) if_statement -> . IF LPAREN exp RPAREN block
    (70) if_statement -> . IF LPAREN exp RPAREN block ELSE block
    (71) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (83) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (84) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (85) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (98) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (102) break_statement -> . BREAK SEMI
    (103) continue_statement -> . CONTINUE SEMI
    (104) return_statement -> . RETURN SEMI
    (105) return_statement -> . RETURN exp SEMI
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    LBRACE          shift and go to state 21
    SEMI            shift and go to state 29
    IF              shift and go to state 56
    SWITCH          shift and go to state 58
    WHILE           shift and go to state 59
    DO              shift and go to state 60
    FOR             shift and go to state 61
    FOREACH         shift and go to state 62
    BREAK           shift and go to state 64
    CONTINUE        shift and go to state 65
    RETURN          shift and go to state 66
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    embedded_statement             shift and go to state 308
    block                          shift and go to state 31
    empty_statement                shift and go to state 32
    exp_statement                  shift and go to state 33
    selection_statement            shift and go to state 34
    iteration_statement            shift and go to state 35
    jump_statement                 shift and go to state 36
    statement_exp                  shift and go to state 39
    if_statement                   shift and go to state 40
    switch_statement               shift and go to state 41
    while_statement                shift and go to state 42
    do_statement                   shift and go to state 43
    for_statement                  shift and go to state 44
    foreach_statement              shift and go to state 45
    break_statement                shift and go to state 46
    continue_statement             shift and go to state 47
    return_statement               shift and go to state 48
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 300

    (59) object_initializer -> LBRACE member_initializer_list RBRACE .

    SEMI            reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LSB             reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LPAREN          reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    PLUSPLUS        reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    MINUSMINUS      reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    DOT             reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    EQUAL           reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    STAR            reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    SLASH           reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    PERCENT         reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    PLUS            reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    MINUS           reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LSHIFT          reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    RSHIFT          reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LT              reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    GT              reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    LEQ             reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    GEQ             reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    IS              reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    EQEQUAL         reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    NOTEQUAL        reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    AMPER           reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    CIRCUMFLEX      reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    PIPE            reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    AMPERAMPER      reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    HOOK            reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    PIPEPIPE        reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    RPAREN          reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    COMMA           reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    RSB             reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    COLON           reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)
    RBRACE          reduce using rule 59 (object_initializer -> LBRACE member_initializer_list RBRACE .)


state 301

    (61) member_initializer_list -> member_initializer COMMA . member_initializer_list
    (60) member_initializer_list -> . member_initializer
    (61) member_initializer_list -> . member_initializer COMMA member_initializer_list
    (62) member_initializer -> . ID EQUAL exp

    ID              shift and go to state 280

    member_initializer             shift and go to state 279
    member_initializer_list        shift and go to state 309

state 302

    (62) member_initializer -> ID EQUAL . exp
    (145) exp -> . non_assignment_exp
    (146) exp -> . assignment
    (147) non_assignment_exp -> . conditional_exp
    (179) assignment -> . unary_exp EQUAL exp
    (148) conditional_exp -> . conditional_or_exp HOOK exp COLON exp
    (149) conditional_exp -> . conditional_or_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (150) conditional_or_exp -> . conditional_or_exp PIPEPIPE conditional_and_exp
    (151) conditional_or_exp -> . conditional_and_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (152) conditional_and_exp -> . conditional_and_exp AMPERAMPER inclusive_or_exp
    (153) conditional_and_exp -> . inclusive_or_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (154) inclusive_or_exp -> . inclusive_or_exp PIPE exclusive_or_exp
    (155) inclusive_or_exp -> . exclusive_or_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN
    (156) exclusive_or_exp -> . exclusive_or_exp CIRCUMFLEX and_exp
    (157) exclusive_or_exp -> . and_exp
    (158) and_exp -> . and_exp AMPER equality_exp
    (159) and_exp -> . equality_exp
    (160) equality_exp -> . equality_exp EQEQUAL relational_exp
    (161) equality_exp -> . equality_exp NOTEQUAL relational_exp
    (162) equality_exp -> . relational_exp
    (163) relational_exp -> . relational_exp LT shift_exp
    (164) relational_exp -> . relational_exp GT shift_exp
    (165) relational_exp -> . relational_exp LEQ shift_exp
    (166) relational_exp -> . relational_exp GEQ shift_exp
    (167) relational_exp -> . relational_exp IS type
    (168) relational_exp -> . shift_exp
    (169) shift_exp -> . shift_exp LSHIFT additive_exp
    (170) shift_exp -> . shift_exp RSHIFT additive_exp
    (171) shift_exp -> . additive_exp
    (172) additive_exp -> . additive_exp PLUS multiplicative_exp
    (173) additive_exp -> . additive_exp MINUS multiplicative_exp
    (174) additive_exp -> . multiplicative_exp
    (175) multiplicative_exp -> . multiplicative_exp STAR unary_exp
    (176) multiplicative_exp -> . multiplicative_exp SLASH unary_exp
    (177) multiplicative_exp -> . multiplicative_exp PERCENT unary_exp
    (178) multiplicative_exp -> . unary_exp

    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    LPAREN          shift and go to state 57
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    NEW             shift and go to state 68
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    exp                            shift and go to state 310
    non_assignment_exp             shift and go to state 107
    assignment                     shift and go to state 108
    conditional_exp                shift and go to state 109
    unary_exp                      shift and go to state 105
    conditional_or_exp             shift and go to state 110
    primary_exp                    shift and go to state 111
    pre_increment_exp              shift and go to state 112
    pre_decrement_exp              shift and go to state 113
    cast_exp                       shift and go to state 73
    conditional_and_exp            shift and go to state 114
    primary_no_array_creation_exp  shift and go to state 72
    inclusive_or_exp               shift and go to state 115
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    invocation_exp                 shift and go to state 116
    element_access                 shift and go to state 87
    post_increment_exp             shift and go to state 117
    post_decrement_exp             shift and go to state 118
    object_creation_exp            shift and go to state 119
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90
    exclusive_or_exp               shift and go to state 120
    and_exp                        shift and go to state 121
    equality_exp                   shift and go to state 122
    relational_exp                 shift and go to state 123
    shift_exp                      shift and go to state 124
    additive_exp                   shift and go to state 125
    multiplicative_exp             shift and go to state 126

state 303

    (76) switch_label -> CASE pattern COLON .

    CASE            reduce using rule 76 (switch_label -> CASE pattern COLON .)
    DEFAULT         reduce using rule 76 (switch_label -> CASE pattern COLON .)
    CONST           reduce using rule 76 (switch_label -> CASE pattern COLON .)
    LBRACE          reduce using rule 76 (switch_label -> CASE pattern COLON .)
    SEMI            reduce using rule 76 (switch_label -> CASE pattern COLON .)
    IF              reduce using rule 76 (switch_label -> CASE pattern COLON .)
    SWITCH          reduce using rule 76 (switch_label -> CASE pattern COLON .)
    WHILE           reduce using rule 76 (switch_label -> CASE pattern COLON .)
    DO              reduce using rule 76 (switch_label -> CASE pattern COLON .)
    FOR             reduce using rule 76 (switch_label -> CASE pattern COLON .)
    FOREACH         reduce using rule 76 (switch_label -> CASE pattern COLON .)
    BREAK           reduce using rule 76 (switch_label -> CASE pattern COLON .)
    CONTINUE        reduce using rule 76 (switch_label -> CASE pattern COLON .)
    RETURN          reduce using rule 76 (switch_label -> CASE pattern COLON .)
    OBJECT          reduce using rule 76 (switch_label -> CASE pattern COLON .)
    STRING          reduce using rule 76 (switch_label -> CASE pattern COLON .)
    BOOL            reduce using rule 76 (switch_label -> CASE pattern COLON .)
    VOID            reduce using rule 76 (switch_label -> CASE pattern COLON .)
    NEW             reduce using rule 76 (switch_label -> CASE pattern COLON .)
    PLUSPLUS        reduce using rule 76 (switch_label -> CASE pattern COLON .)
    MINUSMINUS      reduce using rule 76 (switch_label -> CASE pattern COLON .)
    INT             reduce using rule 76 (switch_label -> CASE pattern COLON .)
    LONG            reduce using rule 76 (switch_label -> CASE pattern COLON .)
    CHAR            reduce using rule 76 (switch_label -> CASE pattern COLON .)
    FLOAT           reduce using rule 76 (switch_label -> CASE pattern COLON .)
    DOUBLE          reduce using rule 76 (switch_label -> CASE pattern COLON .)
    DECIMAL         reduce using rule 76 (switch_label -> CASE pattern COLON .)
    TRUE            reduce using rule 76 (switch_label -> CASE pattern COLON .)
    FALSE           reduce using rule 76 (switch_label -> CASE pattern COLON .)
    NULL            reduce using rule 76 (switch_label -> CASE pattern COLON .)
    INTNUM          reduce using rule 76 (switch_label -> CASE pattern COLON .)
    HEXADECIMALNUM  reduce using rule 76 (switch_label -> CASE pattern COLON .)
    BINARYNUM       reduce using rule 76 (switch_label -> CASE pattern COLON .)
    FLOATNUM        reduce using rule 76 (switch_label -> CASE pattern COLON .)
    DOUBLENUM       reduce using rule 76 (switch_label -> CASE pattern COLON .)
    DECIMALNUM      reduce using rule 76 (switch_label -> CASE pattern COLON .)
    CHARLITERAL     reduce using rule 76 (switch_label -> CASE pattern COLON .)
    STRINGLITERAL   reduce using rule 76 (switch_label -> CASE pattern COLON .)
    ID              reduce using rule 76 (switch_label -> CASE pattern COLON .)
    THIS            reduce using rule 76 (switch_label -> CASE pattern COLON .)
    LPAREN          reduce using rule 76 (switch_label -> CASE pattern COLON .)
    TYPEOF          reduce using rule 76 (switch_label -> CASE pattern COLON .)
    SIZEOF          reduce using rule 76 (switch_label -> CASE pattern COLON .)


state 304

    (87) for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .

    CONST           reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    LBRACE          reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    SEMI            reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    IF              reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    SWITCH          reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    WHILE           reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    DO              reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    FOR             reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    FOREACH         reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    BREAK           reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    CONTINUE        reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    RETURN          reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    OBJECT          reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    STRING          reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    BOOL            reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    VOID            reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    NEW             reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    INT             reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    LONG            reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    CHAR            reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    FLOAT           reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    DOUBLE          reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    DECIMAL         reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    TRUE            reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    FALSE           reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    NULL            reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    INTNUM          reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    ID              reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    THIS            reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    LPAREN          reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    TYPEOF          reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    SIZEOF          reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    RBRACE          reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    CASE            reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)
    DEFAULT         reduce using rule 87 (for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement .)


state 305

    (85) for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN . embedded_statement
    (37) embedded_statement -> . block
    (38) embedded_statement -> . empty_statement
    (39) embedded_statement -> . exp_statement
    (40) embedded_statement -> . selection_statement
    (41) embedded_statement -> . iteration_statement
    (42) embedded_statement -> . jump_statement
    (43) block -> . LBRACE statement_list RBRACE
    (44) block -> . LBRACE RBRACE
    (45) empty_statement -> . SEMI
    (46) exp_statement -> . statement_exp SEMI
    (67) selection_statement -> . if_statement
    (68) selection_statement -> . switch_statement
    (79) iteration_statement -> . while_statement
    (80) iteration_statement -> . do_statement
    (81) iteration_statement -> . for_statement
    (82) iteration_statement -> . foreach_statement
    (99) jump_statement -> . break_statement
    (100) jump_statement -> . continue_statement
    (101) jump_statement -> . return_statement
    (47) statement_exp -> . invocation_exp
    (48) statement_exp -> . object_creation_exp
    (49) statement_exp -> . assignment
    (50) statement_exp -> . post_increment_exp
    (51) statement_exp -> . post_decrement_exp
    (52) statement_exp -> . pre_increment_exp
    (53) statement_exp -> . pre_decrement_exp
    (69) if_statement -> . IF LPAREN exp RPAREN block
    (70) if_statement -> . IF LPAREN exp RPAREN block ELSE block
    (71) switch_statement -> . SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
    (83) while_statement -> . WHILE LPAREN exp RPAREN embedded_statement
    (84) do_statement -> . DO embedded_statement WHILE LPAREN exp RPAREN SEMI
    (85) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (86) for_statement -> . FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
    (87) for_statement -> . FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
    (88) for_statement -> . FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
    (89) for_statement -> . FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
    (90) for_statement -> . FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
    (91) for_statement -> . FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
    (92) for_statement -> . FOR LPAREN SEMI SEMI RPAREN embedded_statement
    (98) foreach_statement -> . FOREACH LPAREN type ID IN exp RPAREN embedded_statement
    (102) break_statement -> . BREAK SEMI
    (103) continue_statement -> . CONTINUE SEMI
    (104) return_statement -> . RETURN SEMI
    (105) return_statement -> . RETURN exp SEMI
    (126) invocation_exp -> . primary_exp LPAREN RPAREN
    (127) invocation_exp -> . primary_exp LPAREN arg_list RPAREN
    (54) object_creation_exp -> . NEW type LPAREN RPAREN
    (55) object_creation_exp -> . NEW type LPAREN RPAREN object_initializer
    (56) object_creation_exp -> . NEW type LPAREN arg_list RPAREN
    (57) object_creation_exp -> . NEW type LPAREN arg_list RPAREN object_initializer
    (179) assignment -> . unary_exp EQUAL exp
    (63) post_increment_exp -> . primary_exp PLUSPLUS
    (64) post_decrement_exp -> . primary_exp MINUSMINUS
    (65) pre_increment_exp -> . PLUSPLUS unary_exp
    (66) pre_decrement_exp -> . MINUSMINUS unary_exp
    (108) primary_exp -> . primary_no_array_creation_exp
    (140) unary_exp -> . primary_exp
    (141) unary_exp -> . pre_increment_exp
    (142) unary_exp -> . pre_decrement_exp
    (143) unary_exp -> . cast_exp
    (109) primary_no_array_creation_exp -> . TRUE
    (110) primary_no_array_creation_exp -> . FALSE
    (111) primary_no_array_creation_exp -> . NULL
    (112) primary_no_array_creation_exp -> . INTNUM
    (113) primary_no_array_creation_exp -> . HEXADECIMALNUM
    (114) primary_no_array_creation_exp -> . BINARYNUM
    (115) primary_no_array_creation_exp -> . FLOATNUM
    (116) primary_no_array_creation_exp -> . DOUBLENUM
    (117) primary_no_array_creation_exp -> . DECIMALNUM
    (118) primary_no_array_creation_exp -> . CHARLITERAL
    (119) primary_no_array_creation_exp -> . STRINGLITERAL
    (120) primary_no_array_creation_exp -> . ID
    (121) primary_no_array_creation_exp -> . parenthesized_exp
    (123) primary_no_array_creation_exp -> . member_access
    (125) primary_no_array_creation_exp -> . invocation_exp
    (128) primary_no_array_creation_exp -> . element_access
    (130) primary_no_array_creation_exp -> . THIS
    (131) primary_no_array_creation_exp -> . post_increment_exp
    (132) primary_no_array_creation_exp -> . post_decrement_exp
    (133) primary_no_array_creation_exp -> . object_creation_exp
    (134) primary_no_array_creation_exp -> . typeof_exp
    (136) primary_no_array_creation_exp -> . sizeof_exp
    (144) cast_exp -> . LPAREN type RPAREN unary_exp
    (122) parenthesized_exp -> . LPAREN exp RPAREN
    (124) member_access -> . primary_exp DOT ID
    (129) element_access -> . primary_no_array_creation_exp LSB exp RSB
    (135) typeof_exp -> . TYPEOF LPAREN type RPAREN
    (137) sizeof_exp -> . SIZEOF LPAREN value_type RPAREN

    LBRACE          shift and go to state 21
    SEMI            shift and go to state 29
    IF              shift and go to state 56
    SWITCH          shift and go to state 58
    WHILE           shift and go to state 59
    DO              shift and go to state 60
    FOR             shift and go to state 61
    FOREACH         shift and go to state 62
    BREAK           shift and go to state 64
    CONTINUE        shift and go to state 65
    RETURN          shift and go to state 66
    NEW             shift and go to state 68
    PLUSPLUS        shift and go to state 70
    MINUSMINUS      shift and go to state 71
    TRUE            shift and go to state 74
    FALSE           shift and go to state 75
    NULL            shift and go to state 76
    INTNUM          shift and go to state 77
    HEXADECIMALNUM  shift and go to state 78
    BINARYNUM       shift and go to state 79
    FLOATNUM        shift and go to state 80
    DOUBLENUM       shift and go to state 81
    DECIMALNUM      shift and go to state 82
    CHARLITERAL     shift and go to state 83
    STRINGLITERAL   shift and go to state 84
    ID              shift and go to state 63
    THIS            shift and go to state 88
    LPAREN          shift and go to state 57
    TYPEOF          shift and go to state 91
    SIZEOF          shift and go to state 92

    embedded_statement             shift and go to state 311
    block                          shift and go to state 31
    empty_statement                shift and go to state 32
    exp_statement                  shift and go to state 33
    selection_statement            shift and go to state 34
    iteration_statement            shift and go to state 35
    jump_statement                 shift and go to state 36
    statement_exp                  shift and go to state 39
    if_statement                   shift and go to state 40
    switch_statement               shift and go to state 41
    while_statement                shift and go to state 42
    do_statement                   shift and go to state 43
    for_statement                  shift and go to state 44
    foreach_statement              shift and go to state 45
    break_statement                shift and go to state 46
    continue_statement             shift and go to state 47
    return_statement               shift and go to state 48
    invocation_exp                 shift and go to state 49
    object_creation_exp            shift and go to state 50
    assignment                     shift and go to state 51
    post_increment_exp             shift and go to state 52
    post_decrement_exp             shift and go to state 53
    pre_increment_exp              shift and go to state 54
    pre_decrement_exp              shift and go to state 55
    primary_exp                    shift and go to state 67
    unary_exp                      shift and go to state 69
    primary_no_array_creation_exp  shift and go to state 72
    cast_exp                       shift and go to state 73
    parenthesized_exp              shift and go to state 85
    member_access                  shift and go to state 86
    element_access                 shift and go to state 87
    typeof_exp                     shift and go to state 89
    sizeof_exp                     shift and go to state 90

state 306

    (86) for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .

    CONST           reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    LBRACE          reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    SEMI            reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    IF              reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    SWITCH          reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    WHILE           reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    DO              reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    FOR             reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    FOREACH         reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    BREAK           reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    CONTINUE        reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    RETURN          reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    OBJECT          reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    STRING          reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    BOOL            reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    VOID            reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    NEW             reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    INT             reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    LONG            reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    CHAR            reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    FLOAT           reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    DOUBLE          reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    DECIMAL         reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    TRUE            reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    FALSE           reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    NULL            reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    INTNUM          reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    ID              reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    THIS            reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    LPAREN          reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    TYPEOF          reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    SIZEOF          reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    RBRACE          reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    CASE            reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)
    DEFAULT         reduce using rule 86 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement .)


state 307

    (89) for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .

    CONST           reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    LBRACE          reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    SEMI            reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    IF              reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    SWITCH          reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    WHILE           reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DO              reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FOR             reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FOREACH         reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    BREAK           reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    CONTINUE        reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    RETURN          reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    OBJECT          reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    STRING          reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    BOOL            reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    VOID            reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    NEW             reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    INT             reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    LONG            reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    CHAR            reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FLOAT           reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DOUBLE          reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DECIMAL         reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    TRUE            reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FALSE           reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    NULL            reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    INTNUM          reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    ID              reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    THIS            reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    LPAREN          reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    TYPEOF          reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    SIZEOF          reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    RBRACE          reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    CASE            reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DEFAULT         reduce using rule 89 (for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)


state 308

    (98) foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .

    CONST           reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    LBRACE          reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    SEMI            reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    IF              reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    SWITCH          reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    WHILE           reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    DO              reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    FOR             reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    FOREACH         reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    BREAK           reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    CONTINUE        reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    RETURN          reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    OBJECT          reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    STRING          reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    BOOL            reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    VOID            reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    NEW             reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    INT             reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    LONG            reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    CHAR            reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    FLOAT           reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    DOUBLE          reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    DECIMAL         reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    TRUE            reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    FALSE           reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    NULL            reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    INTNUM          reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    ID              reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    THIS            reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    LPAREN          reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    TYPEOF          reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    SIZEOF          reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    RBRACE          reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    CASE            reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)
    DEFAULT         reduce using rule 98 (foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement .)


state 309

    (61) member_initializer_list -> member_initializer COMMA member_initializer_list .

    RBRACE          reduce using rule 61 (member_initializer_list -> member_initializer COMMA member_initializer_list .)


state 310

    (62) member_initializer -> ID EQUAL exp .

    COMMA           reduce using rule 62 (member_initializer -> ID EQUAL exp .)
    RBRACE          reduce using rule 62 (member_initializer -> ID EQUAL exp .)


state 311

    (85) for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .

    CONST           reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    LBRACE          reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    SEMI            reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    IF              reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    SWITCH          reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    WHILE           reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DO              reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FOR             reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FOREACH         reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    BREAK           reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    CONTINUE        reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    RETURN          reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    OBJECT          reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    STRING          reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    BOOL            reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    VOID            reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    NEW             reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    PLUSPLUS        reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    MINUSMINUS      reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    INT             reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    LONG            reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    CHAR            reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FLOAT           reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DOUBLE          reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DECIMAL         reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    TRUE            reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FALSE           reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    NULL            reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    INTNUM          reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    HEXADECIMALNUM  reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    BINARYNUM       reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    FLOATNUM        reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DOUBLENUM       reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DECIMALNUM      reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    CHARLITERAL     reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    STRINGLITERAL   reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    ID              reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    THIS            reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    LPAREN          reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    TYPEOF          reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    SIZEOF          reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    RBRACE          reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    CASE            reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)
    DEFAULT         reduce using rule 85 (for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement .)

