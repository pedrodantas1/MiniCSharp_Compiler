
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPER AMPERAMPER AMPEREQUAL BANG BINARYNUM BOOL BREAK CASE CATCH CHAR CHARLITERAL CIRCUMEQUAL CIRCUMFLEX CLASS COLON COMMA CONST CONTINUE DECIMAL DECIMALNUM DEFAULT DO DOT DOUBLE DOUBLENUM ELSE ENUM EQEQUAL EQUAL FALSE FINALLY FLOAT FLOATNUM FOR FOREACH GEQ GT HEXADECIMALNUM HOOK HOOKHOOK HOOKHOOKEQUAL ID IF IN INT INTERFACE INTNUM IS LBRACE LEQ LONG LPAREN LSB LSHIFT LSHIFTEQUAL LT MINUS MINUSEQUAL MINUSMINUS NAMESPACE NEW NOTEQUAL NULL OBJECT OUT OVERRIDE PARAMS PERCENT PERCENTEQUAL PIPE PIPEEQUAL PIPEPIPE PLUS PLUSEQUAL PLUSPLUS PRIVATE PROTECTED PUBLIC RBRACE READONLY REF RETURN RPAREN RSB RSHIFT RSHIFTEQUAL SEMI SHORT SIZEOF SLASH SLASHEQUAL STAR STAREQUAL STATIC STRING STRINGLITERAL STRUCT SWITCH THIS THROW TILDE TRUE TRY TYPEOF UINT ULONG USHORT VOID WHILEprogram : func_declaration\n               | func_declaration programtype_name : ID\n                 | type_name DOT IDtype : class_type\n            | interface_type\n            | value_typeclass_type : type_name\n                  | OBJECT\n                  | STRINGinterface_type : type_namevalue_type : integral_type\n                  | floating_point_type\n                  | BOOL\n                  | VOIDintegral_type : INTintegral_type : LONGintegral_type : CHARfloating_point_type : FLOATfloating_point_type : DOUBLEfloating_point_type : DECIMALfunc_declaration : signature blocksignature : type ID LPAREN param_list RPAREN\n                 | type ID LPAREN RPARENparam_list : type ID\n                  | type ID COMMA param_liststatement_list : statement\n                      | statement statement_liststatement : declaration_statement\n                 | embedded_statementdeclaration_statement : const_declaration SEMI\n                             | var_declaration SEMIconst_declaration : CONST type const_declaratorsconst_declarators : const_declarator\n                         | const_declarator COMMA const_declaratorsconst_declarator : ID EQUAL expvar_declaration : type var_declaratorsvar_declarators : var_declarator\n                       | var_declarator COMMA var_declaratorsvar_declarator : ID\n                      | ID EQUAL expembedded_statement : block\n                          | empty_statement\n                          | exp_statement\n                          | selection_statement\n                          | iteration_statement\n                          | jump_statementblock : LBRACE statement_list RBRACE\n             | LBRACE RBRACEempty_statement : SEMIexp_statement : statement_exp SEMIstatement_exp : invocation_exp\n                     | object_creation_exp\n                     | assignment\n                     | post_increment_exp\n                     | post_decrement_exp\n                     | pre_increment_exp\n                     | pre_decrement_expobject_creation_exp : NEW type LPAREN RPAREN\n                           | NEW type LPAREN RPAREN object_initializer\n                           | NEW type LPAREN arg_list RPAREN\n                           | NEW type LPAREN arg_list RPAREN object_initializerobject_initializer : LBRACE RBRACE\n                          | LBRACE member_initializer_list RBRACEmember_initializer_list : member_initializer\n                               | member_initializer COMMA member_initializer_listmember_initializer : ID EQUAL exppost_increment_exp : primary_exp PLUSPLUSpost_decrement_exp : primary_exp MINUSMINUSpre_increment_exp : PLUSPLUS unary_exppre_decrement_exp : MINUSMINUS unary_expselection_statement : if_statement\n                           | switch_statementif_statement : IF LPAREN exp RPAREN embedded_statement\n                    | IF LPAREN exp RPAREN embedded_statement ELSE embedded_statementswitch_statement : SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACEswitch_body : switch_section\n                   | switch_section switch_bodyswitch_section : switch_label statement_listswitch_section : switch_label switch_sectionswitch_label : CASE pattern COLON\n                    | DEFAULT COLONpattern : expiteration_statement : while_statement\n                           | do_statement\n                           | for_statement\n                           | foreach_statementwhile_statement : WHILE LPAREN exp RPAREN embedded_statementdo_statement : DO embedded_statement WHILE LPAREN exp RPAREN SEMIfor_statement : FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statementfor_statement : FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statementfor_statement : FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statementfor_statement : FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statementfor_statement : FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statementfor_statement : FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statementfor_statement : FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statementfor_statement : FOR LPAREN SEMI SEMI RPAREN embedded_statementfor_initializer : var_declaration\n                       | var_declaration COMMA for_initializerfor_condition : expfor_iterator : statement_exp_liststatement_exp_list : statement_exp\n                          | statement_exp COMMA statement_exp_listforeach_statement : FOREACH LPAREN type ID IN exp RPAREN embedded_statementjump_statement : break_statement\n                      | continue_statement\n                      | return_statementbreak_statement : BREAK SEMIcontinue_statement : CONTINUE SEMIreturn_statement : RETURN SEMI\n                        | RETURN exp SEMIarg_list : exp\n                | exp COMMA arg_listprimary_exp : primary_no_array_creation_expprimary_no_array_creation_exp : TRUE\n                                     | FALSEprimary_no_array_creation_exp : NULLprimary_no_array_creation_exp : INTNUMprimary_no_array_creation_exp : HEXADECIMALNUMprimary_no_array_creation_exp : BINARYNUMprimary_no_array_creation_exp : FLOATNUMprimary_no_array_creation_exp : DOUBLENUMprimary_no_array_creation_exp : DECIMALNUMprimary_no_array_creation_exp : CHARLITERALprimary_no_array_creation_exp : STRINGLITERALprimary_no_array_creation_exp : IDprimary_no_array_creation_exp : LPAREN exp RPARENprimary_no_array_creation_exp : primary_exp DOT IDprimary_no_array_creation_exp : invocation_expinvocation_exp : primary_exp LPAREN RPAREN\n                      | primary_exp LPAREN arg_list RPARENprimary_no_array_creation_exp : primary_no_array_creation_exp LSB exp RSBprimary_no_array_creation_exp : THISprimary_no_array_creation_exp : post_increment_expprimary_no_array_creation_exp : post_decrement_expprimary_no_array_creation_exp : object_creation_expprimary_no_array_creation_exp : TYPEOF LPAREN type RPARENprimary_no_array_creation_exp : SIZEOF LPAREN value_type RPARENprimary_no_array_creation_exp : DEFAULT LPAREN type RPARENexp_list : exp\n                | exp_list COMMA expunary_exp : primary_expunary_exp : pre_increment_expunary_exp : pre_decrement_expunary_exp : LPAREN type RPAREN unary_expexp : non_assignment_expexp : assignmentnon_assignment_exp : conditional_expconditional_exp : conditional_or_exp HOOK exp COLON exp\n                       | conditional_or_expconditional_or_exp : conditional_or_exp PIPEPIPE conditional_and_exp\n                          | conditional_and_expconditional_and_exp : conditional_and_exp AMPERAMPER inclusive_or_exp\n                           | inclusive_or_expinclusive_or_exp : inclusive_or_exp PIPE exclusive_or_exp\n                        | exclusive_or_expexclusive_or_exp : exclusive_or_exp CIRCUMFLEX and_exp\n                        | and_expand_exp : and_exp AMPER equality_exp\n               | equality_expequality_exp : equality_exp EQEQUAL relational_exp\n                    | equality_exp NOTEQUAL relational_exp\n                    | relational_exprelational_exp : relational_exp LT shift_exp\n                      | relational_exp GT shift_exp\n                      | relational_exp LEQ shift_exp\n                      | relational_exp GEQ shift_exp\n                      | relational_exp IS type\n                      | shift_expshift_exp : shift_exp LSHIFT additive_exp\n                 | shift_exp RSHIFT additive_exp\n                 | additive_expadditive_exp : additive_exp PLUS multiplicative_exp\n                    | additive_exp MINUS multiplicative_exp\n                    | multiplicative_expmultiplicative_exp : multiplicative_exp STAR unary_exp\n                          | multiplicative_exp SLASH unary_exp\n                          | multiplicative_exp PERCENT unary_exp\n                          | unary_expassignment : unary_exp EQUAL exp'
    
_lr_action_items = {'OBJECT':([0,2,23,24,28,29,30,31,33,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,61,72,92,94,96,97,102,131,132,133,134,135,146,148,172,187,234,244,247,250,270,278,288,289,296,297,299,302,305,310,311,313,314,315,318,],[10,10,-22,10,-49,10,-29,-30,-50,-42,-43,-44,-45,-46,-47,10,-72,-73,-84,-85,-86,-87,-105,-106,-107,10,10,10,-48,-31,-32,-51,10,10,-108,-109,-110,10,10,10,-111,10,10,-74,-88,10,-97,-75,-76,-82,-89,-93,-96,-95,-81,-92,-91,-94,-104,-90,]),'STRING':([0,2,23,24,28,29,30,31,33,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,61,72,92,94,96,97,102,131,132,133,134,135,146,148,172,187,234,244,247,250,270,278,288,289,296,297,299,302,305,310,311,313,314,315,318,],[11,11,-22,11,-49,11,-29,-30,-50,-42,-43,-44,-45,-46,-47,11,-72,-73,-84,-85,-86,-87,-105,-106,-107,11,11,11,-48,-31,-32,-51,11,11,-108,-109,-110,11,11,11,-111,11,11,-74,-88,11,-97,-75,-76,-82,-89,-93,-96,-95,-81,-92,-91,-94,-104,-90,]),'BOOL':([0,2,23,24,28,29,30,31,33,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,61,72,92,94,96,97,102,131,132,133,134,135,146,147,148,172,187,234,244,247,250,270,278,288,289,296,297,299,302,305,310,311,313,314,315,318,],[14,14,-22,14,-49,14,-29,-30,-50,-42,-43,-44,-45,-46,-47,14,-72,-73,-84,-85,-86,-87,-105,-106,-107,14,14,14,-48,-31,-32,-51,14,14,-108,-109,-110,14,14,14,14,-111,14,14,-74,-88,14,-97,-75,-76,-82,-89,-93,-96,-95,-81,-92,-91,-94,-104,-90,]),'VOID':([0,2,23,24,28,29,30,31,33,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,61,72,92,94,96,97,102,131,132,133,134,135,146,147,148,172,187,234,244,247,250,270,278,288,289,296,297,299,302,305,310,311,313,314,315,318,],[15,15,-22,15,-49,15,-29,-30,-50,-42,-43,-44,-45,-46,-47,15,-72,-73,-84,-85,-86,-87,-105,-106,-107,15,15,15,-48,-31,-32,-51,15,15,-108,-109,-110,15,15,15,15,-111,15,15,-74,-88,15,-97,-75,-76,-82,-89,-93,-96,-95,-81,-92,-91,-94,-104,-90,]),'ID':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,26,28,29,30,31,33,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,52,61,64,67,70,72,74,75,92,93,94,96,97,98,102,103,127,128,131,132,133,134,135,137,140,142,145,146,148,149,155,156,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,184,186,187,192,200,201,204,228,229,230,231,234,237,244,247,248,250,252,255,258,260,263,266,270,271,275,276,277,278,279,281,288,289,296,297,298,299,301,302,304,305,306,308,309,310,311,312,313,314,315,318,],[5,5,25,-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,67,93,-49,67,-29,-30,-50,-42,-43,-44,-45,-46,-47,5,101,-72,-73,-84,-85,-86,-87,-105,-106,-107,67,130,-3,130,5,130,130,5,-4,-48,-31,-32,154,-51,130,130,130,5,5,-108,-109,-110,130,191,130,130,5,5,198,101,130,130,130,130,130,130,130,130,130,130,130,130,130,130,5,130,130,130,130,130,130,130,130,235,-111,130,154,130,130,130,130,130,130,5,130,5,-74,130,-88,130,130,130,130,286,130,67,130,130,130,130,-97,130,130,-75,-76,-82,-89,130,-93,130,-96,130,-95,130,286,130,-81,-92,130,-91,-94,-104,-90,]),'INT':([0,2,23,24,28,29,30,31,33,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,61,72,92,94,96,97,102,131,132,133,134,135,146,147,148,172,187,234,244,247,250,270,278,288,289,296,297,299,302,305,310,311,313,314,315,318,],[16,16,-22,16,-49,16,-29,-30,-50,-42,-43,-44,-45,-46,-47,16,-72,-73,-84,-85,-86,-87,-105,-106,-107,16,16,16,-48,-31,-32,-51,16,16,-108,-109,-110,16,16,16,16,-111,16,16,-74,-88,16,-97,-75,-76,-82,-89,-93,-96,-95,-81,-92,-91,-94,-104,-90,]),'LONG':([0,2,23,24,28,29,30,31,33,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,61,72,92,94,96,97,102,131,132,133,134,135,146,147,148,172,187,234,244,247,250,270,278,288,289,296,297,299,302,305,310,311,313,314,315,318,],[17,17,-22,17,-49,17,-29,-30,-50,-42,-43,-44,-45,-46,-47,17,-72,-73,-84,-85,-86,-87,-105,-106,-107,17,17,17,-48,-31,-32,-51,17,17,-108,-109,-110,17,17,17,17,-111,17,17,-74,-88,17,-97,-75,-76,-82,-89,-93,-96,-95,-81,-92,-91,-94,-104,-90,]),'CHAR':([0,2,23,24,28,29,30,31,33,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,61,72,92,94,96,97,102,131,132,133,134,135,146,147,148,172,187,234,244,247,250,270,278,288,289,296,297,299,302,305,310,311,313,314,315,318,],[18,18,-22,18,-49,18,-29,-30,-50,-42,-43,-44,-45,-46,-47,18,-72,-73,-84,-85,-86,-87,-105,-106,-107,18,18,18,-48,-31,-32,-51,18,18,-108,-109,-110,18,18,18,18,-111,18,18,-74,-88,18,-97,-75,-76,-82,-89,-93,-96,-95,-81,-92,-91,-94,-104,-90,]),'FLOAT':([0,2,23,24,28,29,30,31,33,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,61,72,92,94,96,97,102,131,132,133,134,135,146,147,148,172,187,234,244,247,250,270,278,288,289,296,297,299,302,305,310,311,313,314,315,318,],[19,19,-22,19,-49,19,-29,-30,-50,-42,-43,-44,-45,-46,-47,19,-72,-73,-84,-85,-86,-87,-105,-106,-107,19,19,19,-48,-31,-32,-51,19,19,-108,-109,-110,19,19,19,19,-111,19,19,-74,-88,19,-97,-75,-76,-82,-89,-93,-96,-95,-81,-92,-91,-94,-104,-90,]),'DOUBLE':([0,2,23,24,28,29,30,31,33,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,61,72,92,94,96,97,102,131,132,133,134,135,146,147,148,172,187,234,244,247,250,270,278,288,289,296,297,299,302,305,310,311,313,314,315,318,],[20,20,-22,20,-49,20,-29,-30,-50,-42,-43,-44,-45,-46,-47,20,-72,-73,-84,-85,-86,-87,-105,-106,-107,20,20,20,-48,-31,-32,-51,20,20,-108,-109,-110,20,20,20,20,-111,20,20,-74,-88,20,-97,-75,-76,-82,-89,-93,-96,-95,-81,-92,-91,-94,-104,-90,]),'DECIMAL':([0,2,23,24,28,29,30,31,33,35,36,37,38,39,40,41,44,45,46,47,48,49,50,51,52,61,72,92,94,96,97,102,131,132,133,134,135,146,147,148,172,187,234,244,247,250,270,278,288,289,296,297,299,302,305,310,311,313,314,315,318,],[21,21,-22,21,-49,21,-29,-30,-50,-42,-43,-44,-45,-46,-47,21,-72,-73,-84,-85,-86,-87,-105,-106,-107,21,21,21,-48,-31,-32,-51,21,21,-108,-109,-110,21,21,21,21,-111,21,21,-74,-88,21,-97,-75,-76,-82,-89,-93,-96,-95,-81,-92,-91,-94,-104,-90,]),'$end':([1,2,22,23,28,94,],[0,-1,-2,-22,-49,-48,]),'LBRACE':([3,24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,64,94,96,97,102,133,134,135,151,187,199,204,227,228,238,247,250,255,264,266,270,275,277,278,281,288,289,296,297,298,299,301,302,304,305,306,310,311,312,313,314,315,318,],[24,24,-49,24,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,24,-48,-31,-32,-51,-108,-109,-110,-24,-111,-23,24,249,24,263,-74,-88,24,263,24,24,24,24,-97,24,-75,-76,-82,-89,24,-93,24,-96,24,-95,24,-81,-92,24,-91,-94,-104,-90,]),'DOT':([5,9,53,54,56,57,67,71,76,77,78,79,80,81,82,83,84,85,86,87,88,93,111,116,117,118,119,130,138,139,159,188,191,236,238,240,241,242,243,262,264,283,287,307,],[-3,26,-129,-136,-134,-135,-3,140,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,140,-129,-134,-135,-136,-126,-68,-69,-127,-130,-128,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'LPAREN':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,56,57,60,61,62,63,64,65,66,67,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,96,97,102,103,111,116,117,118,119,127,128,130,133,134,135,137,138,139,141,142,145,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,182,184,187,188,191,192,201,204,228,229,230,231,236,237,238,240,241,242,243,247,248,250,252,255,258,260,262,264,266,270,271,275,276,277,278,279,281,283,287,288,289,293,296,297,298,299,301,302,304,305,306,307,309,310,311,312,313,314,315,318,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,61,92,-49,61,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,-129,-136,-134,-135,103,61,127,128,61,131,132,-126,61,137,61,61,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,146,147,148,-4,-48,-31,-32,-51,61,137,-129,-134,-135,-136,61,61,-126,-108,-109,-110,61,-68,-69,192,61,61,61,61,-127,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,229,61,-111,-130,-128,61,61,61,61,61,61,61,-131,61,-59,-132,-137,-138,-139,-74,61,-88,61,61,61,61,-60,-61,61,61,61,61,61,61,-97,61,61,-63,-62,-75,-76,148,-82,-89,61,-93,61,-96,61,-95,61,-64,61,-81,-92,61,-91,-94,-104,-90,]),'RPAREN':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,53,54,55,56,57,58,59,67,76,77,78,79,80,81,82,83,84,85,86,87,88,92,93,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,137,138,139,143,144,150,157,159,180,181,188,189,190,191,192,193,195,196,197,198,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,231,236,238,239,240,241,242,243,251,252,254,256,257,258,261,262,264,265,267,274,276,280,282,283,287,300,303,307,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-52,-53,-54,-55,-56,-57,-58,-3,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,151,-4,158,-179,159,-146,-147,-148,-150,-142,-143,-144,-152,-154,-129,-134,-135,-136,-156,-158,-160,-163,-169,-172,-175,-126,188,-68,-69,-70,-71,199,204,-127,227,228,-130,236,-112,-128,238,-180,241,242,243,-25,-145,-151,-179,-153,-155,-157,-159,-161,-162,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,255,-131,-59,264,-132,-137,-138,-139,273,275,277,-101,-102,281,-113,-60,-61,-26,-149,298,301,304,306,-63,-62,312,-103,-64,]),'LT':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,67,76,77,78,79,80,81,82,83,84,85,86,87,88,93,105,111,112,113,116,117,118,119,123,124,125,126,130,138,139,143,144,159,188,191,205,208,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-179,-142,-143,-144,-129,-134,-135,-136,168,-169,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,168,168,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'GT':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,67,76,77,78,79,80,81,82,83,84,85,86,87,88,93,105,111,112,113,116,117,118,119,123,124,125,126,130,138,139,143,144,159,188,191,205,208,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-179,-142,-143,-144,-129,-134,-135,-136,169,-169,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,169,169,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'LEQ':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,67,76,77,78,79,80,81,82,83,84,85,86,87,88,93,105,111,112,113,116,117,118,119,123,124,125,126,130,138,139,143,144,159,188,191,205,208,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-179,-142,-143,-144,-129,-134,-135,-136,170,-169,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,170,170,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'GEQ':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,67,76,77,78,79,80,81,82,83,84,85,86,87,88,93,105,111,112,113,116,117,118,119,123,124,125,126,130,138,139,143,144,159,188,191,205,208,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-179,-142,-143,-144,-129,-134,-135,-136,171,-169,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,171,171,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'IS':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,67,76,77,78,79,80,81,82,83,84,85,86,87,88,93,105,111,112,113,116,117,118,119,123,124,125,126,130,138,139,143,144,159,188,191,205,208,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-179,-142,-143,-144,-129,-134,-135,-136,172,-169,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,172,172,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'EQEQUAL':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,67,76,77,78,79,80,81,82,83,84,85,86,87,88,93,105,111,112,113,116,117,118,119,122,123,124,125,126,130,138,139,143,144,159,188,191,205,208,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-179,-142,-143,-144,-129,-134,-135,-136,166,-163,-169,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,166,-161,-162,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'NOTEQUAL':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,67,76,77,78,79,80,81,82,83,84,85,86,87,88,93,105,111,112,113,116,117,118,119,122,123,124,125,126,130,138,139,143,144,159,188,191,205,208,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-179,-142,-143,-144,-129,-134,-135,-136,167,-163,-169,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,167,-161,-162,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'AMPER':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,67,76,77,78,79,80,81,82,83,84,85,86,87,88,93,105,111,112,113,116,117,118,119,121,122,123,124,125,126,130,138,139,143,144,159,188,191,205,208,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-179,-142,-143,-144,-129,-134,-135,-136,165,-160,-163,-169,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,165,-159,-161,-162,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'CIRCUMFLEX':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,67,76,77,78,79,80,81,82,83,84,85,86,87,88,93,105,111,112,113,116,117,118,119,120,121,122,123,124,125,126,130,138,139,143,144,159,188,191,205,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-179,-142,-143,-144,-129,-134,-135,-136,164,-158,-160,-163,-169,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,164,-157,-159,-161,-162,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'PIPE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,67,76,77,78,79,80,81,82,83,84,85,86,87,88,93,105,111,112,113,115,116,117,118,119,120,121,122,123,124,125,126,130,138,139,143,144,159,188,191,205,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-179,-142,-143,-144,163,-129,-134,-135,-136,-156,-158,-160,-163,-169,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,163,-155,-157,-159,-161,-162,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'AMPERAMPER':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,67,76,77,78,79,80,81,82,83,84,85,86,87,88,93,105,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,138,139,143,144,159,188,191,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-179,-142,-143,-144,162,-154,-129,-134,-135,-136,-156,-158,-160,-163,-169,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,162,-179,-153,-155,-157,-159,-161,-162,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'HOOK':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,67,76,77,78,79,80,81,82,83,84,85,86,87,88,93,105,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,138,139,143,144,159,188,191,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-179,160,-142,-143,-144,-152,-154,-129,-134,-135,-136,-156,-158,-160,-163,-169,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,-151,-179,-153,-155,-157,-159,-161,-162,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'PIPEPIPE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,67,76,77,78,79,80,81,82,83,84,85,86,87,88,93,105,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,138,139,143,144,159,188,191,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-179,161,-142,-143,-144,-152,-154,-129,-134,-135,-136,-156,-158,-160,-163,-169,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,-151,-179,-153,-155,-157,-159,-161,-162,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'SEMI':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,28,29,30,31,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,64,68,69,70,76,77,78,79,80,81,82,83,84,85,86,87,88,93,94,96,97,99,100,101,102,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,131,133,134,135,136,138,139,143,144,152,153,159,183,184,185,187,188,191,193,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,228,230,232,233,236,238,240,241,242,243,245,246,247,250,253,255,259,262,264,266,267,270,273,275,277,278,281,283,287,288,289,296,297,298,299,301,302,304,305,306,307,310,311,312,313,314,315,318,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,33,-49,33,-29,-30,96,-50,97,-42,-43,-44,-45,-46,-47,102,-72,-73,-84,-85,-86,-87,-105,-106,-107,-52,-53,-54,-55,-56,-57,-58,33,133,134,135,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-48,-31,-32,-37,-38,-40,-51,-179,-146,-147,-148,-150,-142,-143,-144,-152,-154,-129,-134,-135,-136,-156,-158,-160,-163,-169,-172,-175,-126,184,-108,-109,-110,187,-68,-69,-70,-71,-33,-34,-127,230,231,-98,-111,-130,-128,-180,-39,-41,33,-145,-151,-179,-153,-155,-157,-159,-161,-162,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,33,252,258,-100,-131,-59,-132,-137,-138,-139,-35,-36,-74,-88,276,33,-99,-60,-61,33,-149,33,297,33,33,-97,33,-63,-62,-75,-76,-82,-89,33,-93,33,-96,33,-95,33,-64,-81,-92,33,-91,-94,-104,-90,]),'COMMA':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,53,54,55,56,57,58,59,76,77,78,79,80,81,82,83,84,85,86,87,88,93,99,100,101,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,138,139,143,144,153,159,185,188,190,191,193,198,202,203,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,246,257,262,264,267,283,285,287,307,317,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-52,-53,-54,-55,-56,-57,-58,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-37,155,-40,-179,-146,-147,-148,-150,-142,-143,-144,-152,-154,-129,-134,-135,-136,-156,-158,-160,-163,-169,-172,-175,-126,-68,-69,-70,-71,200,-127,234,-130,237,-128,-180,244,-39,-41,-145,-151,-179,-153,-155,-157,-159,-161,-162,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-36,279,-60,-61,-149,-63,308,-62,-64,-67,]),'RSB':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,76,77,78,79,80,81,82,83,84,85,86,87,88,93,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,138,139,143,144,159,188,191,193,194,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,267,283,287,307,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-179,-146,-147,-148,-150,-142,-143,-144,-152,-154,-129,-134,-135,-136,-156,-158,-160,-163,-169,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-180,240,-145,-151,-179,-153,-155,-157,-159,-161,-162,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-149,-63,-62,-64,]),'COLON':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,76,77,78,79,80,81,82,83,84,85,86,87,88,93,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,138,139,143,144,159,188,191,193,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,267,272,283,287,293,294,295,307,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-179,-146,-147,-148,-150,-142,-143,-144,-152,-154,-129,-134,-135,-136,-156,-158,-160,-163,-169,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-180,-145,248,-151,-179,-153,-155,-157,-159,-161,-162,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-149,296,-63,-62,296,310,-83,-64,]),'RBRACE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,27,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,76,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,96,97,102,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,130,133,134,135,138,139,143,144,159,187,188,191,193,205,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,236,238,240,241,242,243,247,250,262,263,264,267,268,269,278,283,284,285,287,288,289,290,291,292,297,299,302,305,307,311,313,314,315,316,317,318,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,28,94,-49,-27,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-4,-48,-28,-31,-32,-51,-179,-146,-147,-148,-150,-142,-143,-144,-152,-154,-129,-134,-135,-136,-156,-158,-160,-163,-169,-172,-175,-126,-108,-109,-110,-68,-69,-70,-71,-127,-111,-130,-128,-180,-145,-151,-179,-153,-155,-157,-159,-161,-162,-164,-165,-166,-167,-168,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-74,-88,-60,283,-61,-149,289,-77,-97,-63,307,-65,-62,-75,-76,-78,-79,-80,-89,-93,-96,-95,-64,-92,-91,-94,-104,-66,-67,-90,]),'CONST':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,94,96,97,102,133,134,135,187,247,250,270,278,288,289,296,297,299,302,305,310,311,313,314,315,318,],[41,-49,41,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,-48,-31,-32,-51,-108,-109,-110,-111,-74,-88,41,-97,-75,-76,-82,-89,-93,-96,-95,-81,-92,-91,-94,-104,-90,]),'IF':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,64,94,96,97,102,133,134,135,187,204,228,247,250,255,266,270,275,277,278,281,288,289,296,297,298,299,301,302,304,305,306,310,311,312,313,314,315,318,],[60,-49,60,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,60,-48,-31,-32,-51,-108,-109,-110,-111,60,60,-74,-88,60,60,60,60,60,-97,60,-75,-76,-82,-89,60,-93,60,-96,60,-95,60,-81,-92,60,-91,-94,-104,-90,]),'SWITCH':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,64,94,96,97,102,133,134,135,187,204,228,247,250,255,266,270,275,277,278,281,288,289,296,297,298,299,301,302,304,305,306,310,311,312,313,314,315,318,],[62,-49,62,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,62,-48,-31,-32,-51,-108,-109,-110,-111,62,62,-74,-88,62,62,62,62,62,-97,62,-75,-76,-82,-89,62,-93,62,-96,62,-95,62,-81,-92,62,-91,-94,-104,-90,]),'WHILE':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,64,94,96,97,102,129,133,134,135,187,204,228,247,250,255,266,270,275,277,278,281,288,289,296,297,298,299,301,302,304,305,306,310,311,312,313,314,315,318,],[63,-49,63,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,63,-48,-31,-32,-51,182,-108,-109,-110,-111,63,63,-74,-88,63,63,63,63,63,-97,63,-75,-76,-82,-89,63,-93,63,-96,63,-95,63,-81,-92,63,-91,-94,-104,-90,]),'DO':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,64,94,96,97,102,133,134,135,187,204,228,247,250,255,266,270,275,277,278,281,288,289,296,297,298,299,301,302,304,305,306,310,311,312,313,314,315,318,],[64,-49,64,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,64,-48,-31,-32,-51,-108,-109,-110,-111,64,64,-74,-88,64,64,64,64,64,-97,64,-75,-76,-82,-89,64,-93,64,-96,64,-95,64,-81,-92,64,-91,-94,-104,-90,]),'FOR':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,64,94,96,97,102,133,134,135,187,204,228,247,250,255,266,270,275,277,278,281,288,289,296,297,298,299,301,302,304,305,306,310,311,312,313,314,315,318,],[65,-49,65,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,65,-48,-31,-32,-51,-108,-109,-110,-111,65,65,-74,-88,65,65,65,65,65,-97,65,-75,-76,-82,-89,65,-93,65,-96,65,-95,65,-81,-92,65,-91,-94,-104,-90,]),'FOREACH':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,64,94,96,97,102,133,134,135,187,204,228,247,250,255,266,270,275,277,278,281,288,289,296,297,298,299,301,302,304,305,306,310,311,312,313,314,315,318,],[66,-49,66,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,66,-48,-31,-32,-51,-108,-109,-110,-111,66,66,-74,-88,66,66,66,66,66,-97,66,-75,-76,-82,-89,66,-93,66,-96,66,-95,66,-81,-92,66,-91,-94,-104,-90,]),'BREAK':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,64,94,96,97,102,133,134,135,187,204,228,247,250,255,266,270,275,277,278,281,288,289,296,297,298,299,301,302,304,305,306,310,311,312,313,314,315,318,],[68,-49,68,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,68,-48,-31,-32,-51,-108,-109,-110,-111,68,68,-74,-88,68,68,68,68,68,-97,68,-75,-76,-82,-89,68,-93,68,-96,68,-95,68,-81,-92,68,-91,-94,-104,-90,]),'CONTINUE':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,64,94,96,97,102,133,134,135,187,204,228,247,250,255,266,270,275,277,278,281,288,289,296,297,298,299,301,302,304,305,306,310,311,312,313,314,315,318,],[69,-49,69,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,69,-48,-31,-32,-51,-108,-109,-110,-111,69,69,-74,-88,69,69,69,69,69,-97,69,-75,-76,-82,-89,69,-93,69,-96,69,-95,69,-81,-92,69,-91,-94,-104,-90,]),'RETURN':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,64,94,96,97,102,133,134,135,187,204,228,247,250,255,266,270,275,277,278,281,288,289,296,297,298,299,301,302,304,305,306,310,311,312,313,314,315,318,],[70,-49,70,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,70,-48,-31,-32,-51,-108,-109,-110,-111,70,70,-74,-88,70,70,70,70,70,-97,70,-75,-76,-82,-89,70,-93,70,-96,70,-95,70,-81,-92,70,-91,-94,-104,-90,]),'NEW':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,61,64,70,74,75,94,96,97,102,103,127,128,133,134,135,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,192,201,204,228,229,230,231,237,247,248,250,252,255,258,260,266,270,271,275,276,277,278,279,281,288,289,296,297,298,299,301,302,304,305,306,309,310,311,312,313,314,315,318,],[72,-49,72,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,72,72,72,72,72,-48,-31,-32,-51,72,72,72,-108,-109,-110,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,-111,72,72,72,72,72,72,72,72,-74,72,-88,72,72,72,72,72,72,72,72,72,72,-97,72,72,-75,-76,-82,-89,72,-93,72,-96,72,-95,72,72,-81,-92,72,-91,-94,-104,-90,]),'PLUSPLUS':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,56,57,61,64,67,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,94,96,97,102,103,111,116,117,118,119,127,128,130,133,134,135,137,138,139,142,145,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,188,191,192,201,204,228,229,230,231,236,237,238,240,241,242,243,247,248,250,252,255,258,260,262,264,266,270,271,275,276,277,278,279,281,283,287,288,289,296,297,298,299,301,302,304,305,306,307,309,310,311,312,313,314,315,318,],[74,-49,74,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,-129,-136,-134,-135,74,74,-126,74,138,74,74,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-48,-31,-32,-51,74,138,-129,-134,-135,-136,74,74,-126,-108,-109,-110,74,-68,-69,74,74,74,74,-127,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-111,-130,-128,74,74,74,74,74,74,74,-131,74,-59,-132,-137,-138,-139,-74,74,-88,74,74,74,74,-60,-61,74,74,74,74,74,74,-97,74,74,-63,-62,-75,-76,-82,-89,74,-93,74,-96,74,-95,74,-64,74,-81,-92,74,-91,-94,-104,-90,]),'MINUSMINUS':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,53,54,56,57,61,64,67,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,94,96,97,102,103,111,116,117,118,119,127,128,130,133,134,135,137,138,139,142,145,156,158,159,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,188,191,192,201,204,228,229,230,231,236,237,238,240,241,242,243,247,248,250,252,255,258,260,262,264,266,270,271,275,276,277,278,279,281,283,287,288,289,296,297,298,299,301,302,304,305,306,307,309,310,311,312,313,314,315,318,],[75,-49,75,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,-129,-136,-134,-135,75,75,-126,75,139,75,75,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-48,-31,-32,-51,75,139,-129,-134,-135,-136,75,75,-126,-108,-109,-110,75,-68,-69,75,75,75,75,-127,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-111,-130,-128,75,75,75,75,75,75,75,-131,75,-59,-132,-137,-138,-139,-74,75,-88,75,75,75,75,-60,-61,75,75,75,75,75,75,-97,75,75,-63,-62,-75,-76,-82,-89,75,-93,75,-96,75,-95,75,-64,75,-81,-92,75,-91,-94,-104,-90,]),'TRUE':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,61,64,70,74,75,94,96,97,102,103,127,128,133,134,135,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,192,201,204,228,229,230,231,237,247,248,250,252,255,258,260,266,270,271,275,276,277,278,279,281,288,289,296,297,298,299,301,302,304,305,306,309,310,311,312,313,314,315,318,],[77,-49,77,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,77,77,77,77,77,-48,-31,-32,-51,77,77,77,-108,-109,-110,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-111,77,77,77,77,77,77,77,77,-74,77,-88,77,77,77,77,77,77,77,77,77,77,-97,77,77,-75,-76,-82,-89,77,-93,77,-96,77,-95,77,77,-81,-92,77,-91,-94,-104,-90,]),'FALSE':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,61,64,70,74,75,94,96,97,102,103,127,128,133,134,135,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,192,201,204,228,229,230,231,237,247,248,250,252,255,258,260,266,270,271,275,276,277,278,279,281,288,289,296,297,298,299,301,302,304,305,306,309,310,311,312,313,314,315,318,],[78,-49,78,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,78,78,78,78,78,-48,-31,-32,-51,78,78,78,-108,-109,-110,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-111,78,78,78,78,78,78,78,78,-74,78,-88,78,78,78,78,78,78,78,78,78,78,-97,78,78,-75,-76,-82,-89,78,-93,78,-96,78,-95,78,78,-81,-92,78,-91,-94,-104,-90,]),'NULL':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,61,64,70,74,75,94,96,97,102,103,127,128,133,134,135,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,192,201,204,228,229,230,231,237,247,248,250,252,255,258,260,266,270,271,275,276,277,278,279,281,288,289,296,297,298,299,301,302,304,305,306,309,310,311,312,313,314,315,318,],[79,-49,79,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,79,79,79,79,79,-48,-31,-32,-51,79,79,79,-108,-109,-110,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-111,79,79,79,79,79,79,79,79,-74,79,-88,79,79,79,79,79,79,79,79,79,79,-97,79,79,-75,-76,-82,-89,79,-93,79,-96,79,-95,79,79,-81,-92,79,-91,-94,-104,-90,]),'INTNUM':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,61,64,70,74,75,94,96,97,102,103,127,128,133,134,135,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,192,201,204,228,229,230,231,237,247,248,250,252,255,258,260,266,270,271,275,276,277,278,279,281,288,289,296,297,298,299,301,302,304,305,306,309,310,311,312,313,314,315,318,],[80,-49,80,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,80,80,80,80,80,-48,-31,-32,-51,80,80,80,-108,-109,-110,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-111,80,80,80,80,80,80,80,80,-74,80,-88,80,80,80,80,80,80,80,80,80,80,-97,80,80,-75,-76,-82,-89,80,-93,80,-96,80,-95,80,80,-81,-92,80,-91,-94,-104,-90,]),'HEXADECIMALNUM':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,61,64,70,74,75,94,96,97,102,103,127,128,133,134,135,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,192,201,204,228,229,230,231,237,247,248,250,252,255,258,260,266,270,271,275,276,277,278,279,281,288,289,296,297,298,299,301,302,304,305,306,309,310,311,312,313,314,315,318,],[81,-49,81,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,81,81,81,81,81,-48,-31,-32,-51,81,81,81,-108,-109,-110,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-111,81,81,81,81,81,81,81,81,-74,81,-88,81,81,81,81,81,81,81,81,81,81,-97,81,81,-75,-76,-82,-89,81,-93,81,-96,81,-95,81,81,-81,-92,81,-91,-94,-104,-90,]),'BINARYNUM':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,61,64,70,74,75,94,96,97,102,103,127,128,133,134,135,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,192,201,204,228,229,230,231,237,247,248,250,252,255,258,260,266,270,271,275,276,277,278,279,281,288,289,296,297,298,299,301,302,304,305,306,309,310,311,312,313,314,315,318,],[82,-49,82,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,82,82,82,82,82,-48,-31,-32,-51,82,82,82,-108,-109,-110,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-111,82,82,82,82,82,82,82,82,-74,82,-88,82,82,82,82,82,82,82,82,82,82,-97,82,82,-75,-76,-82,-89,82,-93,82,-96,82,-95,82,82,-81,-92,82,-91,-94,-104,-90,]),'FLOATNUM':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,61,64,70,74,75,94,96,97,102,103,127,128,133,134,135,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,192,201,204,228,229,230,231,237,247,248,250,252,255,258,260,266,270,271,275,276,277,278,279,281,288,289,296,297,298,299,301,302,304,305,306,309,310,311,312,313,314,315,318,],[83,-49,83,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,83,83,83,83,83,-48,-31,-32,-51,83,83,83,-108,-109,-110,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-111,83,83,83,83,83,83,83,83,-74,83,-88,83,83,83,83,83,83,83,83,83,83,-97,83,83,-75,-76,-82,-89,83,-93,83,-96,83,-95,83,83,-81,-92,83,-91,-94,-104,-90,]),'DOUBLENUM':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,61,64,70,74,75,94,96,97,102,103,127,128,133,134,135,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,192,201,204,228,229,230,231,237,247,248,250,252,255,258,260,266,270,271,275,276,277,278,279,281,288,289,296,297,298,299,301,302,304,305,306,309,310,311,312,313,314,315,318,],[84,-49,84,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,84,84,84,84,84,-48,-31,-32,-51,84,84,84,-108,-109,-110,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-111,84,84,84,84,84,84,84,84,-74,84,-88,84,84,84,84,84,84,84,84,84,84,-97,84,84,-75,-76,-82,-89,84,-93,84,-96,84,-95,84,84,-81,-92,84,-91,-94,-104,-90,]),'DECIMALNUM':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,61,64,70,74,75,94,96,97,102,103,127,128,133,134,135,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,192,201,204,228,229,230,231,237,247,248,250,252,255,258,260,266,270,271,275,276,277,278,279,281,288,289,296,297,298,299,301,302,304,305,306,309,310,311,312,313,314,315,318,],[85,-49,85,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,85,85,85,85,85,-48,-31,-32,-51,85,85,85,-108,-109,-110,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-111,85,85,85,85,85,85,85,85,-74,85,-88,85,85,85,85,85,85,85,85,85,85,-97,85,85,-75,-76,-82,-89,85,-93,85,-96,85,-95,85,85,-81,-92,85,-91,-94,-104,-90,]),'CHARLITERAL':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,61,64,70,74,75,94,96,97,102,103,127,128,133,134,135,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,192,201,204,228,229,230,231,237,247,248,250,252,255,258,260,266,270,271,275,276,277,278,279,281,288,289,296,297,298,299,301,302,304,305,306,309,310,311,312,313,314,315,318,],[86,-49,86,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,86,86,86,86,86,-48,-31,-32,-51,86,86,86,-108,-109,-110,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-111,86,86,86,86,86,86,86,86,-74,86,-88,86,86,86,86,86,86,86,86,86,86,-97,86,86,-75,-76,-82,-89,86,-93,86,-96,86,-95,86,86,-81,-92,86,-91,-94,-104,-90,]),'STRINGLITERAL':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,61,64,70,74,75,94,96,97,102,103,127,128,133,134,135,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,192,201,204,228,229,230,231,237,247,248,250,252,255,258,260,266,270,271,275,276,277,278,279,281,288,289,296,297,298,299,301,302,304,305,306,309,310,311,312,313,314,315,318,],[87,-49,87,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,87,87,87,87,87,-48,-31,-32,-51,87,87,87,-108,-109,-110,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-111,87,87,87,87,87,87,87,87,-74,87,-88,87,87,87,87,87,87,87,87,87,87,-97,87,87,-75,-76,-82,-89,87,-93,87,-96,87,-95,87,87,-81,-92,87,-91,-94,-104,-90,]),'THIS':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,61,64,70,74,75,94,96,97,102,103,127,128,133,134,135,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,192,201,204,228,229,230,231,237,247,248,250,252,255,258,260,266,270,271,275,276,277,278,279,281,288,289,296,297,298,299,301,302,304,305,306,309,310,311,312,313,314,315,318,],[88,-49,88,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,88,88,88,88,88,-48,-31,-32,-51,88,88,88,-108,-109,-110,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-111,88,88,88,88,88,88,88,88,-74,88,-88,88,88,88,88,88,88,88,88,88,88,-97,88,88,-75,-76,-82,-89,88,-93,88,-96,88,-95,88,88,-81,-92,88,-91,-94,-104,-90,]),'TYPEOF':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,61,64,70,74,75,94,96,97,102,103,127,128,133,134,135,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,192,201,204,228,229,230,231,237,247,248,250,252,255,258,260,266,270,271,275,276,277,278,279,281,288,289,296,297,298,299,301,302,304,305,306,309,310,311,312,313,314,315,318,],[89,-49,89,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,89,89,89,89,89,-48,-31,-32,-51,89,89,89,-108,-109,-110,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-111,89,89,89,89,89,89,89,89,-74,89,-88,89,89,89,89,89,89,89,89,89,89,-97,89,89,-75,-76,-82,-89,89,-93,89,-96,89,-95,89,89,-81,-92,89,-91,-94,-104,-90,]),'SIZEOF':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,61,64,70,74,75,94,96,97,102,103,127,128,133,134,135,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,192,201,204,228,229,230,231,237,247,248,250,252,255,258,260,266,270,271,275,276,277,278,279,281,288,289,296,297,298,299,301,302,304,305,306,309,310,311,312,313,314,315,318,],[90,-49,90,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,90,90,90,90,90,-48,-31,-32,-51,90,90,90,-108,-109,-110,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-111,90,90,90,90,90,90,90,90,-74,90,-88,90,90,90,90,90,90,90,90,90,90,-97,90,90,-75,-76,-82,-89,90,-93,90,-96,90,-95,90,90,-81,-92,90,-91,-94,-104,-90,]),'DEFAULT':([24,28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,61,64,70,74,75,94,95,96,97,102,103,127,128,133,134,135,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,187,192,201,204,228,229,230,231,237,247,248,249,250,252,255,258,260,266,269,270,271,275,276,277,278,279,281,288,289,291,292,296,297,298,299,301,302,304,305,306,309,310,311,312,313,314,315,318,],[91,-49,91,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,91,91,91,91,91,-48,-28,-31,-32,-51,91,91,91,-108,-109,-110,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-111,91,91,91,91,91,91,91,91,-74,91,272,-88,91,91,91,91,91,272,293,91,91,91,91,-97,91,91,-75,-76,-79,-80,-82,-89,91,-93,91,-96,91,-95,91,91,-81,-92,91,-91,-94,-104,-90,]),'CASE':([28,29,30,31,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,94,95,96,97,102,133,134,135,187,247,249,250,269,270,278,288,289,291,292,296,297,299,302,305,310,311,313,314,315,318,],[-49,-27,-29,-30,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,-48,-28,-31,-32,-51,-108,-109,-110,-111,-74,271,-88,271,271,-97,-75,-76,-79,-80,-82,-89,-93,-96,-95,-81,-92,-91,-94,-104,-90,]),'ELSE':([28,33,35,36,37,38,39,40,44,45,46,47,48,49,50,51,52,94,102,133,134,135,187,247,250,278,288,289,297,299,302,305,311,313,314,315,318,],[-49,-50,-42,-43,-44,-45,-46,-47,-72,-73,-84,-85,-86,-87,-105,-106,-107,-48,-51,-108,-109,-110,-111,266,-88,-97,-75,-76,-89,-93,-96,-95,-92,-91,-94,-104,-90,]),'LSB':([53,54,56,57,67,76,77,78,79,80,81,82,83,84,85,86,87,88,116,117,118,119,130,138,139,159,188,191,236,238,240,241,242,243,262,264,283,287,307,],[-129,-136,-134,-135,-126,145,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-129,-134,-135,-136,-126,-68,-69,-127,-130,-128,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'EQUAL':([53,54,56,57,58,59,67,71,73,76,77,78,79,80,81,82,83,84,85,86,87,88,101,105,111,112,113,116,117,118,119,130,138,139,143,144,154,159,188,191,205,236,238,240,241,242,243,262,264,283,286,287,307,],[-129,-136,-134,-135,-143,-144,-126,-142,142,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,156,142,-142,-143,-144,-129,-134,-135,-136,-126,-68,-69,-70,-71,201,-127,-130,-128,-145,-131,-59,-132,-137,-138,-139,-60,-61,-63,309,-62,-64,]),'STAR':([67,76,77,78,79,80,81,82,83,84,85,86,87,88,105,111,112,113,116,117,118,119,126,130,138,139,143,144,159,188,191,205,208,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-179,-142,-143,-144,-129,-134,-135,-136,177,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,177,177,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'SLASH':([67,76,77,78,79,80,81,82,83,84,85,86,87,88,105,111,112,113,116,117,118,119,126,130,138,139,143,144,159,188,191,205,208,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-179,-142,-143,-144,-129,-134,-135,-136,178,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,178,178,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'PERCENT':([67,76,77,78,79,80,81,82,83,84,85,86,87,88,105,111,112,113,116,117,118,119,126,130,138,139,143,144,159,188,191,205,208,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-179,-142,-143,-144,-129,-134,-135,-136,179,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,179,179,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'PLUS':([67,76,77,78,79,80,81,82,83,84,85,86,87,88,105,111,112,113,116,117,118,119,125,126,130,138,139,143,144,159,188,191,205,208,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-179,-142,-143,-144,-129,-134,-135,-136,175,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,175,175,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'MINUS':([67,76,77,78,79,80,81,82,83,84,85,86,87,88,105,111,112,113,116,117,118,119,125,126,130,138,139,143,144,159,188,191,205,208,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-179,-142,-143,-144,-129,-134,-135,-136,176,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,176,176,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'LSHIFT':([67,76,77,78,79,80,81,82,83,84,85,86,87,88,105,111,112,113,116,117,118,119,124,125,126,130,138,139,143,144,159,188,191,205,208,215,216,217,218,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-179,-142,-143,-144,-129,-134,-135,-136,173,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,173,173,173,173,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'RSHIFT':([67,76,77,78,79,80,81,82,83,84,85,86,87,88,105,111,112,113,116,117,118,119,124,125,126,130,138,139,143,144,159,188,191,205,208,215,216,217,218,220,221,222,223,224,225,226,236,238,240,241,242,243,262,264,283,287,307,],[-126,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-133,-179,-142,-143,-144,-129,-134,-135,-136,174,-172,-175,-126,-68,-69,-70,-71,-127,-130,-128,-145,-179,174,174,174,174,-170,-171,-173,-174,-176,-177,-178,-131,-59,-132,-137,-138,-139,-60,-61,-63,-62,-64,]),'IN':([235,],[260,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,22,]),'func_declaration':([0,2,],[2,2,]),'signature':([0,2,],[3,3,]),'type':([0,2,24,29,41,61,72,92,131,132,146,148,172,234,244,270,],[4,4,42,42,98,104,141,149,42,186,195,197,219,42,149,42,]),'class_type':([0,2,24,29,41,61,72,92,131,132,146,148,172,234,244,270,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'interface_type':([0,2,24,29,41,61,72,92,131,132,146,148,172,234,244,270,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'value_type':([0,2,24,29,41,61,72,92,131,132,146,147,148,172,234,244,270,],[8,8,8,8,8,8,8,8,8,8,8,196,8,8,8,8,8,]),'type_name':([0,2,24,29,41,61,72,92,131,132,146,148,172,234,244,270,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'integral_type':([0,2,24,29,41,61,72,92,131,132,146,147,148,172,234,244,270,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'floating_point_type':([0,2,24,29,41,61,72,92,131,132,146,147,148,172,234,244,270,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'block':([3,24,29,64,204,228,255,266,270,275,277,281,298,301,304,306,312,],[23,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'statement_list':([24,29,270,],[27,95,291,]),'statement':([24,29,270,],[29,29,29,]),'declaration_statement':([24,29,270,],[30,30,30,]),'embedded_statement':([24,29,64,204,228,255,266,270,275,277,281,298,301,304,306,312,],[31,31,129,247,250,278,288,31,299,302,305,311,313,314,315,318,]),'const_declaration':([24,29,270,],[32,32,32,]),'var_declaration':([24,29,131,234,270,],[34,34,185,185,34,]),'empty_statement':([24,29,64,204,228,255,266,270,275,277,281,298,301,304,306,312,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'exp_statement':([24,29,64,204,228,255,266,270,275,277,281,298,301,304,306,312,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'selection_statement':([24,29,64,204,228,255,266,270,275,277,281,298,301,304,306,312,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'iteration_statement':([24,29,64,204,228,255,266,270,275,277,281,298,301,304,306,312,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'jump_statement':([24,29,64,204,228,255,266,270,275,277,281,298,301,304,306,312,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'statement_exp':([24,29,64,204,228,231,252,255,258,266,270,275,276,277,279,281,298,301,304,306,312,],[43,43,43,43,43,257,257,43,257,43,43,43,257,43,257,43,43,43,43,43,43,]),'if_statement':([24,29,64,204,228,255,266,270,275,277,281,298,301,304,306,312,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'switch_statement':([24,29,64,204,228,255,266,270,275,277,281,298,301,304,306,312,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'while_statement':([24,29,64,204,228,255,266,270,275,277,281,298,301,304,306,312,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'do_statement':([24,29,64,204,228,255,266,270,275,277,281,298,301,304,306,312,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'for_statement':([24,29,64,204,228,255,266,270,275,277,281,298,301,304,306,312,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'foreach_statement':([24,29,64,204,228,255,266,270,275,277,281,298,301,304,306,312,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'break_statement':([24,29,64,204,228,255,266,270,275,277,281,298,301,304,306,312,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'continue_statement':([24,29,64,204,228,255,266,270,275,277,281,298,301,304,306,312,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'return_statement':([24,29,64,204,228,255,266,270,275,277,281,298,301,304,306,312,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'invocation_exp':([24,29,61,64,70,74,75,103,127,128,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,192,201,204,228,229,230,231,237,248,252,255,258,260,266,270,271,275,276,277,279,281,298,301,304,306,309,312,],[53,53,116,53,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,53,53,116,116,53,116,116,53,53,53,116,53,53,116,53,53,53,53,53,53,53,53,53,116,53,]),'object_creation_exp':([24,29,61,64,70,74,75,103,127,128,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,192,201,204,228,229,230,231,237,248,252,255,258,260,266,270,271,275,276,277,279,281,298,301,304,306,309,312,],[54,54,119,54,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,54,54,119,119,54,119,119,54,54,54,119,54,54,119,54,54,54,54,54,54,54,54,54,119,54,]),'assignment':([24,29,61,64,70,103,127,128,137,142,145,156,160,184,192,201,204,228,229,230,231,237,248,252,255,258,260,266,270,271,275,276,277,279,281,298,301,304,306,309,312,],[55,55,108,55,108,108,108,108,108,108,108,108,108,108,108,108,55,55,108,108,55,108,108,55,55,55,108,55,55,108,55,55,55,55,55,55,55,55,55,108,55,]),'post_increment_exp':([24,29,61,64,70,74,75,103,127,128,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,192,201,204,228,229,230,231,237,248,252,255,258,260,266,270,271,275,276,277,279,281,298,301,304,306,309,312,],[56,56,117,56,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,56,56,117,117,56,117,117,56,56,56,117,56,56,117,56,56,56,56,56,56,56,56,56,117,56,]),'post_decrement_exp':([24,29,61,64,70,74,75,103,127,128,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,192,201,204,228,229,230,231,237,248,252,255,258,260,266,270,271,275,276,277,279,281,298,301,304,306,309,312,],[57,57,118,57,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,57,57,118,118,57,118,118,57,57,57,118,57,57,118,57,57,57,57,57,57,57,57,57,118,57,]),'pre_increment_exp':([24,29,61,64,70,74,75,103,127,128,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,192,201,204,228,229,230,231,237,248,252,255,258,260,266,270,271,275,276,277,279,281,298,301,304,306,309,312,],[58,58,112,58,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,58,58,112,112,58,112,112,58,58,58,112,58,58,112,58,58,58,58,58,58,58,58,58,112,58,]),'pre_decrement_exp':([24,29,61,64,70,74,75,103,127,128,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,192,201,204,228,229,230,231,237,248,252,255,258,260,266,270,271,275,276,277,279,281,298,301,304,306,309,312,],[59,59,113,59,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,59,59,113,113,59,113,113,59,59,59,113,59,59,113,59,59,59,59,59,59,59,59,59,113,59,]),'primary_exp':([24,29,61,64,70,74,75,103,127,128,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,192,201,204,228,229,230,231,237,248,252,255,258,260,266,270,271,275,276,277,279,281,298,301,304,306,309,312,],[71,71,111,71,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,71,71,111,111,71,111,111,71,71,71,111,71,71,111,71,71,71,71,71,71,71,71,71,111,71,]),'unary_exp':([24,29,61,64,70,74,75,103,127,128,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,192,201,204,228,229,230,231,237,248,252,255,258,260,266,270,271,275,276,277,279,281,298,301,304,306,309,312,],[73,73,105,73,105,143,144,105,105,105,105,105,105,105,205,105,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,224,225,226,105,105,105,73,73,105,105,73,105,105,73,73,73,105,73,73,105,73,73,73,73,73,73,73,73,73,105,73,]),'primary_no_array_creation_exp':([24,29,61,64,70,74,75,103,127,128,137,142,145,156,158,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,177,178,179,184,192,201,204,228,229,230,231,237,248,252,255,258,260,266,270,271,275,276,277,279,281,298,301,304,306,309,312,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'var_declarators':([42,155,],[99,202,]),'var_declarator':([42,155,],[100,100,]),'exp':([61,70,103,127,128,137,142,145,156,160,184,192,201,229,230,237,248,260,271,309,],[106,136,157,180,181,190,193,194,203,206,233,190,246,251,233,190,267,282,295,317,]),'non_assignment_exp':([61,70,103,127,128,137,142,145,156,160,184,192,201,229,230,237,248,260,271,309,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'conditional_exp':([61,70,103,127,128,137,142,145,156,160,184,192,201,229,230,237,248,260,271,309,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'conditional_or_exp':([61,70,103,127,128,137,142,145,156,160,184,192,201,229,230,237,248,260,271,309,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'conditional_and_exp':([61,70,103,127,128,137,142,145,156,160,161,184,192,201,229,230,237,248,260,271,309,],[114,114,114,114,114,114,114,114,114,114,207,114,114,114,114,114,114,114,114,114,114,]),'inclusive_or_exp':([61,70,103,127,128,137,142,145,156,160,161,162,184,192,201,229,230,237,248,260,271,309,],[115,115,115,115,115,115,115,115,115,115,115,209,115,115,115,115,115,115,115,115,115,115,]),'exclusive_or_exp':([61,70,103,127,128,137,142,145,156,160,161,162,163,184,192,201,229,230,237,248,260,271,309,],[120,120,120,120,120,120,120,120,120,120,120,120,210,120,120,120,120,120,120,120,120,120,120,]),'and_exp':([61,70,103,127,128,137,142,145,156,160,161,162,163,164,184,192,201,229,230,237,248,260,271,309,],[121,121,121,121,121,121,121,121,121,121,121,121,121,211,121,121,121,121,121,121,121,121,121,121,]),'equality_exp':([61,70,103,127,128,137,142,145,156,160,161,162,163,164,165,184,192,201,229,230,237,248,260,271,309,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,212,122,122,122,122,122,122,122,122,122,122,]),'relational_exp':([61,70,103,127,128,137,142,145,156,160,161,162,163,164,165,166,167,184,192,201,229,230,237,248,260,271,309,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,213,214,123,123,123,123,123,123,123,123,123,123,]),'shift_exp':([61,70,103,127,128,137,142,145,156,160,161,162,163,164,165,166,167,168,169,170,171,184,192,201,229,230,237,248,260,271,309,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,215,216,217,218,124,124,124,124,124,124,124,124,124,124,]),'additive_exp':([61,70,103,127,128,137,142,145,156,160,161,162,163,164,165,166,167,168,169,170,171,173,174,184,192,201,229,230,237,248,260,271,309,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,220,221,125,125,125,125,125,125,125,125,125,125,]),'multiplicative_exp':([61,70,103,127,128,137,142,145,156,160,161,162,163,164,165,166,167,168,169,170,171,173,174,175,176,184,192,201,229,230,237,248,260,271,309,],[126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,222,223,126,126,126,126,126,126,126,126,126,126,]),'param_list':([92,244,],[150,265,]),'const_declarators':([98,200,],[152,245,]),'const_declarator':([98,200,],[153,153,]),'for_initializer':([131,234,],[183,259,]),'arg_list':([137,192,237,],[189,239,261,]),'for_condition':([184,230,],[232,253,]),'for_iterator':([231,252,258,276,],[254,274,280,300,]),'statement_exp_list':([231,252,258,276,279,],[256,256,256,256,303,]),'object_initializer':([238,264,],[262,287,]),'switch_body':([249,269,],[268,290,]),'switch_section':([249,269,270,],[269,269,292,]),'switch_label':([249,269,270,],[270,270,270,]),'member_initializer_list':([263,308,],[284,316,]),'member_initializer':([263,308,],[285,285,]),'pattern':([271,],[294,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> func_declaration','program',1,'p_program','LanguageParser.py',9),
  ('program -> func_declaration program','program',2,'p_program','LanguageParser.py',10),
  ('type_name -> ID','type_name',1,'p_type_name','LanguageParser.py',17),
  ('type_name -> type_name DOT ID','type_name',3,'p_type_name','LanguageParser.py',18),
  ('type -> class_type','type',1,'p_type','LanguageParser.py',25),
  ('type -> interface_type','type',1,'p_type','LanguageParser.py',26),
  ('type -> value_type','type',1,'p_type','LanguageParser.py',27),
  ('class_type -> type_name','class_type',1,'p_class_type','LanguageParser.py',36),
  ('class_type -> OBJECT','class_type',1,'p_class_type','LanguageParser.py',37),
  ('class_type -> STRING','class_type',1,'p_class_type','LanguageParser.py',38),
  ('interface_type -> type_name','interface_type',1,'p_interface_type','LanguageParser.py',47),
  ('value_type -> integral_type','value_type',1,'p_value_type','LanguageParser.py',51),
  ('value_type -> floating_point_type','value_type',1,'p_value_type','LanguageParser.py',52),
  ('value_type -> BOOL','value_type',1,'p_value_type','LanguageParser.py',53),
  ('value_type -> VOID','value_type',1,'p_value_type','LanguageParser.py',54),
  ('integral_type -> INT','integral_type',1,'p_integral_type_int','LanguageParser.py',65),
  ('integral_type -> LONG','integral_type',1,'p_integral_type_long','LanguageParser.py',69),
  ('integral_type -> CHAR','integral_type',1,'p_integral_type_char','LanguageParser.py',73),
  ('floating_point_type -> FLOAT','floating_point_type',1,'p_integral_type_float','LanguageParser.py',77),
  ('floating_point_type -> DOUBLE','floating_point_type',1,'p_integral_type_double','LanguageParser.py',81),
  ('floating_point_type -> DECIMAL','floating_point_type',1,'p_integral_type_decimal','LanguageParser.py',85),
  ('func_declaration -> signature block','func_declaration',2,'p_func_declaration','LanguageParser.py',89),
  ('signature -> type ID LPAREN param_list RPAREN','signature',5,'p_signature','LanguageParser.py',93),
  ('signature -> type ID LPAREN RPAREN','signature',4,'p_signature','LanguageParser.py',94),
  ('param_list -> type ID','param_list',2,'p_param_list','LanguageParser.py',101),
  ('param_list -> type ID COMMA param_list','param_list',4,'p_param_list','LanguageParser.py',102),
  ('statement_list -> statement','statement_list',1,'p_statement_list','LanguageParser.py',109),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','LanguageParser.py',110),
  ('statement -> declaration_statement','statement',1,'p_statement','LanguageParser.py',117),
  ('statement -> embedded_statement','statement',1,'p_statement','LanguageParser.py',118),
  ('declaration_statement -> const_declaration SEMI','declaration_statement',2,'p_declaration_stmt','LanguageParser.py',125),
  ('declaration_statement -> var_declaration SEMI','declaration_statement',2,'p_declaration_stmt','LanguageParser.py',126),
  ('const_declaration -> CONST type const_declarators','const_declaration',3,'p_const_declaration','LanguageParser.py',133),
  ('const_declarators -> const_declarator','const_declarators',1,'p_const_declarators','LanguageParser.py',137),
  ('const_declarators -> const_declarator COMMA const_declarators','const_declarators',3,'p_const_declarators','LanguageParser.py',138),
  ('const_declarator -> ID EQUAL exp','const_declarator',3,'p_const_declarator','LanguageParser.py',145),
  ('var_declaration -> type var_declarators','var_declaration',2,'p_var_declaration','LanguageParser.py',149),
  ('var_declarators -> var_declarator','var_declarators',1,'p_var_declarators','LanguageParser.py',153),
  ('var_declarators -> var_declarator COMMA var_declarators','var_declarators',3,'p_var_declarators','LanguageParser.py',154),
  ('var_declarator -> ID','var_declarator',1,'p_var_declarator','LanguageParser.py',161),
  ('var_declarator -> ID EQUAL exp','var_declarator',3,'p_var_declarator','LanguageParser.py',162),
  ('embedded_statement -> block','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',169),
  ('embedded_statement -> empty_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',170),
  ('embedded_statement -> exp_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',171),
  ('embedded_statement -> selection_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',172),
  ('embedded_statement -> iteration_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',173),
  ('embedded_statement -> jump_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',174),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','LanguageParser.py',189),
  ('block -> LBRACE RBRACE','block',2,'p_block','LanguageParser.py',190),
  ('empty_statement -> SEMI','empty_statement',1,'p_empty_stmt','LanguageParser.py',197),
  ('exp_statement -> statement_exp SEMI','exp_statement',2,'p_exp_statement','LanguageParser.py',201),
  ('statement_exp -> invocation_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',205),
  ('statement_exp -> object_creation_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',206),
  ('statement_exp -> assignment','statement_exp',1,'p_statement_exp','LanguageParser.py',207),
  ('statement_exp -> post_increment_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',208),
  ('statement_exp -> post_decrement_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',209),
  ('statement_exp -> pre_increment_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',210),
  ('statement_exp -> pre_decrement_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',211),
  ('object_creation_exp -> NEW type LPAREN RPAREN','object_creation_exp',4,'p_object_creation','LanguageParser.py',228),
  ('object_creation_exp -> NEW type LPAREN RPAREN object_initializer','object_creation_exp',5,'p_object_creation','LanguageParser.py',229),
  ('object_creation_exp -> NEW type LPAREN arg_list RPAREN','object_creation_exp',5,'p_object_creation','LanguageParser.py',230),
  ('object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer','object_creation_exp',6,'p_object_creation','LanguageParser.py',231),
  ('object_initializer -> LBRACE RBRACE','object_initializer',2,'p_object_initializer','LanguageParser.py',243),
  ('object_initializer -> LBRACE member_initializer_list RBRACE','object_initializer',3,'p_object_initializer','LanguageParser.py',244),
  ('member_initializer_list -> member_initializer','member_initializer_list',1,'p_member_initializer_list','LanguageParser.py',251),
  ('member_initializer_list -> member_initializer COMMA member_initializer_list','member_initializer_list',3,'p_member_initializer_list','LanguageParser.py',252),
  ('member_initializer -> ID EQUAL exp','member_initializer',3,'p_member_initializer','LanguageParser.py',259),
  ('post_increment_exp -> primary_exp PLUSPLUS','post_increment_exp',2,'p_post_increment_exp','LanguageParser.py',263),
  ('post_decrement_exp -> primary_exp MINUSMINUS','post_decrement_exp',2,'p_post_decrement_exp','LanguageParser.py',267),
  ('pre_increment_exp -> PLUSPLUS unary_exp','pre_increment_exp',2,'p_pre_increment_exp','LanguageParser.py',271),
  ('pre_decrement_exp -> MINUSMINUS unary_exp','pre_decrement_exp',2,'p_pre_decrement_exp','LanguageParser.py',275),
  ('selection_statement -> if_statement','selection_statement',1,'p_selection_statement','LanguageParser.py',279),
  ('selection_statement -> switch_statement','selection_statement',1,'p_selection_statement','LanguageParser.py',280),
  ('if_statement -> IF LPAREN exp RPAREN embedded_statement','if_statement',5,'p_if_statement','LanguageParser.py',287),
  ('if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement','if_statement',7,'p_if_statement','LanguageParser.py',288),
  ('switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE','switch_statement',7,'p_switch_statement','LanguageParser.py',295),
  ('switch_body -> switch_section','switch_body',1,'p_switch_body','LanguageParser.py',299),
  ('switch_body -> switch_section switch_body','switch_body',2,'p_switch_body','LanguageParser.py',300),
  ('switch_section -> switch_label statement_list','switch_section',2,'p_switch_section_simple','LanguageParser.py',307),
  ('switch_section -> switch_label switch_section','switch_section',2,'p_switch_section_compound','LanguageParser.py',311),
  ('switch_label -> CASE pattern COLON','switch_label',3,'p_switch_label','LanguageParser.py',315),
  ('switch_label -> DEFAULT COLON','switch_label',2,'p_switch_label','LanguageParser.py',316),
  ('pattern -> exp','pattern',1,'p_pattern','LanguageParser.py',323),
  ('iteration_statement -> while_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',327),
  ('iteration_statement -> do_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',328),
  ('iteration_statement -> for_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',329),
  ('iteration_statement -> foreach_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',330),
  ('while_statement -> WHILE LPAREN exp RPAREN embedded_statement','while_statement',5,'p_while_statement','LanguageParser.py',341),
  ('do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI','do_statement',7,'p_do_statement','LanguageParser.py',345),
  ('for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement','for_statement',9,'p_for_statement_full','LanguageParser.py',349),
  ('for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement','for_statement',8,'p_for_statement_12','LanguageParser.py',353),
  ('for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement','for_statement',8,'p_for_statement_13','LanguageParser.py',357),
  ('for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement','for_statement',7,'p_for_statement_1','LanguageParser.py',361),
  ('for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement','for_statement',8,'p_for_statement_23','LanguageParser.py',365),
  ('for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement','for_statement',7,'p_for_statement_2','LanguageParser.py',369),
  ('for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement','for_statement',7,'p_for_statement_3','LanguageParser.py',373),
  ('for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement','for_statement',6,'p_for_statement_empty','LanguageParser.py',377),
  ('for_initializer -> var_declaration','for_initializer',1,'p_for_initializer','LanguageParser.py',381),
  ('for_initializer -> var_declaration COMMA for_initializer','for_initializer',3,'p_for_initializer','LanguageParser.py',382),
  ('for_condition -> exp','for_condition',1,'p_for_condition','LanguageParser.py',389),
  ('for_iterator -> statement_exp_list','for_iterator',1,'p_for_iterator','LanguageParser.py',393),
  ('statement_exp_list -> statement_exp','statement_exp_list',1,'p_statement_exp_list','LanguageParser.py',397),
  ('statement_exp_list -> statement_exp COMMA statement_exp_list','statement_exp_list',3,'p_statement_exp_list','LanguageParser.py',398),
  ('foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement','foreach_statement',8,'p_foreach_statement','LanguageParser.py',405),
  ('jump_statement -> break_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',409),
  ('jump_statement -> continue_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',410),
  ('jump_statement -> return_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',411),
  ('break_statement -> BREAK SEMI','break_statement',2,'p_break_statement','LanguageParser.py',420),
  ('continue_statement -> CONTINUE SEMI','continue_statement',2,'p_continue_statement','LanguageParser.py',424),
  ('return_statement -> RETURN SEMI','return_statement',2,'p_return_statement','LanguageParser.py',428),
  ('return_statement -> RETURN exp SEMI','return_statement',3,'p_return_statement','LanguageParser.py',429),
  ('arg_list -> exp','arg_list',1,'p_arg_list','LanguageParser.py',436),
  ('arg_list -> exp COMMA arg_list','arg_list',3,'p_arg_list','LanguageParser.py',437),
  ('primary_exp -> primary_no_array_creation_exp','primary_exp',1,'p_primary_exp','LanguageParser.py',444),
  ('primary_no_array_creation_exp -> TRUE','primary_no_array_creation_exp',1,'p_boolean_exp','LanguageParser.py',448),
  ('primary_no_array_creation_exp -> FALSE','primary_no_array_creation_exp',1,'p_boolean_exp','LanguageParser.py',449),
  ('primary_no_array_creation_exp -> NULL','primary_no_array_creation_exp',1,'p_null_exp','LanguageParser.py',453),
  ('primary_no_array_creation_exp -> INTNUM','primary_no_array_creation_exp',1,'p_intnum_exp','LanguageParser.py',457),
  ('primary_no_array_creation_exp -> HEXADECIMALNUM','primary_no_array_creation_exp',1,'p_hexnum_exp','LanguageParser.py',461),
  ('primary_no_array_creation_exp -> BINARYNUM','primary_no_array_creation_exp',1,'p_binnum_exp','LanguageParser.py',465),
  ('primary_no_array_creation_exp -> FLOATNUM','primary_no_array_creation_exp',1,'p_floatnum_exp','LanguageParser.py',469),
  ('primary_no_array_creation_exp -> DOUBLENUM','primary_no_array_creation_exp',1,'p_doublenum_exp','LanguageParser.py',473),
  ('primary_no_array_creation_exp -> DECIMALNUM','primary_no_array_creation_exp',1,'p_decimalnum_exp','LanguageParser.py',477),
  ('primary_no_array_creation_exp -> CHARLITERAL','primary_no_array_creation_exp',1,'p_charliteral_exp','LanguageParser.py',481),
  ('primary_no_array_creation_exp -> STRINGLITERAL','primary_no_array_creation_exp',1,'p_stringliteral_exp','LanguageParser.py',485),
  ('primary_no_array_creation_exp -> ID','primary_no_array_creation_exp',1,'p_id_exp','LanguageParser.py',489),
  ('primary_no_array_creation_exp -> LPAREN exp RPAREN','primary_no_array_creation_exp',3,'p_parent_exp','LanguageParser.py',493),
  ('primary_no_array_creation_exp -> primary_exp DOT ID','primary_no_array_creation_exp',3,'p_member_access_exp','LanguageParser.py',497),
  ('primary_no_array_creation_exp -> invocation_exp','primary_no_array_creation_exp',1,'p_primary_invocation_exp','LanguageParser.py',501),
  ('invocation_exp -> primary_exp LPAREN RPAREN','invocation_exp',3,'p_invocation_exp','LanguageParser.py',505),
  ('invocation_exp -> primary_exp LPAREN arg_list RPAREN','invocation_exp',4,'p_invocation_exp','LanguageParser.py',506),
  ('primary_no_array_creation_exp -> primary_no_array_creation_exp LSB exp RSB','primary_no_array_creation_exp',4,'p_element_access_exp','LanguageParser.py',513),
  ('primary_no_array_creation_exp -> THIS','primary_no_array_creation_exp',1,'p_this_exp','LanguageParser.py',517),
  ('primary_no_array_creation_exp -> post_increment_exp','primary_no_array_creation_exp',1,'p_primary_post_increment_exp','LanguageParser.py',522),
  ('primary_no_array_creation_exp -> post_decrement_exp','primary_no_array_creation_exp',1,'p_primary_post_decrement_exp','LanguageParser.py',527),
  ('primary_no_array_creation_exp -> object_creation_exp','primary_no_array_creation_exp',1,'p_primary_object_creation_exp','LanguageParser.py',532),
  ('primary_no_array_creation_exp -> TYPEOF LPAREN type RPAREN','primary_no_array_creation_exp',4,'p_typeof_exp','LanguageParser.py',536),
  ('primary_no_array_creation_exp -> SIZEOF LPAREN value_type RPAREN','primary_no_array_creation_exp',4,'p_sizeof_exp','LanguageParser.py',540),
  ('primary_no_array_creation_exp -> DEFAULT LPAREN type RPAREN','primary_no_array_creation_exp',4,'p_default_exp','LanguageParser.py',544),
  ('exp_list -> exp','exp_list',1,'p_exp_list','LanguageParser.py',548),
  ('exp_list -> exp_list COMMA exp','exp_list',3,'p_exp_list','LanguageParser.py',549),
  ('unary_exp -> primary_exp','unary_exp',1,'p_unary_primary_exp','LanguageParser.py',556),
  ('unary_exp -> pre_increment_exp','unary_exp',1,'p_unary_pre_increment_exp','LanguageParser.py',560),
  ('unary_exp -> pre_decrement_exp','unary_exp',1,'p_unary_pre_decrement_exp','LanguageParser.py',564),
  ('unary_exp -> LPAREN type RPAREN unary_exp','unary_exp',4,'p_cast_exp','LanguageParser.py',568),
  ('exp -> non_assignment_exp','exp',1,'p_exp_non_assignment_exp','LanguageParser.py',572),
  ('exp -> assignment','exp',1,'p_exp_assignment_exp','LanguageParser.py',576),
  ('non_assignment_exp -> conditional_exp','non_assignment_exp',1,'p_non_assignment_conditional_exp','LanguageParser.py',580),
  ('conditional_exp -> conditional_or_exp HOOK exp COLON exp','conditional_exp',5,'p_conditional_exp','LanguageParser.py',584),
  ('conditional_exp -> conditional_or_exp','conditional_exp',1,'p_conditional_exp','LanguageParser.py',585),
  ('conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp','conditional_or_exp',3,'p_conditional_or_exp','LanguageParser.py',592),
  ('conditional_or_exp -> conditional_and_exp','conditional_or_exp',1,'p_conditional_or_exp','LanguageParser.py',593),
  ('conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp','conditional_and_exp',3,'p_conditional_and_exp','LanguageParser.py',600),
  ('conditional_and_exp -> inclusive_or_exp','conditional_and_exp',1,'p_conditional_and_exp','LanguageParser.py',601),
  ('inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp','inclusive_or_exp',3,'p_inclusive_or_exp','LanguageParser.py',608),
  ('inclusive_or_exp -> exclusive_or_exp','inclusive_or_exp',1,'p_inclusive_or_exp','LanguageParser.py',609),
  ('exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp','exclusive_or_exp',3,'p_exclusive_or_exp','LanguageParser.py',616),
  ('exclusive_or_exp -> and_exp','exclusive_or_exp',1,'p_exclusive_or_exp','LanguageParser.py',617),
  ('and_exp -> and_exp AMPER equality_exp','and_exp',3,'p_and_exp','LanguageParser.py',624),
  ('and_exp -> equality_exp','and_exp',1,'p_and_exp','LanguageParser.py',625),
  ('equality_exp -> equality_exp EQEQUAL relational_exp','equality_exp',3,'p_equality_exp','LanguageParser.py',632),
  ('equality_exp -> equality_exp NOTEQUAL relational_exp','equality_exp',3,'p_equality_exp','LanguageParser.py',633),
  ('equality_exp -> relational_exp','equality_exp',1,'p_equality_exp','LanguageParser.py',634),
  ('relational_exp -> relational_exp LT shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',643),
  ('relational_exp -> relational_exp GT shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',644),
  ('relational_exp -> relational_exp LEQ shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',645),
  ('relational_exp -> relational_exp GEQ shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',646),
  ('relational_exp -> relational_exp IS type','relational_exp',3,'p_relational_exp','LanguageParser.py',647),
  ('relational_exp -> shift_exp','relational_exp',1,'p_relational_exp','LanguageParser.py',648),
  ('shift_exp -> shift_exp LSHIFT additive_exp','shift_exp',3,'p_shift_exp','LanguageParser.py',663),
  ('shift_exp -> shift_exp RSHIFT additive_exp','shift_exp',3,'p_shift_exp','LanguageParser.py',664),
  ('shift_exp -> additive_exp','shift_exp',1,'p_shift_exp','LanguageParser.py',665),
  ('additive_exp -> additive_exp PLUS multiplicative_exp','additive_exp',3,'p_additive_exp','LanguageParser.py',674),
  ('additive_exp -> additive_exp MINUS multiplicative_exp','additive_exp',3,'p_additive_exp','LanguageParser.py',675),
  ('additive_exp -> multiplicative_exp','additive_exp',1,'p_additive_exp','LanguageParser.py',676),
  ('multiplicative_exp -> multiplicative_exp STAR unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',685),
  ('multiplicative_exp -> multiplicative_exp SLASH unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',686),
  ('multiplicative_exp -> multiplicative_exp PERCENT unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',687),
  ('multiplicative_exp -> unary_exp','multiplicative_exp',1,'p_multiplicative_exp','LanguageParser.py',688),
  ('assignment -> unary_exp EQUAL exp','assignment',3,'p_assignment_simple','LanguageParser.py',699),
]
