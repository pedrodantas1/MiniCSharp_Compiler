
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPER AMPERAMPER AMPEREQUAL BANG BINARYNUM BOOL BREAK CASE CATCH CHAR CHARLITERAL CIRCUMEQUAL CIRCUMFLEX CLASS COLON COMMA CONST CONTINUE DECIMAL DECIMALNUM DEFAULT DO DOT DOUBLE DOUBLENUM ELSE ENUM EQEQUAL EQUAL FALSE FINALLY FLOAT FLOATNUM FOR FOREACH GEQ GT HEXADECIMALNUM HOOK HOOKHOOK HOOKHOOKEQUAL ID IF IN INT INTERFACE INTNUM IS LBRACE LEQ LONG LPAREN LSB LSHIFT LSHIFTEQUAL LT MINUS MINUSEQUAL MINUSMINUS NAMESPACE NEW NOTEQUAL NULL OBJECT OUT OVERRIDE PARAMS PERCENT PERCENTEQUAL PIPE PIPEEQUAL PIPEPIPE PLUS PLUSEQUAL PLUSPLUS PRIVATE PROTECTED PUBLIC RBRACE READONLY REF RETURN RPAREN RSB RSHIFT RSHIFTEQUAL SEMI SHORT SIZEOF SLASH SLASHEQUAL STAR STAREQUAL STATIC STRING STRINGLITERAL STRUCT SWITCH THIS THROW TILDE TRUE TRY TYPEOF UINT ULONG USHORT VOID WHILEprogram : func_declaration\n               | func_declaration programtype_name : ID\n                 | type_name DOT IDtype : class_type\n            | interface_type\n            | value_typeclass_type : type_name\n                  | OBJECT\n                  | STRINGinterface_type : type_namevalue_type : integral_type\n                  | floating_point_type\n                  | BOOLintegral_type : INTintegral_type : LONGintegral_type : CHARfloating_point_type : FLOATfloating_point_type : DOUBLEfloating_point_type : DECIMALfunc_declaration : signature blocksignature : type ID LPAREN param_list RPAREN\n                 | type ID LPAREN RPARENparam_list : type ID\n                  | type ID COMMA param_liststatement_list : statement\n                      | statement statement_liststatement : declaration_statement\n                 | embedded_statementdeclaration_statement : const_declaration SEMI\n                             | var_declaration SEMIconst_declaration : CONST type const_declaratorsconst_declarators : const_declarator\n                         | const_declarator COMMA const_declaratorsconst_declarator : ID EQUAL expvar_declaration : type var_declaratorsvar_declarators : var_declarator\n                       | var_declarator COMMA var_declaratorsvar_declarator : ID\n                      | ID EQUAL expembedded_statement : block\n                          | empty_statement\n                          | exp_statement\n                          | selection_statement\n                          | iteration_statement\n                          | jump_statementblock : LBRACE statement_list RBRACE\n             | LBRACE RBRACEempty_statement : SEMIexp_statement : statement_exp SEMIstatement_exp : invocation_exp\n                     | object_creation_exp\n                     | assignment\n                     | post_increment_exp\n                     | post_decrement_exp\n                     | pre_increment_exp\n                     | pre_decrement_expobject_creation_exp : NEW type LPAREN RPAREN\n                           | NEW type LPAREN RPAREN object_initializer\n                           | NEW type LPAREN arg_list RPAREN\n                           | NEW type LPAREN arg_list RPAREN object_initializerobject_initializer : LBRACE RBRACE\n                          | LBRACE member_initializer_list RBRACEmember_initializer_list : member_initializer\n                               | member_initializer COMMA member_initializer_listmember_initializer : ID EQUAL exppost_increment_exp : primary_exp PLUSPLUSpost_decrement_exp : primary_exp MINUSMINUSpre_increment_exp : PLUSPLUS unary_exppre_decrement_exp : MINUSMINUS unary_expselection_statement : if_statement\n                           | switch_statementif_statement : IF LPAREN exp RPAREN embedded_statement\n                    | IF LPAREN exp RPAREN embedded_statement ELSE embedded_statementswitch_statement : SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACEswitch_body : switch_section\n                   | switch_section switch_bodyswitch_section : switch_label statement_listswitch_section : switch_label switch_sectionswitch_label : CASE pattern COLON\n                    | DEFAULT COLONpattern : expiteration_statement : while_statement\n                           | do_statement\n                           | for_statement\n                           | foreach_statementwhile_statement : WHILE LPAREN exp RPAREN embedded_statementdo_statement : DO embedded_statement WHILE LPAREN exp RPAREN SEMIfor_statement : FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statementfor_statement : FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statementfor_statement : FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statementfor_statement : FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statementfor_statement : FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statementfor_statement : FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statementfor_statement : FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statementfor_statement : FOR LPAREN SEMI SEMI RPAREN embedded_statementfor_initializer : var_declaration\n                       | var_declaration COMMA for_initializerfor_condition : expfor_iterator : statement_exp_liststatement_exp_list : statement_exp\n                          | statement_exp COMMA statement_exp_listforeach_statement : FOREACH LPAREN type ID IN exp RPAREN embedded_statementjump_statement : break_statement\n                      | continue_statement\n                      | return_statementbreak_statement : BREAK SEMIcontinue_statement : CONTINUE SEMIreturn_statement : RETURN SEMI\n                        | RETURN exp SEMIarg_list : exp\n                | exp COMMA arg_listprimary_exp : primary_no_array_creation_expprimary_no_array_creation_exp : TRUE\n                                     | FALSEprimary_no_array_creation_exp : NULLprimary_no_array_creation_exp : INTNUMprimary_no_array_creation_exp : HEXADECIMALNUMprimary_no_array_creation_exp : BINARYNUMprimary_no_array_creation_exp : FLOATNUMprimary_no_array_creation_exp : DOUBLENUMprimary_no_array_creation_exp : DECIMALNUMprimary_no_array_creation_exp : CHARLITERALprimary_no_array_creation_exp : STRINGLITERALprimary_no_array_creation_exp : IDprimary_no_array_creation_exp : LPAREN exp RPARENprimary_no_array_creation_exp : primary_exp DOT IDprimary_no_array_creation_exp : invocation_expinvocation_exp : primary_exp LPAREN RPAREN\n                      | primary_exp LPAREN arg_list RPARENprimary_no_array_creation_exp : primary_no_array_creation_exp LSB exp RSBprimary_no_array_creation_exp : THISprimary_no_array_creation_exp : post_increment_expprimary_no_array_creation_exp : post_decrement_expprimary_no_array_creation_exp : object_creation_expprimary_no_array_creation_exp : TYPEOF LPAREN type RPARENprimary_no_array_creation_exp : SIZEOF LPAREN value_type RPARENprimary_no_array_creation_exp : DEFAULT LPAREN type RPARENexp_list : exp\n                | exp_list COMMA expunary_exp : primary_expunary_exp : pre_increment_expunary_exp : pre_decrement_expunary_exp : LPAREN type RPAREN unary_expexp : non_assignment_expexp : assignmentnon_assignment_exp : conditional_expconditional_exp : conditional_or_exp HOOK exp COLON exp\n                       | conditional_or_expconditional_or_exp : conditional_or_exp PIPEPIPE conditional_and_exp\n                          | conditional_and_expconditional_and_exp : conditional_and_exp AMPERAMPER inclusive_or_exp\n                           | inclusive_or_expinclusive_or_exp : inclusive_or_exp PIPE exclusive_or_exp\n                        | exclusive_or_expexclusive_or_exp : exclusive_or_exp CIRCUMFLEX and_exp\n                        | and_expand_exp : and_exp AMPER equality_exp\n               | equality_expequality_exp : equality_exp EQEQUAL relational_exp\n                    | equality_exp NOTEQUAL relational_exp\n                    | relational_exprelational_exp : relational_exp LT shift_exp\n                      | relational_exp GT shift_exp\n                      | relational_exp LEQ shift_exp\n                      | relational_exp GEQ shift_exp\n                      | relational_exp IS type\n                      | shift_expshift_exp : shift_exp LSHIFT additive_exp\n                 | shift_exp RSHIFT additive_exp\n                 | additive_expadditive_exp : additive_exp PLUS multiplicative_exp\n                    | additive_exp MINUS multiplicative_exp\n                    | multiplicative_expmultiplicative_exp : multiplicative_exp STAR unary_exp\n                          | multiplicative_exp SLASH unary_exp\n                          | multiplicative_exp PERCENT unary_exp\n                          | unary_expassignment : unary_exp EQUAL exp'
    
_lr_action_items = {'OBJECT':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,91,93,95,96,101,130,131,132,133,134,145,147,171,186,233,243,246,249,269,277,287,288,295,296,298,301,304,309,310,312,313,314,317,],[10,10,-21,10,-48,10,-28,-29,-49,-41,-42,-43,-44,-45,-46,10,-71,-72,-83,-84,-85,-86,-104,-105,-106,10,10,10,-47,-30,-31,-50,10,10,-107,-108,-109,10,10,10,-110,10,10,-73,-87,10,-96,-74,-75,-81,-88,-92,-95,-94,-80,-91,-90,-93,-103,-89,]),'STRING':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,91,93,95,96,101,130,131,132,133,134,145,147,171,186,233,243,246,249,269,277,287,288,295,296,298,301,304,309,310,312,313,314,317,],[11,11,-21,11,-48,11,-28,-29,-49,-41,-42,-43,-44,-45,-46,11,-71,-72,-83,-84,-85,-86,-104,-105,-106,11,11,11,-47,-30,-31,-50,11,11,-107,-108,-109,11,11,11,-110,11,11,-73,-87,11,-96,-74,-75,-81,-88,-92,-95,-94,-80,-91,-90,-93,-103,-89,]),'BOOL':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,91,93,95,96,101,130,131,132,133,134,145,146,147,171,186,233,243,246,249,269,277,287,288,295,296,298,301,304,309,310,312,313,314,317,],[14,14,-21,14,-48,14,-28,-29,-49,-41,-42,-43,-44,-45,-46,14,-71,-72,-83,-84,-85,-86,-104,-105,-106,14,14,14,-47,-30,-31,-50,14,14,-107,-108,-109,14,14,14,14,-110,14,14,-73,-87,14,-96,-74,-75,-81,-88,-92,-95,-94,-80,-91,-90,-93,-103,-89,]),'ID':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,25,27,28,29,30,32,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,60,63,66,69,71,73,74,91,92,93,95,96,97,101,102,126,127,130,131,132,133,134,136,139,141,144,145,147,148,154,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,183,185,186,191,199,200,203,227,228,229,230,233,236,243,246,247,249,251,254,257,259,262,265,269,270,274,275,276,277,278,280,287,288,295,296,297,298,300,301,303,304,305,307,308,309,310,311,312,313,314,317,],[5,5,24,-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,66,92,-48,66,-28,-29,-49,-41,-42,-43,-44,-45,-46,5,100,-71,-72,-83,-84,-85,-86,-104,-105,-106,66,129,-3,129,5,129,129,5,-4,-47,-30,-31,153,-50,129,129,129,5,5,-107,-108,-109,129,190,129,129,5,5,197,100,129,129,129,129,129,129,129,129,129,129,129,129,129,129,5,129,129,129,129,129,129,129,129,234,-110,129,153,129,129,129,129,129,129,5,129,5,-73,129,-87,129,129,129,129,285,129,66,129,129,129,129,-96,129,129,-74,-75,-81,-88,129,-92,129,-95,129,-94,129,285,129,-80,-91,129,-90,-93,-103,-89,]),'INT':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,91,93,95,96,101,130,131,132,133,134,145,146,147,171,186,233,243,246,249,269,277,287,288,295,296,298,301,304,309,310,312,313,314,317,],[15,15,-21,15,-48,15,-28,-29,-49,-41,-42,-43,-44,-45,-46,15,-71,-72,-83,-84,-85,-86,-104,-105,-106,15,15,15,-47,-30,-31,-50,15,15,-107,-108,-109,15,15,15,15,-110,15,15,-73,-87,15,-96,-74,-75,-81,-88,-92,-95,-94,-80,-91,-90,-93,-103,-89,]),'LONG':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,91,93,95,96,101,130,131,132,133,134,145,146,147,171,186,233,243,246,249,269,277,287,288,295,296,298,301,304,309,310,312,313,314,317,],[16,16,-21,16,-48,16,-28,-29,-49,-41,-42,-43,-44,-45,-46,16,-71,-72,-83,-84,-85,-86,-104,-105,-106,16,16,16,-47,-30,-31,-50,16,16,-107,-108,-109,16,16,16,16,-110,16,16,-73,-87,16,-96,-74,-75,-81,-88,-92,-95,-94,-80,-91,-90,-93,-103,-89,]),'CHAR':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,91,93,95,96,101,130,131,132,133,134,145,146,147,171,186,233,243,246,249,269,277,287,288,295,296,298,301,304,309,310,312,313,314,317,],[17,17,-21,17,-48,17,-28,-29,-49,-41,-42,-43,-44,-45,-46,17,-71,-72,-83,-84,-85,-86,-104,-105,-106,17,17,17,-47,-30,-31,-50,17,17,-107,-108,-109,17,17,17,17,-110,17,17,-73,-87,17,-96,-74,-75,-81,-88,-92,-95,-94,-80,-91,-90,-93,-103,-89,]),'FLOAT':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,91,93,95,96,101,130,131,132,133,134,145,146,147,171,186,233,243,246,249,269,277,287,288,295,296,298,301,304,309,310,312,313,314,317,],[18,18,-21,18,-48,18,-28,-29,-49,-41,-42,-43,-44,-45,-46,18,-71,-72,-83,-84,-85,-86,-104,-105,-106,18,18,18,-47,-30,-31,-50,18,18,-107,-108,-109,18,18,18,18,-110,18,18,-73,-87,18,-96,-74,-75,-81,-88,-92,-95,-94,-80,-91,-90,-93,-103,-89,]),'DOUBLE':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,91,93,95,96,101,130,131,132,133,134,145,146,147,171,186,233,243,246,249,269,277,287,288,295,296,298,301,304,309,310,312,313,314,317,],[19,19,-21,19,-48,19,-28,-29,-49,-41,-42,-43,-44,-45,-46,19,-71,-72,-83,-84,-85,-86,-104,-105,-106,19,19,19,-47,-30,-31,-50,19,19,-107,-108,-109,19,19,19,19,-110,19,19,-73,-87,19,-96,-74,-75,-81,-88,-92,-95,-94,-80,-91,-90,-93,-103,-89,]),'DECIMAL':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,91,93,95,96,101,130,131,132,133,134,145,146,147,171,186,233,243,246,249,269,277,287,288,295,296,298,301,304,309,310,312,313,314,317,],[20,20,-21,20,-48,20,-28,-29,-49,-41,-42,-43,-44,-45,-46,20,-71,-72,-83,-84,-85,-86,-104,-105,-106,20,20,20,-47,-30,-31,-50,20,20,-107,-108,-109,20,20,20,20,-110,20,20,-73,-87,20,-96,-74,-75,-81,-88,-92,-95,-94,-80,-91,-90,-93,-103,-89,]),'$end':([1,2,21,22,27,93,],[0,-1,-2,-21,-48,-47,]),'LBRACE':([3,23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,93,95,96,101,132,133,134,150,186,198,203,226,227,237,246,249,254,263,265,269,274,276,277,280,287,288,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[23,23,-48,23,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,23,-47,-30,-31,-50,-107,-108,-109,-23,-110,-22,23,248,23,262,-73,-87,23,262,23,23,23,23,-96,23,-74,-75,-81,-88,23,-92,23,-95,23,-94,23,-80,-91,23,-90,-93,-103,-89,]),'DOT':([5,9,52,53,55,56,66,70,75,76,77,78,79,80,81,82,83,84,85,86,87,92,110,115,116,117,118,129,137,138,158,187,190,235,237,239,240,241,242,261,263,282,286,306,],[-3,25,-128,-135,-133,-134,-3,139,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,139,-128,-133,-134,-135,-125,-67,-68,-126,-129,-127,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'LPAREN':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,52,53,55,56,59,60,61,62,63,64,65,66,69,70,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,93,95,96,101,102,110,115,116,117,118,126,127,129,132,133,134,136,137,138,140,141,144,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,181,183,186,187,190,191,200,203,227,228,229,230,235,236,237,239,240,241,242,246,247,249,251,254,257,259,261,263,265,269,270,274,275,276,277,278,280,282,286,287,288,292,295,296,297,298,300,301,303,304,305,306,308,309,310,311,312,313,314,317,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,60,91,-48,60,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,-128,-135,-133,-134,102,60,126,127,60,130,131,-125,60,136,60,60,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,145,146,147,-4,-47,-30,-31,-50,60,136,-128,-133,-134,-135,60,60,-125,-107,-108,-109,60,-67,-68,191,60,60,60,60,-126,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,228,60,-110,-129,-127,60,60,60,60,60,60,60,-130,60,-58,-131,-136,-137,-138,-73,60,-87,60,60,60,60,-59,-60,60,60,60,60,60,60,-96,60,60,-62,-61,-74,-75,147,-81,-88,60,-92,60,-95,60,-94,60,-63,60,-80,-91,60,-90,-93,-103,-89,]),'RPAREN':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,52,53,54,55,56,57,58,66,75,76,77,78,79,80,81,82,83,84,85,86,87,91,92,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,136,137,138,142,143,149,156,158,179,180,187,188,189,190,191,192,194,195,196,197,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,230,235,237,238,239,240,241,242,250,251,253,255,256,257,260,261,263,264,266,273,275,279,281,282,286,299,302,306,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-51,-52,-53,-54,-55,-56,-57,-3,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,150,-4,157,-178,158,-145,-146,-147,-149,-141,-142,-143,-151,-153,-128,-133,-134,-135,-155,-157,-159,-162,-168,-171,-174,-125,187,-67,-68,-69,-70,198,203,-126,226,227,-129,235,-111,-127,237,-179,240,241,242,-24,-144,-150,-178,-152,-154,-156,-158,-160,-161,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,254,-130,-58,263,-131,-136,-137,-138,272,274,276,-100,-101,280,-112,-59,-60,-25,-148,297,300,303,305,-62,-61,311,-102,-63,]),'LT':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,92,104,110,111,112,115,116,117,118,122,123,124,125,129,137,138,142,143,158,187,190,204,207,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-178,-141,-142,-143,-128,-133,-134,-135,167,-168,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,167,167,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'GT':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,92,104,110,111,112,115,116,117,118,122,123,124,125,129,137,138,142,143,158,187,190,204,207,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-178,-141,-142,-143,-128,-133,-134,-135,168,-168,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,168,168,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'LEQ':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,92,104,110,111,112,115,116,117,118,122,123,124,125,129,137,138,142,143,158,187,190,204,207,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-178,-141,-142,-143,-128,-133,-134,-135,169,-168,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,169,169,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'GEQ':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,92,104,110,111,112,115,116,117,118,122,123,124,125,129,137,138,142,143,158,187,190,204,207,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-178,-141,-142,-143,-128,-133,-134,-135,170,-168,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,170,170,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'IS':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,92,104,110,111,112,115,116,117,118,122,123,124,125,129,137,138,142,143,158,187,190,204,207,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-178,-141,-142,-143,-128,-133,-134,-135,171,-168,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,171,171,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'EQEQUAL':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,92,104,110,111,112,115,116,117,118,121,122,123,124,125,129,137,138,142,143,158,187,190,204,207,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-178,-141,-142,-143,-128,-133,-134,-135,165,-162,-168,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,165,-160,-161,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'NOTEQUAL':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,92,104,110,111,112,115,116,117,118,121,122,123,124,125,129,137,138,142,143,158,187,190,204,207,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-178,-141,-142,-143,-128,-133,-134,-135,166,-162,-168,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,166,-160,-161,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'AMPER':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,92,104,110,111,112,115,116,117,118,120,121,122,123,124,125,129,137,138,142,143,158,187,190,204,207,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-178,-141,-142,-143,-128,-133,-134,-135,164,-159,-162,-168,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,164,-158,-160,-161,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'CIRCUMFLEX':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,92,104,110,111,112,115,116,117,118,119,120,121,122,123,124,125,129,137,138,142,143,158,187,190,204,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-178,-141,-142,-143,-128,-133,-134,-135,163,-157,-159,-162,-168,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,163,-156,-158,-160,-161,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'PIPE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,92,104,110,111,112,114,115,116,117,118,119,120,121,122,123,124,125,129,137,138,142,143,158,187,190,204,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-178,-141,-142,-143,162,-128,-133,-134,-135,-155,-157,-159,-162,-168,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,162,-154,-156,-158,-160,-161,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'AMPERAMPER':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,92,104,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,137,138,142,143,158,187,190,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-178,-141,-142,-143,161,-153,-128,-133,-134,-135,-155,-157,-159,-162,-168,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,161,-178,-152,-154,-156,-158,-160,-161,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'HOOK':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,92,104,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,137,138,142,143,158,187,190,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-178,159,-141,-142,-143,-151,-153,-128,-133,-134,-135,-155,-157,-159,-162,-168,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,-150,-178,-152,-154,-156,-158,-160,-161,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'PIPEPIPE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,92,104,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,137,138,142,143,158,187,190,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-178,160,-141,-142,-143,-151,-153,-128,-133,-134,-135,-155,-157,-159,-162,-168,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,-150,-178,-152,-154,-156,-158,-160,-161,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'SEMI':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,67,68,69,75,76,77,78,79,80,81,82,83,84,85,86,87,92,93,95,96,98,99,100,101,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,130,132,133,134,135,137,138,142,143,151,152,158,182,183,184,186,187,190,192,201,202,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,227,229,231,232,235,237,239,240,241,242,244,245,246,249,252,254,258,261,263,265,266,269,272,274,276,277,280,282,286,287,288,295,296,297,298,300,301,303,304,305,306,309,310,311,312,313,314,317,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,32,-48,32,-28,-29,95,-49,96,-41,-42,-43,-44,-45,-46,101,-71,-72,-83,-84,-85,-86,-104,-105,-106,-51,-52,-53,-54,-55,-56,-57,32,132,133,134,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-47,-30,-31,-36,-37,-39,-50,-178,-145,-146,-147,-149,-141,-142,-143,-151,-153,-128,-133,-134,-135,-155,-157,-159,-162,-168,-171,-174,-125,183,-107,-108,-109,186,-67,-68,-69,-70,-32,-33,-126,229,230,-97,-110,-129,-127,-179,-38,-40,32,-144,-150,-178,-152,-154,-156,-158,-160,-161,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,32,251,257,-99,-130,-58,-131,-136,-137,-138,-34,-35,-73,-87,275,32,-98,-59,-60,32,-148,32,296,32,32,-96,32,-62,-61,-74,-75,-81,-88,32,-92,32,-95,32,-94,32,-63,-80,-91,32,-90,-93,-103,-89,]),'COMMA':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,52,53,54,55,56,57,58,75,76,77,78,79,80,81,82,83,84,85,86,87,92,98,99,100,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,137,138,142,143,152,158,184,187,189,190,192,197,201,202,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,245,256,261,263,266,282,284,286,306,316,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-51,-52,-53,-54,-55,-56,-57,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-36,154,-39,-178,-145,-146,-147,-149,-141,-142,-143,-151,-153,-128,-133,-134,-135,-155,-157,-159,-162,-168,-171,-174,-125,-67,-68,-69,-70,199,-126,233,-129,236,-127,-179,243,-38,-40,-144,-150,-178,-152,-154,-156,-158,-160,-161,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-35,278,-59,-60,-148,-62,307,-61,-63,-66,]),'RSB':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,75,76,77,78,79,80,81,82,83,84,85,86,87,92,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,137,138,142,143,158,187,190,192,193,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,266,282,286,306,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-178,-145,-146,-147,-149,-141,-142,-143,-151,-153,-128,-133,-134,-135,-155,-157,-159,-162,-168,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-179,239,-144,-150,-178,-152,-154,-156,-158,-160,-161,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-148,-62,-61,-63,]),'COLON':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,75,76,77,78,79,80,81,82,83,84,85,86,87,92,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,137,138,142,143,158,187,190,192,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,266,271,282,286,292,293,294,306,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-178,-145,-146,-147,-149,-141,-142,-143,-151,-153,-128,-133,-134,-135,-155,-157,-159,-162,-168,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-179,-144,247,-150,-178,-152,-154,-156,-158,-160,-161,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-148,295,-62,-61,295,309,-82,-63,]),'RBRACE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,26,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,75,76,77,78,79,80,81,82,83,84,85,86,87,92,93,94,95,96,101,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,132,133,134,137,138,142,143,158,186,187,190,192,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,235,237,239,240,241,242,246,249,261,262,263,266,267,268,277,282,283,284,286,287,288,289,290,291,296,298,301,304,306,310,312,313,314,315,316,317,],[-3,-5,-6,-7,-8,-9,-10,-12,-13,-14,-15,-16,-17,-18,-19,-20,27,93,-48,-26,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-4,-47,-27,-30,-31,-50,-178,-145,-146,-147,-149,-141,-142,-143,-151,-153,-128,-133,-134,-135,-155,-157,-159,-162,-168,-171,-174,-125,-107,-108,-109,-67,-68,-69,-70,-126,-110,-129,-127,-179,-144,-150,-178,-152,-154,-156,-158,-160,-161,-163,-164,-165,-166,-167,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-73,-87,-59,282,-60,-148,288,-76,-96,-62,306,-64,-61,-74,-75,-77,-78,-79,-88,-92,-95,-94,-63,-91,-90,-93,-103,-65,-66,-89,]),'CONST':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,93,95,96,101,132,133,134,186,246,249,269,277,287,288,295,296,298,301,304,309,310,312,313,314,317,],[40,-48,40,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,-47,-30,-31,-50,-107,-108,-109,-110,-73,-87,40,-96,-74,-75,-81,-88,-92,-95,-94,-80,-91,-90,-93,-103,-89,]),'IF':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,93,95,96,101,132,133,134,186,203,227,246,249,254,265,269,274,276,277,280,287,288,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[59,-48,59,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,59,-47,-30,-31,-50,-107,-108,-109,-110,59,59,-73,-87,59,59,59,59,59,-96,59,-74,-75,-81,-88,59,-92,59,-95,59,-94,59,-80,-91,59,-90,-93,-103,-89,]),'SWITCH':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,93,95,96,101,132,133,134,186,203,227,246,249,254,265,269,274,276,277,280,287,288,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[61,-48,61,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,61,-47,-30,-31,-50,-107,-108,-109,-110,61,61,-73,-87,61,61,61,61,61,-96,61,-74,-75,-81,-88,61,-92,61,-95,61,-94,61,-80,-91,61,-90,-93,-103,-89,]),'WHILE':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,93,95,96,101,128,132,133,134,186,203,227,246,249,254,265,269,274,276,277,280,287,288,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[62,-48,62,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,62,-47,-30,-31,-50,181,-107,-108,-109,-110,62,62,-73,-87,62,62,62,62,62,-96,62,-74,-75,-81,-88,62,-92,62,-95,62,-94,62,-80,-91,62,-90,-93,-103,-89,]),'DO':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,93,95,96,101,132,133,134,186,203,227,246,249,254,265,269,274,276,277,280,287,288,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[63,-48,63,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,63,-47,-30,-31,-50,-107,-108,-109,-110,63,63,-73,-87,63,63,63,63,63,-96,63,-74,-75,-81,-88,63,-92,63,-95,63,-94,63,-80,-91,63,-90,-93,-103,-89,]),'FOR':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,93,95,96,101,132,133,134,186,203,227,246,249,254,265,269,274,276,277,280,287,288,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[64,-48,64,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,64,-47,-30,-31,-50,-107,-108,-109,-110,64,64,-73,-87,64,64,64,64,64,-96,64,-74,-75,-81,-88,64,-92,64,-95,64,-94,64,-80,-91,64,-90,-93,-103,-89,]),'FOREACH':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,93,95,96,101,132,133,134,186,203,227,246,249,254,265,269,274,276,277,280,287,288,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[65,-48,65,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,65,-47,-30,-31,-50,-107,-108,-109,-110,65,65,-73,-87,65,65,65,65,65,-96,65,-74,-75,-81,-88,65,-92,65,-95,65,-94,65,-80,-91,65,-90,-93,-103,-89,]),'BREAK':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,93,95,96,101,132,133,134,186,203,227,246,249,254,265,269,274,276,277,280,287,288,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[67,-48,67,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,67,-47,-30,-31,-50,-107,-108,-109,-110,67,67,-73,-87,67,67,67,67,67,-96,67,-74,-75,-81,-88,67,-92,67,-95,67,-94,67,-80,-91,67,-90,-93,-103,-89,]),'CONTINUE':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,93,95,96,101,132,133,134,186,203,227,246,249,254,265,269,274,276,277,280,287,288,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[68,-48,68,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,68,-47,-30,-31,-50,-107,-108,-109,-110,68,68,-73,-87,68,68,68,68,68,-96,68,-74,-75,-81,-88,68,-92,68,-95,68,-94,68,-80,-91,68,-90,-93,-103,-89,]),'RETURN':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,93,95,96,101,132,133,134,186,203,227,246,249,254,265,269,274,276,277,280,287,288,295,296,297,298,300,301,303,304,305,309,310,311,312,313,314,317,],[69,-48,69,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,69,-47,-30,-31,-50,-107,-108,-109,-110,69,69,-73,-87,69,69,69,69,69,-96,69,-74,-75,-81,-88,69,-92,69,-95,69,-94,69,-80,-91,69,-90,-93,-103,-89,]),'NEW':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,93,95,96,101,102,126,127,132,133,134,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,191,200,203,227,228,229,230,236,246,247,249,251,254,257,259,265,269,270,274,275,276,277,278,280,287,288,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[71,-48,71,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,71,71,71,71,71,-47,-30,-31,-50,71,71,71,-107,-108,-109,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-110,71,71,71,71,71,71,71,71,-73,71,-87,71,71,71,71,71,71,71,71,71,71,-96,71,71,-74,-75,-81,-88,71,-92,71,-95,71,-94,71,71,-80,-91,71,-90,-93,-103,-89,]),'PLUSPLUS':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,52,53,55,56,60,63,66,69,70,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,95,96,101,102,110,115,116,117,118,126,127,129,132,133,134,136,137,138,141,144,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,187,190,191,200,203,227,228,229,230,235,236,237,239,240,241,242,246,247,249,251,254,257,259,261,263,265,269,270,274,275,276,277,278,280,282,286,287,288,295,296,297,298,300,301,303,304,305,306,308,309,310,311,312,313,314,317,],[73,-48,73,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,-128,-135,-133,-134,73,73,-125,73,137,73,73,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-47,-30,-31,-50,73,137,-128,-133,-134,-135,73,73,-125,-107,-108,-109,73,-67,-68,73,73,73,73,-126,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-110,-129,-127,73,73,73,73,73,73,73,-130,73,-58,-131,-136,-137,-138,-73,73,-87,73,73,73,73,-59,-60,73,73,73,73,73,73,-96,73,73,-62,-61,-74,-75,-81,-88,73,-92,73,-95,73,-94,73,-63,73,-80,-91,73,-90,-93,-103,-89,]),'MINUSMINUS':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,52,53,55,56,60,63,66,69,70,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,93,95,96,101,102,110,115,116,117,118,126,127,129,132,133,134,136,137,138,141,144,155,157,158,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,187,190,191,200,203,227,228,229,230,235,236,237,239,240,241,242,246,247,249,251,254,257,259,261,263,265,269,270,274,275,276,277,278,280,282,286,287,288,295,296,297,298,300,301,303,304,305,306,308,309,310,311,312,313,314,317,],[74,-48,74,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,-128,-135,-133,-134,74,74,-125,74,138,74,74,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-47,-30,-31,-50,74,138,-128,-133,-134,-135,74,74,-125,-107,-108,-109,74,-67,-68,74,74,74,74,-126,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-110,-129,-127,74,74,74,74,74,74,74,-130,74,-58,-131,-136,-137,-138,-73,74,-87,74,74,74,74,-59,-60,74,74,74,74,74,74,-96,74,74,-62,-61,-74,-75,-81,-88,74,-92,74,-95,74,-94,74,-63,74,-80,-91,74,-90,-93,-103,-89,]),'TRUE':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,93,95,96,101,102,126,127,132,133,134,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,191,200,203,227,228,229,230,236,246,247,249,251,254,257,259,265,269,270,274,275,276,277,278,280,287,288,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[76,-48,76,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,76,76,76,76,76,-47,-30,-31,-50,76,76,76,-107,-108,-109,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-110,76,76,76,76,76,76,76,76,-73,76,-87,76,76,76,76,76,76,76,76,76,76,-96,76,76,-74,-75,-81,-88,76,-92,76,-95,76,-94,76,76,-80,-91,76,-90,-93,-103,-89,]),'FALSE':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,93,95,96,101,102,126,127,132,133,134,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,191,200,203,227,228,229,230,236,246,247,249,251,254,257,259,265,269,270,274,275,276,277,278,280,287,288,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[77,-48,77,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,77,77,77,77,77,-47,-30,-31,-50,77,77,77,-107,-108,-109,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-110,77,77,77,77,77,77,77,77,-73,77,-87,77,77,77,77,77,77,77,77,77,77,-96,77,77,-74,-75,-81,-88,77,-92,77,-95,77,-94,77,77,-80,-91,77,-90,-93,-103,-89,]),'NULL':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,93,95,96,101,102,126,127,132,133,134,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,191,200,203,227,228,229,230,236,246,247,249,251,254,257,259,265,269,270,274,275,276,277,278,280,287,288,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[78,-48,78,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,78,78,78,78,78,-47,-30,-31,-50,78,78,78,-107,-108,-109,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-110,78,78,78,78,78,78,78,78,-73,78,-87,78,78,78,78,78,78,78,78,78,78,-96,78,78,-74,-75,-81,-88,78,-92,78,-95,78,-94,78,78,-80,-91,78,-90,-93,-103,-89,]),'INTNUM':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,93,95,96,101,102,126,127,132,133,134,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,191,200,203,227,228,229,230,236,246,247,249,251,254,257,259,265,269,270,274,275,276,277,278,280,287,288,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[79,-48,79,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,79,79,79,79,79,-47,-30,-31,-50,79,79,79,-107,-108,-109,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-110,79,79,79,79,79,79,79,79,-73,79,-87,79,79,79,79,79,79,79,79,79,79,-96,79,79,-74,-75,-81,-88,79,-92,79,-95,79,-94,79,79,-80,-91,79,-90,-93,-103,-89,]),'HEXADECIMALNUM':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,93,95,96,101,102,126,127,132,133,134,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,191,200,203,227,228,229,230,236,246,247,249,251,254,257,259,265,269,270,274,275,276,277,278,280,287,288,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[80,-48,80,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,80,80,80,80,80,-47,-30,-31,-50,80,80,80,-107,-108,-109,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-110,80,80,80,80,80,80,80,80,-73,80,-87,80,80,80,80,80,80,80,80,80,80,-96,80,80,-74,-75,-81,-88,80,-92,80,-95,80,-94,80,80,-80,-91,80,-90,-93,-103,-89,]),'BINARYNUM':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,93,95,96,101,102,126,127,132,133,134,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,191,200,203,227,228,229,230,236,246,247,249,251,254,257,259,265,269,270,274,275,276,277,278,280,287,288,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[81,-48,81,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,81,81,81,81,81,-47,-30,-31,-50,81,81,81,-107,-108,-109,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-110,81,81,81,81,81,81,81,81,-73,81,-87,81,81,81,81,81,81,81,81,81,81,-96,81,81,-74,-75,-81,-88,81,-92,81,-95,81,-94,81,81,-80,-91,81,-90,-93,-103,-89,]),'FLOATNUM':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,93,95,96,101,102,126,127,132,133,134,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,191,200,203,227,228,229,230,236,246,247,249,251,254,257,259,265,269,270,274,275,276,277,278,280,287,288,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[82,-48,82,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,82,82,82,82,82,-47,-30,-31,-50,82,82,82,-107,-108,-109,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-110,82,82,82,82,82,82,82,82,-73,82,-87,82,82,82,82,82,82,82,82,82,82,-96,82,82,-74,-75,-81,-88,82,-92,82,-95,82,-94,82,82,-80,-91,82,-90,-93,-103,-89,]),'DOUBLENUM':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,93,95,96,101,102,126,127,132,133,134,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,191,200,203,227,228,229,230,236,246,247,249,251,254,257,259,265,269,270,274,275,276,277,278,280,287,288,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[83,-48,83,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,83,83,83,83,83,-47,-30,-31,-50,83,83,83,-107,-108,-109,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-110,83,83,83,83,83,83,83,83,-73,83,-87,83,83,83,83,83,83,83,83,83,83,-96,83,83,-74,-75,-81,-88,83,-92,83,-95,83,-94,83,83,-80,-91,83,-90,-93,-103,-89,]),'DECIMALNUM':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,93,95,96,101,102,126,127,132,133,134,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,191,200,203,227,228,229,230,236,246,247,249,251,254,257,259,265,269,270,274,275,276,277,278,280,287,288,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[84,-48,84,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,84,84,84,84,84,-47,-30,-31,-50,84,84,84,-107,-108,-109,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-110,84,84,84,84,84,84,84,84,-73,84,-87,84,84,84,84,84,84,84,84,84,84,-96,84,84,-74,-75,-81,-88,84,-92,84,-95,84,-94,84,84,-80,-91,84,-90,-93,-103,-89,]),'CHARLITERAL':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,93,95,96,101,102,126,127,132,133,134,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,191,200,203,227,228,229,230,236,246,247,249,251,254,257,259,265,269,270,274,275,276,277,278,280,287,288,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[85,-48,85,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,85,85,85,85,85,-47,-30,-31,-50,85,85,85,-107,-108,-109,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-110,85,85,85,85,85,85,85,85,-73,85,-87,85,85,85,85,85,85,85,85,85,85,-96,85,85,-74,-75,-81,-88,85,-92,85,-95,85,-94,85,85,-80,-91,85,-90,-93,-103,-89,]),'STRINGLITERAL':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,93,95,96,101,102,126,127,132,133,134,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,191,200,203,227,228,229,230,236,246,247,249,251,254,257,259,265,269,270,274,275,276,277,278,280,287,288,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[86,-48,86,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,86,86,86,86,86,-47,-30,-31,-50,86,86,86,-107,-108,-109,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-110,86,86,86,86,86,86,86,86,-73,86,-87,86,86,86,86,86,86,86,86,86,86,-96,86,86,-74,-75,-81,-88,86,-92,86,-95,86,-94,86,86,-80,-91,86,-90,-93,-103,-89,]),'THIS':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,93,95,96,101,102,126,127,132,133,134,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,191,200,203,227,228,229,230,236,246,247,249,251,254,257,259,265,269,270,274,275,276,277,278,280,287,288,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[87,-48,87,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,87,87,87,87,87,-47,-30,-31,-50,87,87,87,-107,-108,-109,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-110,87,87,87,87,87,87,87,87,-73,87,-87,87,87,87,87,87,87,87,87,87,87,-96,87,87,-74,-75,-81,-88,87,-92,87,-95,87,-94,87,87,-80,-91,87,-90,-93,-103,-89,]),'TYPEOF':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,93,95,96,101,102,126,127,132,133,134,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,191,200,203,227,228,229,230,236,246,247,249,251,254,257,259,265,269,270,274,275,276,277,278,280,287,288,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[88,-48,88,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,88,88,88,88,88,-47,-30,-31,-50,88,88,88,-107,-108,-109,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-110,88,88,88,88,88,88,88,88,-73,88,-87,88,88,88,88,88,88,88,88,88,88,-96,88,88,-74,-75,-81,-88,88,-92,88,-95,88,-94,88,88,-80,-91,88,-90,-93,-103,-89,]),'SIZEOF':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,93,95,96,101,102,126,127,132,133,134,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,191,200,203,227,228,229,230,236,246,247,249,251,254,257,259,265,269,270,274,275,276,277,278,280,287,288,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[89,-48,89,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,89,89,89,89,89,-47,-30,-31,-50,89,89,89,-107,-108,-109,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-110,89,89,89,89,89,89,89,89,-73,89,-87,89,89,89,89,89,89,89,89,89,89,-96,89,89,-74,-75,-81,-88,89,-92,89,-95,89,-94,89,89,-80,-91,89,-90,-93,-103,-89,]),'DEFAULT':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,93,94,95,96,101,102,126,127,132,133,134,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,186,191,200,203,227,228,229,230,236,246,247,248,249,251,254,257,259,265,268,269,270,274,275,276,277,278,280,287,288,290,291,295,296,297,298,300,301,303,304,305,308,309,310,311,312,313,314,317,],[90,-48,90,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,90,90,90,90,90,-47,-27,-30,-31,-50,90,90,90,-107,-108,-109,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-110,90,90,90,90,90,90,90,90,-73,90,271,-87,90,90,90,90,90,271,292,90,90,90,90,-96,90,90,-74,-75,-78,-79,-81,-88,90,-92,90,-95,90,-94,90,90,-80,-91,90,-90,-93,-103,-89,]),'CASE':([27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,93,94,95,96,101,132,133,134,186,246,248,249,268,269,277,287,288,290,291,295,296,298,301,304,309,310,312,313,314,317,],[-48,-26,-28,-29,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,-47,-27,-30,-31,-50,-107,-108,-109,-110,-73,270,-87,270,270,-96,-74,-75,-78,-79,-81,-88,-92,-95,-94,-80,-91,-90,-93,-103,-89,]),'ELSE':([27,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,93,101,132,133,134,186,246,249,277,287,288,296,298,301,304,310,312,313,314,317,],[-48,-49,-41,-42,-43,-44,-45,-46,-71,-72,-83,-84,-85,-86,-104,-105,-106,-47,-50,-107,-108,-109,-110,265,-87,-96,-74,-75,-88,-92,-95,-94,-91,-90,-93,-103,-89,]),'LSB':([52,53,55,56,66,75,76,77,78,79,80,81,82,83,84,85,86,87,115,116,117,118,129,137,138,158,187,190,235,237,239,240,241,242,261,263,282,286,306,],[-128,-135,-133,-134,-125,144,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-128,-133,-134,-135,-125,-67,-68,-126,-129,-127,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'EQUAL':([52,53,55,56,57,58,66,70,72,75,76,77,78,79,80,81,82,83,84,85,86,87,100,104,110,111,112,115,116,117,118,129,137,138,142,143,153,158,187,190,204,235,237,239,240,241,242,261,263,282,285,286,306,],[-128,-135,-133,-134,-142,-143,-125,-141,141,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,155,141,-141,-142,-143,-128,-133,-134,-135,-125,-67,-68,-69,-70,200,-126,-129,-127,-144,-130,-58,-131,-136,-137,-138,-59,-60,-62,308,-61,-63,]),'STAR':([66,75,76,77,78,79,80,81,82,83,84,85,86,87,104,110,111,112,115,116,117,118,125,129,137,138,142,143,158,187,190,204,207,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-178,-141,-142,-143,-128,-133,-134,-135,176,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,176,176,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'SLASH':([66,75,76,77,78,79,80,81,82,83,84,85,86,87,104,110,111,112,115,116,117,118,125,129,137,138,142,143,158,187,190,204,207,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-178,-141,-142,-143,-128,-133,-134,-135,177,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,177,177,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'PERCENT':([66,75,76,77,78,79,80,81,82,83,84,85,86,87,104,110,111,112,115,116,117,118,125,129,137,138,142,143,158,187,190,204,207,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-178,-141,-142,-143,-128,-133,-134,-135,178,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,178,178,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'PLUS':([66,75,76,77,78,79,80,81,82,83,84,85,86,87,104,110,111,112,115,116,117,118,124,125,129,137,138,142,143,158,187,190,204,207,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-178,-141,-142,-143,-128,-133,-134,-135,174,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,174,174,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'MINUS':([66,75,76,77,78,79,80,81,82,83,84,85,86,87,104,110,111,112,115,116,117,118,124,125,129,137,138,142,143,158,187,190,204,207,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-178,-141,-142,-143,-128,-133,-134,-135,175,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,175,175,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'LSHIFT':([66,75,76,77,78,79,80,81,82,83,84,85,86,87,104,110,111,112,115,116,117,118,123,124,125,129,137,138,142,143,158,187,190,204,207,214,215,216,217,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-178,-141,-142,-143,-128,-133,-134,-135,172,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,172,172,172,172,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'RSHIFT':([66,75,76,77,78,79,80,81,82,83,84,85,86,87,104,110,111,112,115,116,117,118,123,124,125,129,137,138,142,143,158,187,190,204,207,214,215,216,217,219,220,221,222,223,224,225,235,237,239,240,241,242,261,263,282,286,306,],[-125,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-132,-178,-141,-142,-143,-128,-133,-134,-135,173,-171,-174,-125,-67,-68,-69,-70,-126,-129,-127,-144,-178,173,173,173,173,-169,-170,-172,-173,-175,-176,-177,-130,-58,-131,-136,-137,-138,-59,-60,-62,-61,-63,]),'IN':([234,],[259,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,21,]),'func_declaration':([0,2,],[2,2,]),'signature':([0,2,],[3,3,]),'type':([0,2,23,28,40,60,71,91,130,131,145,147,171,233,243,269,],[4,4,41,41,97,103,140,148,41,185,194,196,218,41,148,41,]),'class_type':([0,2,23,28,40,60,71,91,130,131,145,147,171,233,243,269,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'interface_type':([0,2,23,28,40,60,71,91,130,131,145,147,171,233,243,269,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'value_type':([0,2,23,28,40,60,71,91,130,131,145,146,147,171,233,243,269,],[8,8,8,8,8,8,8,8,8,8,8,195,8,8,8,8,8,]),'type_name':([0,2,23,28,40,60,71,91,130,131,145,147,171,233,243,269,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'integral_type':([0,2,23,28,40,60,71,91,130,131,145,146,147,171,233,243,269,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'floating_point_type':([0,2,23,28,40,60,71,91,130,131,145,146,147,171,233,243,269,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'block':([3,23,28,63,203,227,254,265,269,274,276,280,297,300,303,305,311,],[22,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'statement_list':([23,28,269,],[26,94,290,]),'statement':([23,28,269,],[28,28,28,]),'declaration_statement':([23,28,269,],[29,29,29,]),'embedded_statement':([23,28,63,203,227,254,265,269,274,276,280,297,300,303,305,311,],[30,30,128,246,249,277,287,30,298,301,304,310,312,313,314,317,]),'const_declaration':([23,28,269,],[31,31,31,]),'var_declaration':([23,28,130,233,269,],[33,33,184,184,33,]),'empty_statement':([23,28,63,203,227,254,265,269,274,276,280,297,300,303,305,311,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'exp_statement':([23,28,63,203,227,254,265,269,274,276,280,297,300,303,305,311,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'selection_statement':([23,28,63,203,227,254,265,269,274,276,280,297,300,303,305,311,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'iteration_statement':([23,28,63,203,227,254,265,269,274,276,280,297,300,303,305,311,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'jump_statement':([23,28,63,203,227,254,265,269,274,276,280,297,300,303,305,311,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'statement_exp':([23,28,63,203,227,230,251,254,257,265,269,274,275,276,278,280,297,300,303,305,311,],[42,42,42,42,42,256,256,42,256,42,42,42,256,42,256,42,42,42,42,42,42,]),'if_statement':([23,28,63,203,227,254,265,269,274,276,280,297,300,303,305,311,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'switch_statement':([23,28,63,203,227,254,265,269,274,276,280,297,300,303,305,311,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'while_statement':([23,28,63,203,227,254,265,269,274,276,280,297,300,303,305,311,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'do_statement':([23,28,63,203,227,254,265,269,274,276,280,297,300,303,305,311,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'for_statement':([23,28,63,203,227,254,265,269,274,276,280,297,300,303,305,311,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'foreach_statement':([23,28,63,203,227,254,265,269,274,276,280,297,300,303,305,311,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'break_statement':([23,28,63,203,227,254,265,269,274,276,280,297,300,303,305,311,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'continue_statement':([23,28,63,203,227,254,265,269,274,276,280,297,300,303,305,311,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'return_statement':([23,28,63,203,227,254,265,269,274,276,280,297,300,303,305,311,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'invocation_exp':([23,28,60,63,69,73,74,102,126,127,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,191,200,203,227,228,229,230,236,247,251,254,257,259,265,269,270,274,275,276,278,280,297,300,303,305,308,311,],[52,52,115,52,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,52,52,115,115,52,115,115,52,52,52,115,52,52,115,52,52,52,52,52,52,52,52,52,115,52,]),'object_creation_exp':([23,28,60,63,69,73,74,102,126,127,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,191,200,203,227,228,229,230,236,247,251,254,257,259,265,269,270,274,275,276,278,280,297,300,303,305,308,311,],[53,53,118,53,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,53,53,118,118,53,118,118,53,53,53,118,53,53,118,53,53,53,53,53,53,53,53,53,118,53,]),'assignment':([23,28,60,63,69,102,126,127,136,141,144,155,159,183,191,200,203,227,228,229,230,236,247,251,254,257,259,265,269,270,274,275,276,278,280,297,300,303,305,308,311,],[54,54,107,54,107,107,107,107,107,107,107,107,107,107,107,107,54,54,107,107,54,107,107,54,54,54,107,54,54,107,54,54,54,54,54,54,54,54,54,107,54,]),'post_increment_exp':([23,28,60,63,69,73,74,102,126,127,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,191,200,203,227,228,229,230,236,247,251,254,257,259,265,269,270,274,275,276,278,280,297,300,303,305,308,311,],[55,55,116,55,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,55,55,116,116,55,116,116,55,55,55,116,55,55,116,55,55,55,55,55,55,55,55,55,116,55,]),'post_decrement_exp':([23,28,60,63,69,73,74,102,126,127,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,191,200,203,227,228,229,230,236,247,251,254,257,259,265,269,270,274,275,276,278,280,297,300,303,305,308,311,],[56,56,117,56,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,56,56,117,117,56,117,117,56,56,56,117,56,56,117,56,56,56,56,56,56,56,56,56,117,56,]),'pre_increment_exp':([23,28,60,63,69,73,74,102,126,127,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,191,200,203,227,228,229,230,236,247,251,254,257,259,265,269,270,274,275,276,278,280,297,300,303,305,308,311,],[57,57,111,57,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,57,57,111,111,57,111,111,57,57,57,111,57,57,111,57,57,57,57,57,57,57,57,57,111,57,]),'pre_decrement_exp':([23,28,60,63,69,73,74,102,126,127,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,191,200,203,227,228,229,230,236,247,251,254,257,259,265,269,270,274,275,276,278,280,297,300,303,305,308,311,],[58,58,112,58,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,58,58,112,112,58,112,112,58,58,58,112,58,58,112,58,58,58,58,58,58,58,58,58,112,58,]),'primary_exp':([23,28,60,63,69,73,74,102,126,127,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,191,200,203,227,228,229,230,236,247,251,254,257,259,265,269,270,274,275,276,278,280,297,300,303,305,308,311,],[70,70,110,70,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,70,70,110,110,70,110,110,70,70,70,110,70,70,110,70,70,70,70,70,70,70,70,70,110,70,]),'unary_exp':([23,28,60,63,69,73,74,102,126,127,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,191,200,203,227,228,229,230,236,247,251,254,257,259,265,269,270,274,275,276,278,280,297,300,303,305,308,311,],[72,72,104,72,104,142,143,104,104,104,104,104,104,104,204,104,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,223,224,225,104,104,104,72,72,104,104,72,104,104,72,72,72,104,72,72,104,72,72,72,72,72,72,72,72,72,104,72,]),'primary_no_array_creation_exp':([23,28,60,63,69,73,74,102,126,127,136,141,144,155,157,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,176,177,178,183,191,200,203,227,228,229,230,236,247,251,254,257,259,265,269,270,274,275,276,278,280,297,300,303,305,308,311,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'var_declarators':([41,154,],[98,201,]),'var_declarator':([41,154,],[99,99,]),'exp':([60,69,102,126,127,136,141,144,155,159,183,191,200,228,229,236,247,259,270,308,],[105,135,156,179,180,189,192,193,202,205,232,189,245,250,232,189,266,281,294,316,]),'non_assignment_exp':([60,69,102,126,127,136,141,144,155,159,183,191,200,228,229,236,247,259,270,308,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'conditional_exp':([60,69,102,126,127,136,141,144,155,159,183,191,200,228,229,236,247,259,270,308,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'conditional_or_exp':([60,69,102,126,127,136,141,144,155,159,183,191,200,228,229,236,247,259,270,308,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'conditional_and_exp':([60,69,102,126,127,136,141,144,155,159,160,183,191,200,228,229,236,247,259,270,308,],[113,113,113,113,113,113,113,113,113,113,206,113,113,113,113,113,113,113,113,113,113,]),'inclusive_or_exp':([60,69,102,126,127,136,141,144,155,159,160,161,183,191,200,228,229,236,247,259,270,308,],[114,114,114,114,114,114,114,114,114,114,114,208,114,114,114,114,114,114,114,114,114,114,]),'exclusive_or_exp':([60,69,102,126,127,136,141,144,155,159,160,161,162,183,191,200,228,229,236,247,259,270,308,],[119,119,119,119,119,119,119,119,119,119,119,119,209,119,119,119,119,119,119,119,119,119,119,]),'and_exp':([60,69,102,126,127,136,141,144,155,159,160,161,162,163,183,191,200,228,229,236,247,259,270,308,],[120,120,120,120,120,120,120,120,120,120,120,120,120,210,120,120,120,120,120,120,120,120,120,120,]),'equality_exp':([60,69,102,126,127,136,141,144,155,159,160,161,162,163,164,183,191,200,228,229,236,247,259,270,308,],[121,121,121,121,121,121,121,121,121,121,121,121,121,121,211,121,121,121,121,121,121,121,121,121,121,]),'relational_exp':([60,69,102,126,127,136,141,144,155,159,160,161,162,163,164,165,166,183,191,200,228,229,236,247,259,270,308,],[122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,212,213,122,122,122,122,122,122,122,122,122,122,]),'shift_exp':([60,69,102,126,127,136,141,144,155,159,160,161,162,163,164,165,166,167,168,169,170,183,191,200,228,229,236,247,259,270,308,],[123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,214,215,216,217,123,123,123,123,123,123,123,123,123,123,]),'additive_exp':([60,69,102,126,127,136,141,144,155,159,160,161,162,163,164,165,166,167,168,169,170,172,173,183,191,200,228,229,236,247,259,270,308,],[124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,219,220,124,124,124,124,124,124,124,124,124,124,]),'multiplicative_exp':([60,69,102,126,127,136,141,144,155,159,160,161,162,163,164,165,166,167,168,169,170,172,173,174,175,183,191,200,228,229,236,247,259,270,308,],[125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,221,222,125,125,125,125,125,125,125,125,125,125,]),'param_list':([91,243,],[149,264,]),'const_declarators':([97,199,],[151,244,]),'const_declarator':([97,199,],[152,152,]),'for_initializer':([130,233,],[182,258,]),'arg_list':([136,191,236,],[188,238,260,]),'for_condition':([183,229,],[231,252,]),'for_iterator':([230,251,257,275,],[253,273,279,299,]),'statement_exp_list':([230,251,257,275,278,],[255,255,255,255,302,]),'object_initializer':([237,263,],[261,286,]),'switch_body':([248,268,],[267,289,]),'switch_section':([248,268,269,],[268,268,291,]),'switch_label':([248,268,269,],[269,269,269,]),'member_initializer_list':([262,307,],[283,315,]),'member_initializer':([262,307,],[284,284,]),'pattern':([270,],[293,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> func_declaration','program',1,'p_program','LanguageParser.py',9),
  ('program -> func_declaration program','program',2,'p_program','LanguageParser.py',10),
  ('type_name -> ID','type_name',1,'p_type_name','LanguageParser.py',17),
  ('type_name -> type_name DOT ID','type_name',3,'p_type_name','LanguageParser.py',18),
  ('type -> class_type','type',1,'p_type','LanguageParser.py',25),
  ('type -> interface_type','type',1,'p_type','LanguageParser.py',26),
  ('type -> value_type','type',1,'p_type','LanguageParser.py',27),
  ('class_type -> type_name','class_type',1,'p_class_type','LanguageParser.py',36),
  ('class_type -> OBJECT','class_type',1,'p_class_type','LanguageParser.py',37),
  ('class_type -> STRING','class_type',1,'p_class_type','LanguageParser.py',38),
  ('interface_type -> type_name','interface_type',1,'p_interface_type','LanguageParser.py',47),
  ('value_type -> integral_type','value_type',1,'p_value_type','LanguageParser.py',51),
  ('value_type -> floating_point_type','value_type',1,'p_value_type','LanguageParser.py',52),
  ('value_type -> BOOL','value_type',1,'p_value_type','LanguageParser.py',53),
  ('integral_type -> INT','integral_type',1,'p_integral_type_int','LanguageParser.py',62),
  ('integral_type -> LONG','integral_type',1,'p_integral_type_long','LanguageParser.py',66),
  ('integral_type -> CHAR','integral_type',1,'p_integral_type_char','LanguageParser.py',70),
  ('floating_point_type -> FLOAT','floating_point_type',1,'p_integral_type_float','LanguageParser.py',74),
  ('floating_point_type -> DOUBLE','floating_point_type',1,'p_integral_type_double','LanguageParser.py',78),
  ('floating_point_type -> DECIMAL','floating_point_type',1,'p_integral_type_decimal','LanguageParser.py',82),
  ('func_declaration -> signature block','func_declaration',2,'p_func_declaration','LanguageParser.py',86),
  ('signature -> type ID LPAREN param_list RPAREN','signature',5,'p_signature','LanguageParser.py',90),
  ('signature -> type ID LPAREN RPAREN','signature',4,'p_signature','LanguageParser.py',91),
  ('param_list -> type ID','param_list',2,'p_param_list','LanguageParser.py',98),
  ('param_list -> type ID COMMA param_list','param_list',4,'p_param_list','LanguageParser.py',99),
  ('statement_list -> statement','statement_list',1,'p_statement_list','LanguageParser.py',106),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','LanguageParser.py',107),
  ('statement -> declaration_statement','statement',1,'p_statement','LanguageParser.py',114),
  ('statement -> embedded_statement','statement',1,'p_statement','LanguageParser.py',115),
  ('declaration_statement -> const_declaration SEMI','declaration_statement',2,'p_declaration_stmt','LanguageParser.py',122),
  ('declaration_statement -> var_declaration SEMI','declaration_statement',2,'p_declaration_stmt','LanguageParser.py',123),
  ('const_declaration -> CONST type const_declarators','const_declaration',3,'p_const_declaration','LanguageParser.py',130),
  ('const_declarators -> const_declarator','const_declarators',1,'p_const_declarators','LanguageParser.py',134),
  ('const_declarators -> const_declarator COMMA const_declarators','const_declarators',3,'p_const_declarators','LanguageParser.py',135),
  ('const_declarator -> ID EQUAL exp','const_declarator',3,'p_const_declarator','LanguageParser.py',142),
  ('var_declaration -> type var_declarators','var_declaration',2,'p_var_declaration','LanguageParser.py',146),
  ('var_declarators -> var_declarator','var_declarators',1,'p_var_declarators','LanguageParser.py',150),
  ('var_declarators -> var_declarator COMMA var_declarators','var_declarators',3,'p_var_declarators','LanguageParser.py',151),
  ('var_declarator -> ID','var_declarator',1,'p_var_declarator','LanguageParser.py',158),
  ('var_declarator -> ID EQUAL exp','var_declarator',3,'p_var_declarator','LanguageParser.py',159),
  ('embedded_statement -> block','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',166),
  ('embedded_statement -> empty_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',167),
  ('embedded_statement -> exp_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',168),
  ('embedded_statement -> selection_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',169),
  ('embedded_statement -> iteration_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',170),
  ('embedded_statement -> jump_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',171),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','LanguageParser.py',186),
  ('block -> LBRACE RBRACE','block',2,'p_block','LanguageParser.py',187),
  ('empty_statement -> SEMI','empty_statement',1,'p_empty_stmt','LanguageParser.py',194),
  ('exp_statement -> statement_exp SEMI','exp_statement',2,'p_exp_statement','LanguageParser.py',198),
  ('statement_exp -> invocation_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',202),
  ('statement_exp -> object_creation_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',203),
  ('statement_exp -> assignment','statement_exp',1,'p_statement_exp','LanguageParser.py',204),
  ('statement_exp -> post_increment_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',205),
  ('statement_exp -> post_decrement_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',206),
  ('statement_exp -> pre_increment_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',207),
  ('statement_exp -> pre_decrement_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',208),
  ('object_creation_exp -> NEW type LPAREN RPAREN','object_creation_exp',4,'p_object_creation','LanguageParser.py',225),
  ('object_creation_exp -> NEW type LPAREN RPAREN object_initializer','object_creation_exp',5,'p_object_creation','LanguageParser.py',226),
  ('object_creation_exp -> NEW type LPAREN arg_list RPAREN','object_creation_exp',5,'p_object_creation','LanguageParser.py',227),
  ('object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer','object_creation_exp',6,'p_object_creation','LanguageParser.py',228),
  ('object_initializer -> LBRACE RBRACE','object_initializer',2,'p_object_initializer','LanguageParser.py',240),
  ('object_initializer -> LBRACE member_initializer_list RBRACE','object_initializer',3,'p_object_initializer','LanguageParser.py',241),
  ('member_initializer_list -> member_initializer','member_initializer_list',1,'p_member_initializer_list','LanguageParser.py',248),
  ('member_initializer_list -> member_initializer COMMA member_initializer_list','member_initializer_list',3,'p_member_initializer_list','LanguageParser.py',249),
  ('member_initializer -> ID EQUAL exp','member_initializer',3,'p_member_initializer','LanguageParser.py',256),
  ('post_increment_exp -> primary_exp PLUSPLUS','post_increment_exp',2,'p_post_increment_exp','LanguageParser.py',260),
  ('post_decrement_exp -> primary_exp MINUSMINUS','post_decrement_exp',2,'p_post_decrement_exp','LanguageParser.py',264),
  ('pre_increment_exp -> PLUSPLUS unary_exp','pre_increment_exp',2,'p_pre_increment_exp','LanguageParser.py',268),
  ('pre_decrement_exp -> MINUSMINUS unary_exp','pre_decrement_exp',2,'p_pre_decrement_exp','LanguageParser.py',272),
  ('selection_statement -> if_statement','selection_statement',1,'p_selection_statement','LanguageParser.py',276),
  ('selection_statement -> switch_statement','selection_statement',1,'p_selection_statement','LanguageParser.py',277),
  ('if_statement -> IF LPAREN exp RPAREN embedded_statement','if_statement',5,'p_if_statement','LanguageParser.py',284),
  ('if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement','if_statement',7,'p_if_statement','LanguageParser.py',285),
  ('switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE','switch_statement',7,'p_switch_statement','LanguageParser.py',292),
  ('switch_body -> switch_section','switch_body',1,'p_switch_body','LanguageParser.py',296),
  ('switch_body -> switch_section switch_body','switch_body',2,'p_switch_body','LanguageParser.py',297),
  ('switch_section -> switch_label statement_list','switch_section',2,'p_switch_section_simple','LanguageParser.py',304),
  ('switch_section -> switch_label switch_section','switch_section',2,'p_switch_section_compound','LanguageParser.py',308),
  ('switch_label -> CASE pattern COLON','switch_label',3,'p_switch_label','LanguageParser.py',312),
  ('switch_label -> DEFAULT COLON','switch_label',2,'p_switch_label','LanguageParser.py',313),
  ('pattern -> exp','pattern',1,'p_pattern','LanguageParser.py',320),
  ('iteration_statement -> while_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',324),
  ('iteration_statement -> do_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',325),
  ('iteration_statement -> for_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',326),
  ('iteration_statement -> foreach_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',327),
  ('while_statement -> WHILE LPAREN exp RPAREN embedded_statement','while_statement',5,'p_while_statement','LanguageParser.py',338),
  ('do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI','do_statement',7,'p_do_statement','LanguageParser.py',342),
  ('for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement','for_statement',9,'p_for_statement_full','LanguageParser.py',346),
  ('for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement','for_statement',8,'p_for_statement_12','LanguageParser.py',350),
  ('for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement','for_statement',8,'p_for_statement_13','LanguageParser.py',354),
  ('for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement','for_statement',7,'p_for_statement_1','LanguageParser.py',358),
  ('for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement','for_statement',8,'p_for_statement_23','LanguageParser.py',362),
  ('for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement','for_statement',7,'p_for_statement_2','LanguageParser.py',366),
  ('for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement','for_statement',7,'p_for_statement_3','LanguageParser.py',370),
  ('for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement','for_statement',6,'p_for_statement_empty','LanguageParser.py',374),
  ('for_initializer -> var_declaration','for_initializer',1,'p_for_initializer','LanguageParser.py',378),
  ('for_initializer -> var_declaration COMMA for_initializer','for_initializer',3,'p_for_initializer','LanguageParser.py',379),
  ('for_condition -> exp','for_condition',1,'p_for_condition','LanguageParser.py',386),
  ('for_iterator -> statement_exp_list','for_iterator',1,'p_for_iterator','LanguageParser.py',390),
  ('statement_exp_list -> statement_exp','statement_exp_list',1,'p_statement_exp_list','LanguageParser.py',394),
  ('statement_exp_list -> statement_exp COMMA statement_exp_list','statement_exp_list',3,'p_statement_exp_list','LanguageParser.py',395),
  ('foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement','foreach_statement',8,'p_foreach_statement','LanguageParser.py',402),
  ('jump_statement -> break_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',406),
  ('jump_statement -> continue_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',407),
  ('jump_statement -> return_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',408),
  ('break_statement -> BREAK SEMI','break_statement',2,'p_break_statement','LanguageParser.py',417),
  ('continue_statement -> CONTINUE SEMI','continue_statement',2,'p_continue_statement','LanguageParser.py',421),
  ('return_statement -> RETURN SEMI','return_statement',2,'p_return_statement','LanguageParser.py',425),
  ('return_statement -> RETURN exp SEMI','return_statement',3,'p_return_statement','LanguageParser.py',426),
  ('arg_list -> exp','arg_list',1,'p_arg_list','LanguageParser.py',433),
  ('arg_list -> exp COMMA arg_list','arg_list',3,'p_arg_list','LanguageParser.py',434),
  ('primary_exp -> primary_no_array_creation_exp','primary_exp',1,'p_primary_exp','LanguageParser.py',441),
  ('primary_no_array_creation_exp -> TRUE','primary_no_array_creation_exp',1,'p_boolean_exp','LanguageParser.py',445),
  ('primary_no_array_creation_exp -> FALSE','primary_no_array_creation_exp',1,'p_boolean_exp','LanguageParser.py',446),
  ('primary_no_array_creation_exp -> NULL','primary_no_array_creation_exp',1,'p_null_exp','LanguageParser.py',450),
  ('primary_no_array_creation_exp -> INTNUM','primary_no_array_creation_exp',1,'p_intnum_exp','LanguageParser.py',454),
  ('primary_no_array_creation_exp -> HEXADECIMALNUM','primary_no_array_creation_exp',1,'p_hexnum_exp','LanguageParser.py',458),
  ('primary_no_array_creation_exp -> BINARYNUM','primary_no_array_creation_exp',1,'p_binnum_exp','LanguageParser.py',462),
  ('primary_no_array_creation_exp -> FLOATNUM','primary_no_array_creation_exp',1,'p_floatnum_exp','LanguageParser.py',466),
  ('primary_no_array_creation_exp -> DOUBLENUM','primary_no_array_creation_exp',1,'p_doublenum_exp','LanguageParser.py',470),
  ('primary_no_array_creation_exp -> DECIMALNUM','primary_no_array_creation_exp',1,'p_decimalnum_exp','LanguageParser.py',474),
  ('primary_no_array_creation_exp -> CHARLITERAL','primary_no_array_creation_exp',1,'p_charliteral_exp','LanguageParser.py',478),
  ('primary_no_array_creation_exp -> STRINGLITERAL','primary_no_array_creation_exp',1,'p_stringliteral_exp','LanguageParser.py',482),
  ('primary_no_array_creation_exp -> ID','primary_no_array_creation_exp',1,'p_id_exp','LanguageParser.py',486),
  ('primary_no_array_creation_exp -> LPAREN exp RPAREN','primary_no_array_creation_exp',3,'p_parent_exp','LanguageParser.py',490),
  ('primary_no_array_creation_exp -> primary_exp DOT ID','primary_no_array_creation_exp',3,'p_member_access_exp','LanguageParser.py',494),
  ('primary_no_array_creation_exp -> invocation_exp','primary_no_array_creation_exp',1,'p_primary_invocation_exp','LanguageParser.py',498),
  ('invocation_exp -> primary_exp LPAREN RPAREN','invocation_exp',3,'p_invocation_exp','LanguageParser.py',502),
  ('invocation_exp -> primary_exp LPAREN arg_list RPAREN','invocation_exp',4,'p_invocation_exp','LanguageParser.py',503),
  ('primary_no_array_creation_exp -> primary_no_array_creation_exp LSB exp RSB','primary_no_array_creation_exp',4,'p_element_access_exp','LanguageParser.py',510),
  ('primary_no_array_creation_exp -> THIS','primary_no_array_creation_exp',1,'p_this_exp','LanguageParser.py',514),
  ('primary_no_array_creation_exp -> post_increment_exp','primary_no_array_creation_exp',1,'p_primary_post_increment_exp','LanguageParser.py',519),
  ('primary_no_array_creation_exp -> post_decrement_exp','primary_no_array_creation_exp',1,'p_primary_post_decrement_exp','LanguageParser.py',524),
  ('primary_no_array_creation_exp -> object_creation_exp','primary_no_array_creation_exp',1,'p_primary_object_creation_exp','LanguageParser.py',529),
  ('primary_no_array_creation_exp -> TYPEOF LPAREN type RPAREN','primary_no_array_creation_exp',4,'p_typeof_exp','LanguageParser.py',533),
  ('primary_no_array_creation_exp -> SIZEOF LPAREN value_type RPAREN','primary_no_array_creation_exp',4,'p_sizeof_exp','LanguageParser.py',537),
  ('primary_no_array_creation_exp -> DEFAULT LPAREN type RPAREN','primary_no_array_creation_exp',4,'p_default_exp','LanguageParser.py',541),
  ('exp_list -> exp','exp_list',1,'p_exp_list','LanguageParser.py',545),
  ('exp_list -> exp_list COMMA exp','exp_list',3,'p_exp_list','LanguageParser.py',546),
  ('unary_exp -> primary_exp','unary_exp',1,'p_unary_primary_exp','LanguageParser.py',553),
  ('unary_exp -> pre_increment_exp','unary_exp',1,'p_unary_pre_increment_exp','LanguageParser.py',557),
  ('unary_exp -> pre_decrement_exp','unary_exp',1,'p_unary_pre_decrement_exp','LanguageParser.py',561),
  ('unary_exp -> LPAREN type RPAREN unary_exp','unary_exp',4,'p_cast_exp','LanguageParser.py',565),
  ('exp -> non_assignment_exp','exp',1,'p_exp_non_assignment_exp','LanguageParser.py',569),
  ('exp -> assignment','exp',1,'p_exp_assignment_exp','LanguageParser.py',573),
  ('non_assignment_exp -> conditional_exp','non_assignment_exp',1,'p_non_assignment_conditional_exp','LanguageParser.py',577),
  ('conditional_exp -> conditional_or_exp HOOK exp COLON exp','conditional_exp',5,'p_conditional_exp','LanguageParser.py',581),
  ('conditional_exp -> conditional_or_exp','conditional_exp',1,'p_conditional_exp','LanguageParser.py',582),
  ('conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp','conditional_or_exp',3,'p_conditional_or_exp','LanguageParser.py',589),
  ('conditional_or_exp -> conditional_and_exp','conditional_or_exp',1,'p_conditional_or_exp','LanguageParser.py',590),
  ('conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp','conditional_and_exp',3,'p_conditional_and_exp','LanguageParser.py',597),
  ('conditional_and_exp -> inclusive_or_exp','conditional_and_exp',1,'p_conditional_and_exp','LanguageParser.py',598),
  ('inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp','inclusive_or_exp',3,'p_inclusive_or_exp','LanguageParser.py',605),
  ('inclusive_or_exp -> exclusive_or_exp','inclusive_or_exp',1,'p_inclusive_or_exp','LanguageParser.py',606),
  ('exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp','exclusive_or_exp',3,'p_exclusive_or_exp','LanguageParser.py',613),
  ('exclusive_or_exp -> and_exp','exclusive_or_exp',1,'p_exclusive_or_exp','LanguageParser.py',614),
  ('and_exp -> and_exp AMPER equality_exp','and_exp',3,'p_and_exp','LanguageParser.py',621),
  ('and_exp -> equality_exp','and_exp',1,'p_and_exp','LanguageParser.py',622),
  ('equality_exp -> equality_exp EQEQUAL relational_exp','equality_exp',3,'p_equality_exp','LanguageParser.py',629),
  ('equality_exp -> equality_exp NOTEQUAL relational_exp','equality_exp',3,'p_equality_exp','LanguageParser.py',630),
  ('equality_exp -> relational_exp','equality_exp',1,'p_equality_exp','LanguageParser.py',631),
  ('relational_exp -> relational_exp LT shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',640),
  ('relational_exp -> relational_exp GT shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',641),
  ('relational_exp -> relational_exp LEQ shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',642),
  ('relational_exp -> relational_exp GEQ shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',643),
  ('relational_exp -> relational_exp IS type','relational_exp',3,'p_relational_exp','LanguageParser.py',644),
  ('relational_exp -> shift_exp','relational_exp',1,'p_relational_exp','LanguageParser.py',645),
  ('shift_exp -> shift_exp LSHIFT additive_exp','shift_exp',3,'p_shift_exp','LanguageParser.py',660),
  ('shift_exp -> shift_exp RSHIFT additive_exp','shift_exp',3,'p_shift_exp','LanguageParser.py',661),
  ('shift_exp -> additive_exp','shift_exp',1,'p_shift_exp','LanguageParser.py',662),
  ('additive_exp -> additive_exp PLUS multiplicative_exp','additive_exp',3,'p_additive_exp','LanguageParser.py',671),
  ('additive_exp -> additive_exp MINUS multiplicative_exp','additive_exp',3,'p_additive_exp','LanguageParser.py',672),
  ('additive_exp -> multiplicative_exp','additive_exp',1,'p_additive_exp','LanguageParser.py',673),
  ('multiplicative_exp -> multiplicative_exp STAR unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',682),
  ('multiplicative_exp -> multiplicative_exp SLASH unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',683),
  ('multiplicative_exp -> multiplicative_exp PERCENT unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',684),
  ('multiplicative_exp -> unary_exp','multiplicative_exp',1,'p_multiplicative_exp','LanguageParser.py',685),
  ('assignment -> unary_exp EQUAL exp','assignment',3,'p_assignment_simple','LanguageParser.py',696),
]
