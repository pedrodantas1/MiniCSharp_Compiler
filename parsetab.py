
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPER AMPERAMPER AMPEREQUAL BANG BINARYNUM BOOL BREAK CASE CATCH CHAR CHARLITERAL CIRCUMEQUAL CIRCUMFLEX CLASS COLON COMMA CONST CONTINUE DECIMAL DECIMALNUM DEFAULT DO DOT DOUBLE DOUBLENUM ELSE ENUM EQEQUAL EQUAL FALSE FINALLY FLOAT FLOATNUM FOR FOREACH GEQ GT HEXADECIMALNUM HOOK HOOKHOOK HOOKHOOKEQUAL ID IF IN INT INTERFACE INTNUM IS LBRACE LEQ LONG LPAREN LSB LSHIFT LSHIFTEQUAL LT MINUS MINUSEQUAL MINUSMINUS NAMESPACE NEW NOTEQUAL NULL OBJECT OUT OVERRIDE PARAMS PERCENT PERCENTEQUAL PIPE PIPEEQUAL PIPEPIPE PLUS PLUSEQUAL PLUSPLUS PRIVATE PROTECTED PUBLIC RBRACE READONLY REF RETURN RPAREN RSB RSHIFT RSHIFTEQUAL SEMI SHORT SIZEOF SLASH SLASHEQUAL STAR STAREQUAL STATIC STRING STRINGLITERAL STRUCT SWITCH THIS THROW TILDE TRUE TRY TYPEOF UINT ULONG USHORT VOID WHILEprogram : func_declaration\n               | func_declaration programtype_name : ID\n                 | type_name DOT IDtype : class_type\n            | value_typeclass_type : OBJECT\n                  | STRING\n                  | type_namevalue_type : integral_type\n                  | floating_point_type\n                  | BOOL\n                  | VOIDintegral_type : INTintegral_type : LONGintegral_type : CHARfloating_point_type : FLOATfloating_point_type : DOUBLEfloating_point_type : DECIMALfunc_declaration : signature blocksignature : type ID LPAREN param_list RPAREN\n                 | type ID LPAREN RPARENparam_list : type ID\n                  | type ID COMMA param_liststatement_list : statement\n                      | statement statement_liststatement : declaration_statement\n                 | embedded_statementdeclaration_statement : const_declaration SEMI\n                             | var_declaration SEMIconst_declaration : CONST type const_declaratorsconst_declarators : const_declarator\n                         | const_declarator COMMA const_declaratorsconst_declarator : ID EQUAL expvar_declaration : type var_declaratorsvar_declarators : var_declarator\n                       | var_declarator COMMA var_declaratorsvar_declarator : ID\n                      | ID EQUAL expembedded_statement : block\n                          | empty_statement\n                          | exp_statement\n                          | selection_statement\n                          | iteration_statement\n                          | jump_statementblock : LBRACE statement_list RBRACE\n             | LBRACE RBRACEempty_statement : SEMIexp_statement : statement_exp SEMIstatement_exp : invocation_exp\n                     | object_creation_exp\n                     | assignment\n                     | post_increment_exp\n                     | post_decrement_exp\n                     | pre_increment_exp\n                     | pre_decrement_expobject_creation_exp : NEW type LPAREN RPAREN\n                           | NEW type LPAREN RPAREN object_initializer\n                           | NEW type LPAREN arg_list RPAREN\n                           | NEW type LPAREN arg_list RPAREN object_initializerobject_initializer : LBRACE RBRACE\n                          | LBRACE member_initializer_list RBRACEmember_initializer_list : member_initializer\n                               | member_initializer COMMA member_initializer_listmember_initializer : ID EQUAL exppost_increment_exp : primary_exp PLUSPLUSpost_decrement_exp : primary_exp MINUSMINUSpre_increment_exp : PLUSPLUS unary_exppre_decrement_exp : MINUSMINUS unary_expselection_statement : if_statement\n                           | switch_statementif_statement : IF LPAREN exp RPAREN embedded_statement\n                    | IF LPAREN exp RPAREN embedded_statement ELSE embedded_statementswitch_statement : SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACEswitch_body : switch_section\n                   | switch_section switch_bodyswitch_section : switch_label statement_listswitch_section : switch_label switch_sectionswitch_label : CASE pattern COLON\n                    | DEFAULT COLONpattern : expiteration_statement : while_statement\n                           | do_statement\n                           | for_statement\n                           | foreach_statementwhile_statement : WHILE LPAREN exp RPAREN embedded_statementdo_statement : DO embedded_statement WHILE LPAREN exp RPAREN SEMIfor_statement : FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statementfor_statement : FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statementfor_statement : FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statementfor_statement : FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statementfor_statement : FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statementfor_statement : FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statementfor_statement : FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statementfor_statement : FOR LPAREN SEMI SEMI RPAREN embedded_statementfor_initializer : var_declaration\n                       | var_declaration COMMA for_initializerfor_condition : expfor_iterator : statement_exp_liststatement_exp_list : statement_exp\n                          | statement_exp COMMA statement_exp_listforeach_statement : FOREACH LPAREN type ID IN exp RPAREN embedded_statementjump_statement : break_statement\n                      | continue_statement\n                      | return_statementbreak_statement : BREAK SEMIcontinue_statement : CONTINUE SEMIreturn_statement : RETURN SEMI\n                        | RETURN exp SEMIarg_list : exp\n                | exp COMMA arg_listprimary_exp : primary_no_array_creation_expprimary_no_array_creation_exp : TRUE\n                                     | FALSEprimary_no_array_creation_exp : NULLprimary_no_array_creation_exp : INTNUMprimary_no_array_creation_exp : HEXADECIMALNUMprimary_no_array_creation_exp : BINARYNUMprimary_no_array_creation_exp : FLOATNUMprimary_no_array_creation_exp : DOUBLENUMprimary_no_array_creation_exp : DECIMALNUMprimary_no_array_creation_exp : CHARLITERALprimary_no_array_creation_exp : STRINGLITERALprimary_no_array_creation_exp : IDprimary_no_array_creation_exp : parenthesized_expparenthesized_exp : LPAREN exp RPARENprimary_no_array_creation_exp : invocation_expinvocation_exp : primary_exp LPAREN RPAREN\n                      | primary_exp LPAREN arg_list RPARENprimary_no_array_creation_exp : element_accesselement_access : primary_no_array_creation_exp LSB exp RSBprimary_no_array_creation_exp : THISprimary_no_array_creation_exp : post_increment_expprimary_no_array_creation_exp : post_decrement_expprimary_no_array_creation_exp : object_creation_expprimary_no_array_creation_exp : typeof_exptypeof_exp : TYPEOF LPAREN type RPARENprimary_no_array_creation_exp : sizeof_expsizeof_exp : SIZEOF LPAREN value_type RPARENprimary_no_array_creation_exp : default_expdefault_exp : DEFAULT LPAREN type RPARENexp_list : exp\n                | exp_list COMMA expunary_exp : primary_expunary_exp : pre_increment_expunary_exp : pre_decrement_expunary_exp : cast_expcast_exp : LPAREN type RPAREN unary_expexp : non_assignment_expexp : assignmentnon_assignment_exp : conditional_expconditional_exp : conditional_or_exp HOOK exp COLON exp\n                       | conditional_or_expconditional_or_exp : conditional_or_exp PIPEPIPE conditional_and_exp\n                          | conditional_and_expconditional_and_exp : conditional_and_exp AMPERAMPER inclusive_or_exp\n                           | inclusive_or_expinclusive_or_exp : inclusive_or_exp PIPE exclusive_or_exp\n                        | exclusive_or_expexclusive_or_exp : exclusive_or_exp CIRCUMFLEX and_exp\n                        | and_expand_exp : and_exp AMPER equality_exp\n               | equality_expequality_exp : equality_exp EQEQUAL relational_exp\n                    | equality_exp NOTEQUAL relational_exp\n                    | relational_exprelational_exp : relational_exp LT shift_exp\n                      | relational_exp GT shift_exp\n                      | relational_exp LEQ shift_exp\n                      | relational_exp GEQ shift_exp\n                      | relational_exp IS type\n                      | shift_expshift_exp : shift_exp LSHIFT additive_exp\n                 | shift_exp RSHIFT additive_exp\n                 | additive_expadditive_exp : additive_exp PLUS multiplicative_exp\n                    | additive_exp MINUS multiplicative_exp\n                    | multiplicative_expmultiplicative_exp : multiplicative_exp STAR unary_exp\n                          | multiplicative_exp SLASH unary_exp\n                          | multiplicative_exp PERCENT unary_exp\n                          | unary_expassignment : unary_exp EQUAL exp'
    
_lr_action_items = {'OBJECT':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,97,99,101,102,107,136,137,138,139,140,150,152,176,191,237,247,250,253,273,281,291,292,299,300,302,305,308,313,314,316,317,318,321,],[8,8,-20,8,-47,8,-27,-28,-48,-40,-41,-42,-43,-44,-45,8,-70,-71,-82,-83,-84,-85,-103,-104,-105,8,8,8,-46,-29,-30,-49,8,8,-106,-107,-108,8,8,8,-109,8,8,-72,-86,8,-95,-73,-74,-80,-87,-91,-94,-93,-79,-90,-89,-92,-102,-88,]),'STRING':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,97,99,101,102,107,136,137,138,139,140,150,152,176,191,237,247,250,253,273,281,291,292,299,300,302,305,308,313,314,316,317,318,321,],[9,9,-20,9,-47,9,-27,-28,-48,-40,-41,-42,-43,-44,-45,9,-70,-71,-82,-83,-84,-85,-103,-104,-105,9,9,9,-46,-29,-30,-49,9,9,-106,-107,-108,9,9,9,-109,9,9,-72,-86,9,-95,-73,-74,-80,-87,-91,-94,-93,-79,-90,-89,-92,-102,-88,]),'BOOL':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,97,99,101,102,107,136,137,138,139,140,150,151,152,176,191,237,247,250,253,273,281,291,292,299,300,302,305,308,313,314,316,317,318,321,],[13,13,-20,13,-47,13,-27,-28,-48,-40,-41,-42,-43,-44,-45,13,-70,-71,-82,-83,-84,-85,-103,-104,-105,13,13,13,-46,-29,-30,-49,13,13,-106,-107,-108,13,13,13,13,-109,13,13,-72,-86,13,-95,-73,-74,-80,-87,-91,-94,-93,-79,-90,-89,-92,-102,-88,]),'VOID':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,97,99,101,102,107,136,137,138,139,140,150,151,152,176,191,237,247,250,253,273,281,291,292,299,300,302,305,308,313,314,316,317,318,321,],[14,14,-20,14,-47,14,-27,-28,-48,-40,-41,-42,-43,-44,-45,14,-70,-71,-82,-83,-84,-85,-103,-104,-105,14,14,14,-46,-29,-30,-49,14,14,-106,-107,-108,14,14,14,14,-109,14,14,-72,-86,14,-95,-73,-74,-80,-87,-91,-94,-93,-79,-90,-89,-92,-102,-88,]),'ID':([0,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,25,27,28,29,30,32,34,35,36,37,38,39,40,41,43,44,45,46,47,48,49,50,51,60,63,66,69,71,73,74,97,98,99,101,102,103,107,108,132,133,136,137,138,139,140,142,146,149,150,152,153,159,160,162,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,188,190,191,195,203,204,207,231,232,233,234,237,240,247,250,251,253,255,258,261,263,266,269,273,274,278,279,280,281,282,284,291,292,299,300,301,302,304,305,307,308,309,311,312,313,314,315,316,317,318,321,],[5,5,24,-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,66,98,-47,66,-27,-28,-48,-40,-41,-42,-43,-44,-45,5,106,-70,-71,-82,-83,-84,-85,-103,-104,-105,66,135,-3,135,5,135,135,5,-4,-46,-29,-30,158,-49,135,135,135,5,5,-106,-107,-108,135,135,135,5,5,201,106,135,135,135,135,135,135,135,135,135,135,135,135,135,135,5,135,135,135,135,135,135,135,135,238,-109,135,158,135,135,135,135,135,135,5,135,5,-72,135,-86,135,135,135,135,289,135,66,135,135,135,135,-95,135,135,-73,-74,-80,-87,135,-91,135,-94,135,-93,135,289,135,-79,-90,135,-89,-92,-102,-88,]),'INT':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,97,99,101,102,107,136,137,138,139,140,150,151,152,176,191,237,247,250,253,273,281,291,292,299,300,302,305,308,313,314,316,317,318,321,],[15,15,-20,15,-47,15,-27,-28,-48,-40,-41,-42,-43,-44,-45,15,-70,-71,-82,-83,-84,-85,-103,-104,-105,15,15,15,-46,-29,-30,-49,15,15,-106,-107,-108,15,15,15,15,-109,15,15,-72,-86,15,-95,-73,-74,-80,-87,-91,-94,-93,-79,-90,-89,-92,-102,-88,]),'LONG':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,97,99,101,102,107,136,137,138,139,140,150,151,152,176,191,237,247,250,253,273,281,291,292,299,300,302,305,308,313,314,316,317,318,321,],[16,16,-20,16,-47,16,-27,-28,-48,-40,-41,-42,-43,-44,-45,16,-70,-71,-82,-83,-84,-85,-103,-104,-105,16,16,16,-46,-29,-30,-49,16,16,-106,-107,-108,16,16,16,16,-109,16,16,-72,-86,16,-95,-73,-74,-80,-87,-91,-94,-93,-79,-90,-89,-92,-102,-88,]),'CHAR':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,97,99,101,102,107,136,137,138,139,140,150,151,152,176,191,237,247,250,253,273,281,291,292,299,300,302,305,308,313,314,316,317,318,321,],[17,17,-20,17,-47,17,-27,-28,-48,-40,-41,-42,-43,-44,-45,17,-70,-71,-82,-83,-84,-85,-103,-104,-105,17,17,17,-46,-29,-30,-49,17,17,-106,-107,-108,17,17,17,17,-109,17,17,-72,-86,17,-95,-73,-74,-80,-87,-91,-94,-93,-79,-90,-89,-92,-102,-88,]),'FLOAT':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,97,99,101,102,107,136,137,138,139,140,150,151,152,176,191,237,247,250,253,273,281,291,292,299,300,302,305,308,313,314,316,317,318,321,],[18,18,-20,18,-47,18,-27,-28,-48,-40,-41,-42,-43,-44,-45,18,-70,-71,-82,-83,-84,-85,-103,-104,-105,18,18,18,-46,-29,-30,-49,18,18,-106,-107,-108,18,18,18,18,-109,18,18,-72,-86,18,-95,-73,-74,-80,-87,-91,-94,-93,-79,-90,-89,-92,-102,-88,]),'DOUBLE':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,97,99,101,102,107,136,137,138,139,140,150,151,152,176,191,237,247,250,253,273,281,291,292,299,300,302,305,308,313,314,316,317,318,321,],[19,19,-20,19,-47,19,-27,-28,-48,-40,-41,-42,-43,-44,-45,19,-70,-71,-82,-83,-84,-85,-103,-104,-105,19,19,19,-46,-29,-30,-49,19,19,-106,-107,-108,19,19,19,19,-109,19,19,-72,-86,19,-95,-73,-74,-80,-87,-91,-94,-93,-79,-90,-89,-92,-102,-88,]),'DECIMAL':([0,2,22,23,27,28,29,30,32,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,60,71,97,99,101,102,107,136,137,138,139,140,150,151,152,176,191,237,247,250,253,273,281,291,292,299,300,302,305,308,313,314,316,317,318,321,],[20,20,-20,20,-47,20,-27,-28,-48,-40,-41,-42,-43,-44,-45,20,-70,-71,-82,-83,-84,-85,-103,-104,-105,20,20,20,-46,-29,-30,-49,20,20,-106,-107,-108,20,20,20,20,-109,20,20,-72,-86,20,-95,-73,-74,-80,-87,-91,-94,-93,-79,-90,-89,-92,-102,-88,]),'$end':([1,2,21,22,27,99,],[0,-1,-2,-20,-47,-46,]),'LBRACE':([3,23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,99,101,102,107,138,139,140,155,191,202,207,230,231,241,250,253,258,267,269,273,278,280,281,284,291,292,299,300,301,302,304,305,307,308,309,313,314,315,316,317,318,321,],[23,23,-47,23,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,23,-46,-29,-30,-49,-106,-107,-108,-22,-109,-21,23,252,23,266,-72,-86,23,266,23,23,23,23,-95,23,-73,-74,-80,-87,23,-91,23,-94,23,-93,23,-79,-90,23,-89,-92,-102,-88,]),'DOT':([5,10,66,98,],[-3,25,-3,-4,]),'LPAREN':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,24,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,52,53,55,56,59,60,61,62,63,64,65,66,69,70,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,99,101,102,107,108,116,121,122,123,124,132,133,135,138,139,140,142,143,144,145,146,149,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,186,188,191,192,195,204,207,231,232,233,234,239,240,241,243,244,245,246,250,251,253,255,258,261,263,265,267,269,273,274,278,279,280,281,282,284,286,290,291,292,296,299,300,301,302,304,305,307,308,309,310,312,313,314,315,316,317,318,321,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,60,97,-47,60,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,-127,-135,-133,-134,108,60,132,133,60,136,137,-124,60,142,60,60,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,150,151,152,-4,-46,-29,-30,-49,60,142,-127,-133,-134,-135,60,60,-124,-106,-107,-108,60,-66,-67,195,60,60,60,60,-126,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,232,60,-109,-128,60,60,60,60,60,60,60,-129,60,-57,-131,-137,-139,-141,-72,60,-86,60,60,60,60,-58,-59,60,60,60,60,60,60,-95,60,60,-61,-60,-73,-74,152,-80,-87,60,-91,60,-94,60,-93,60,-62,60,-79,-90,60,-89,-92,-102,-88,]),'RPAREN':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,52,53,54,55,56,57,58,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,97,98,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,142,143,144,147,148,154,161,163,184,185,192,193,194,195,196,198,199,200,201,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,234,239,241,242,243,244,245,246,254,255,257,259,260,261,264,265,267,268,270,277,279,283,285,286,290,303,306,310,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-50,-51,-52,-53,-54,-55,-56,-3,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,155,-4,162,-182,163,-149,-150,-151,-153,-144,-145,-146,-155,-157,-127,-133,-134,-135,-159,-161,-163,-166,-172,-175,-178,-124,192,-66,-67,-68,-69,202,207,-126,230,231,-128,239,-110,241,-183,244,245,246,-23,-148,-154,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,258,-129,-57,267,-131,-137,-139,-141,276,278,280,-99,-100,284,-111,-58,-59,-24,-152,301,304,307,309,-61,-60,315,-101,-62,]),'LT':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,110,116,117,118,121,122,123,124,128,129,130,131,135,143,144,147,148,163,192,208,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-182,-144,-145,-146,-127,-133,-134,-135,172,-172,-175,-178,-124,-66,-67,-68,-69,-126,-128,-148,-182,172,172,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'GT':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,110,116,117,118,121,122,123,124,128,129,130,131,135,143,144,147,148,163,192,208,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-182,-144,-145,-146,-127,-133,-134,-135,173,-172,-175,-178,-124,-66,-67,-68,-69,-126,-128,-148,-182,173,173,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'LEQ':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,110,116,117,118,121,122,123,124,128,129,130,131,135,143,144,147,148,163,192,208,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-182,-144,-145,-146,-127,-133,-134,-135,174,-172,-175,-178,-124,-66,-67,-68,-69,-126,-128,-148,-182,174,174,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'GEQ':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,110,116,117,118,121,122,123,124,128,129,130,131,135,143,144,147,148,163,192,208,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-182,-144,-145,-146,-127,-133,-134,-135,175,-172,-175,-178,-124,-66,-67,-68,-69,-126,-128,-148,-182,175,175,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'IS':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,110,116,117,118,121,122,123,124,128,129,130,131,135,143,144,147,148,163,192,208,211,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-182,-144,-145,-146,-127,-133,-134,-135,176,-172,-175,-178,-124,-66,-67,-68,-69,-126,-128,-148,-182,176,176,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'EQEQUAL':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,110,116,117,118,121,122,123,124,127,128,129,130,131,135,143,144,147,148,163,192,208,211,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-182,-144,-145,-146,-127,-133,-134,-135,170,-166,-172,-175,-178,-124,-66,-67,-68,-69,-126,-128,-148,-182,170,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'NOTEQUAL':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,110,116,117,118,121,122,123,124,127,128,129,130,131,135,143,144,147,148,163,192,208,211,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-182,-144,-145,-146,-127,-133,-134,-135,171,-166,-172,-175,-178,-124,-66,-67,-68,-69,-126,-128,-148,-182,171,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'AMPER':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,110,116,117,118,121,122,123,124,126,127,128,129,130,131,135,143,144,147,148,163,192,208,211,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-182,-144,-145,-146,-127,-133,-134,-135,169,-163,-166,-172,-175,-178,-124,-66,-67,-68,-69,-126,-128,-148,-182,169,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'CIRCUMFLEX':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,110,116,117,118,121,122,123,124,125,126,127,128,129,130,131,135,143,144,147,148,163,192,208,211,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-182,-144,-145,-146,-127,-133,-134,-135,168,-161,-163,-166,-172,-175,-178,-124,-66,-67,-68,-69,-126,-128,-148,-182,168,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'PIPE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,110,116,117,118,120,121,122,123,124,125,126,127,128,129,130,131,135,143,144,147,148,163,192,208,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-182,-144,-145,-146,167,-127,-133,-134,-135,-159,-161,-163,-166,-172,-175,-178,-124,-66,-67,-68,-69,-126,-128,-148,-182,167,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'AMPERAMPER':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,110,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,143,144,147,148,163,192,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-182,-144,-145,-146,166,-157,-127,-133,-134,-135,-159,-161,-163,-166,-172,-175,-178,-124,-66,-67,-68,-69,-126,-128,-148,166,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'HOOK':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,143,144,147,148,163,192,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-182,164,-144,-145,-146,-155,-157,-127,-133,-134,-135,-159,-161,-163,-166,-172,-175,-178,-124,-66,-67,-68,-69,-126,-128,-148,-154,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'PIPEPIPE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,110,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,143,144,147,148,163,192,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-182,165,-144,-145,-146,-155,-157,-127,-133,-134,-135,-159,-161,-163,-166,-172,-175,-178,-124,-66,-67,-68,-69,-126,-128,-148,-154,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'SEMI':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,27,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,63,67,68,69,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,99,101,102,104,105,106,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,136,138,139,140,141,143,144,147,148,156,157,163,187,188,189,191,192,196,205,206,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,231,233,235,236,239,241,243,244,245,246,248,249,250,253,256,258,262,265,267,269,270,273,276,278,280,281,284,286,290,291,292,299,300,301,302,304,305,307,308,309,310,313,314,315,316,317,318,321,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,32,-47,32,-27,-28,101,-48,102,-40,-41,-42,-43,-44,-45,107,-70,-71,-82,-83,-84,-85,-103,-104,-105,-50,-51,-52,-53,-54,-55,-56,32,138,139,140,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-46,-29,-30,-35,-36,-38,-49,-182,-149,-150,-151,-153,-144,-145,-146,-155,-157,-127,-133,-134,-135,-159,-161,-163,-166,-172,-175,-178,-124,188,-106,-107,-108,191,-66,-67,-68,-69,-31,-32,-126,233,234,-96,-109,-128,-183,-37,-39,32,-148,-154,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,32,255,261,-98,-129,-57,-131,-137,-139,-141,-33,-34,-72,-86,279,32,-97,-58,-59,32,-152,32,300,32,32,-95,32,-61,-60,-73,-74,-80,-87,32,-91,32,-94,32,-93,32,-62,-79,-90,32,-89,-92,-102,-88,]),'COMMA':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,52,53,54,55,56,57,58,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,104,105,106,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,143,144,147,148,157,163,189,192,194,196,201,205,206,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,249,260,265,267,270,286,288,290,310,320,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-50,-51,-52,-53,-54,-55,-56,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-35,159,-38,-182,-149,-150,-151,-153,-144,-145,-146,-155,-157,-127,-133,-134,-135,-159,-161,-163,-166,-172,-175,-178,-124,-66,-67,-68,-69,203,-126,237,-128,240,-183,247,-37,-39,-148,-154,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-34,282,-58,-59,-152,-61,311,-60,-62,-65,]),'RSB':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,143,144,147,148,163,192,196,197,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,270,286,290,310,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-182,-149,-150,-151,-153,-144,-145,-146,-155,-157,-127,-133,-134,-135,-159,-161,-163,-166,-172,-175,-178,-124,-66,-67,-68,-69,-126,-128,-183,243,-148,-154,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-152,-61,-60,-62,]),'COLON':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,143,144,147,148,163,192,196,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,270,275,286,290,296,297,298,310,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-182,-149,-150,-151,-153,-144,-145,-146,-155,-157,-127,-133,-134,-135,-159,-161,-163,-166,-172,-175,-178,-124,-66,-67,-68,-69,-126,-128,-183,-148,251,-154,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-152,299,-61,-60,299,313,-81,-62,]),'RBRACE':([5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,23,26,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,99,100,101,102,107,110,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,135,138,139,140,143,144,147,148,163,191,192,196,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,239,241,243,244,245,246,250,253,265,266,267,270,271,272,281,286,287,288,290,291,292,293,294,295,300,302,305,308,310,314,316,317,318,319,320,321,],[-3,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,27,99,-47,-25,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-4,-46,-26,-29,-30,-49,-182,-149,-150,-151,-153,-144,-145,-146,-155,-157,-127,-133,-134,-135,-159,-161,-163,-166,-172,-175,-178,-124,-106,-107,-108,-66,-67,-68,-69,-126,-109,-128,-183,-148,-154,-182,-156,-158,-160,-162,-164,-165,-167,-168,-169,-170,-171,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-72,-86,-58,286,-59,-152,292,-75,-95,-61,310,-63,-60,-73,-74,-76,-77,-78,-87,-91,-94,-93,-62,-90,-89,-92,-102,-64,-65,-88,]),'CONST':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,99,101,102,107,138,139,140,191,250,253,273,281,291,292,299,300,302,305,308,313,314,316,317,318,321,],[40,-47,40,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,-46,-29,-30,-49,-106,-107,-108,-109,-72,-86,40,-95,-73,-74,-80,-87,-91,-94,-93,-79,-90,-89,-92,-102,-88,]),'IF':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,99,101,102,107,138,139,140,191,207,231,250,253,258,269,273,278,280,281,284,291,292,299,300,301,302,304,305,307,308,309,313,314,315,316,317,318,321,],[59,-47,59,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,59,-46,-29,-30,-49,-106,-107,-108,-109,59,59,-72,-86,59,59,59,59,59,-95,59,-73,-74,-80,-87,59,-91,59,-94,59,-93,59,-79,-90,59,-89,-92,-102,-88,]),'SWITCH':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,99,101,102,107,138,139,140,191,207,231,250,253,258,269,273,278,280,281,284,291,292,299,300,301,302,304,305,307,308,309,313,314,315,316,317,318,321,],[61,-47,61,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,61,-46,-29,-30,-49,-106,-107,-108,-109,61,61,-72,-86,61,61,61,61,61,-95,61,-73,-74,-80,-87,61,-91,61,-94,61,-93,61,-79,-90,61,-89,-92,-102,-88,]),'WHILE':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,99,101,102,107,134,138,139,140,191,207,231,250,253,258,269,273,278,280,281,284,291,292,299,300,301,302,304,305,307,308,309,313,314,315,316,317,318,321,],[62,-47,62,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,62,-46,-29,-30,-49,186,-106,-107,-108,-109,62,62,-72,-86,62,62,62,62,62,-95,62,-73,-74,-80,-87,62,-91,62,-94,62,-93,62,-79,-90,62,-89,-92,-102,-88,]),'DO':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,99,101,102,107,138,139,140,191,207,231,250,253,258,269,273,278,280,281,284,291,292,299,300,301,302,304,305,307,308,309,313,314,315,316,317,318,321,],[63,-47,63,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,63,-46,-29,-30,-49,-106,-107,-108,-109,63,63,-72,-86,63,63,63,63,63,-95,63,-73,-74,-80,-87,63,-91,63,-94,63,-93,63,-79,-90,63,-89,-92,-102,-88,]),'FOR':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,99,101,102,107,138,139,140,191,207,231,250,253,258,269,273,278,280,281,284,291,292,299,300,301,302,304,305,307,308,309,313,314,315,316,317,318,321,],[64,-47,64,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,64,-46,-29,-30,-49,-106,-107,-108,-109,64,64,-72,-86,64,64,64,64,64,-95,64,-73,-74,-80,-87,64,-91,64,-94,64,-93,64,-79,-90,64,-89,-92,-102,-88,]),'FOREACH':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,99,101,102,107,138,139,140,191,207,231,250,253,258,269,273,278,280,281,284,291,292,299,300,301,302,304,305,307,308,309,313,314,315,316,317,318,321,],[65,-47,65,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,65,-46,-29,-30,-49,-106,-107,-108,-109,65,65,-72,-86,65,65,65,65,65,-95,65,-73,-74,-80,-87,65,-91,65,-94,65,-93,65,-79,-90,65,-89,-92,-102,-88,]),'BREAK':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,99,101,102,107,138,139,140,191,207,231,250,253,258,269,273,278,280,281,284,291,292,299,300,301,302,304,305,307,308,309,313,314,315,316,317,318,321,],[67,-47,67,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,67,-46,-29,-30,-49,-106,-107,-108,-109,67,67,-72,-86,67,67,67,67,67,-95,67,-73,-74,-80,-87,67,-91,67,-94,67,-93,67,-79,-90,67,-89,-92,-102,-88,]),'CONTINUE':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,99,101,102,107,138,139,140,191,207,231,250,253,258,269,273,278,280,281,284,291,292,299,300,301,302,304,305,307,308,309,313,314,315,316,317,318,321,],[68,-47,68,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,68,-46,-29,-30,-49,-106,-107,-108,-109,68,68,-72,-86,68,68,68,68,68,-95,68,-73,-74,-80,-87,68,-91,68,-94,68,-93,68,-79,-90,68,-89,-92,-102,-88,]),'RETURN':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,63,99,101,102,107,138,139,140,191,207,231,250,253,258,269,273,278,280,281,284,291,292,299,300,301,302,304,305,307,308,309,313,314,315,316,317,318,321,],[69,-47,69,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,69,-46,-29,-30,-49,-106,-107,-108,-109,69,69,-72,-86,69,69,69,69,69,-95,69,-73,-74,-80,-87,69,-91,69,-94,69,-93,69,-79,-90,69,-89,-92,-102,-88,]),'NEW':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,99,101,102,107,108,132,133,138,139,140,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,195,204,207,231,232,233,234,240,250,251,253,255,258,261,263,269,273,274,278,279,280,281,282,284,291,292,299,300,301,302,304,305,307,308,309,312,313,314,315,316,317,318,321,],[71,-47,71,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,71,71,71,71,71,-46,-29,-30,-49,71,71,71,-106,-107,-108,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-109,71,71,71,71,71,71,71,71,-72,71,-86,71,71,71,71,71,71,71,71,71,71,-95,71,71,-73,-74,-80,-87,71,-91,71,-94,71,-93,71,71,-79,-90,71,-89,-92,-102,-88,]),'PLUSPLUS':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,52,53,55,56,60,63,66,69,70,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,107,108,116,121,122,123,124,132,133,135,138,139,140,142,143,144,146,149,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,192,195,204,207,231,232,233,234,239,240,241,243,244,245,246,250,251,253,255,258,261,263,265,267,269,273,274,278,279,280,281,282,284,286,290,291,292,299,300,301,302,304,305,307,308,309,310,312,313,314,315,316,317,318,321,],[73,-47,73,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,-127,-135,-133,-134,73,73,-124,73,143,73,73,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-46,-29,-30,-49,73,143,-127,-133,-134,-135,73,73,-124,-106,-107,-108,73,-66,-67,73,73,73,73,-126,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-109,-128,73,73,73,73,73,73,73,-129,73,-57,-131,-137,-139,-141,-72,73,-86,73,73,73,73,-58,-59,73,73,73,73,73,73,-95,73,73,-61,-60,-73,-74,-80,-87,73,-91,73,-94,73,-93,73,-62,73,-79,-90,73,-89,-92,-102,-88,]),'MINUSMINUS':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,52,53,55,56,60,63,66,69,70,73,74,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,107,108,116,121,122,123,124,132,133,135,138,139,140,142,143,144,146,149,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,192,195,204,207,231,232,233,234,239,240,241,243,244,245,246,250,251,253,255,258,261,263,265,267,269,273,274,278,279,280,281,282,284,286,290,291,292,299,300,301,302,304,305,307,308,309,310,312,313,314,315,316,317,318,321,],[74,-47,74,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,-127,-135,-133,-134,74,74,-124,74,144,74,74,-112,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-46,-29,-30,-49,74,144,-127,-133,-134,-135,74,74,-124,-106,-107,-108,74,-66,-67,74,74,74,74,-126,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-109,-128,74,74,74,74,74,74,74,-129,74,-57,-131,-137,-139,-141,-72,74,-86,74,74,74,74,-58,-59,74,74,74,74,74,74,-95,74,74,-61,-60,-73,-74,-80,-87,74,-91,74,-94,74,-93,74,-62,74,-79,-90,74,-89,-92,-102,-88,]),'TRUE':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,99,101,102,107,108,132,133,138,139,140,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,195,204,207,231,232,233,234,240,250,251,253,255,258,261,263,269,273,274,278,279,280,281,282,284,291,292,299,300,301,302,304,305,307,308,309,312,313,314,315,316,317,318,321,],[77,-47,77,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,77,77,77,77,77,-46,-29,-30,-49,77,77,77,-106,-107,-108,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-109,77,77,77,77,77,77,77,77,-72,77,-86,77,77,77,77,77,77,77,77,77,77,-95,77,77,-73,-74,-80,-87,77,-91,77,-94,77,-93,77,77,-79,-90,77,-89,-92,-102,-88,]),'FALSE':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,99,101,102,107,108,132,133,138,139,140,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,195,204,207,231,232,233,234,240,250,251,253,255,258,261,263,269,273,274,278,279,280,281,282,284,291,292,299,300,301,302,304,305,307,308,309,312,313,314,315,316,317,318,321,],[78,-47,78,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,78,78,78,78,78,-46,-29,-30,-49,78,78,78,-106,-107,-108,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-109,78,78,78,78,78,78,78,78,-72,78,-86,78,78,78,78,78,78,78,78,78,78,-95,78,78,-73,-74,-80,-87,78,-91,78,-94,78,-93,78,78,-79,-90,78,-89,-92,-102,-88,]),'NULL':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,99,101,102,107,108,132,133,138,139,140,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,195,204,207,231,232,233,234,240,250,251,253,255,258,261,263,269,273,274,278,279,280,281,282,284,291,292,299,300,301,302,304,305,307,308,309,312,313,314,315,316,317,318,321,],[79,-47,79,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,79,79,79,79,79,-46,-29,-30,-49,79,79,79,-106,-107,-108,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-109,79,79,79,79,79,79,79,79,-72,79,-86,79,79,79,79,79,79,79,79,79,79,-95,79,79,-73,-74,-80,-87,79,-91,79,-94,79,-93,79,79,-79,-90,79,-89,-92,-102,-88,]),'INTNUM':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,99,101,102,107,108,132,133,138,139,140,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,195,204,207,231,232,233,234,240,250,251,253,255,258,261,263,269,273,274,278,279,280,281,282,284,291,292,299,300,301,302,304,305,307,308,309,312,313,314,315,316,317,318,321,],[80,-47,80,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,80,80,80,80,80,-46,-29,-30,-49,80,80,80,-106,-107,-108,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-109,80,80,80,80,80,80,80,80,-72,80,-86,80,80,80,80,80,80,80,80,80,80,-95,80,80,-73,-74,-80,-87,80,-91,80,-94,80,-93,80,80,-79,-90,80,-89,-92,-102,-88,]),'HEXADECIMALNUM':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,99,101,102,107,108,132,133,138,139,140,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,195,204,207,231,232,233,234,240,250,251,253,255,258,261,263,269,273,274,278,279,280,281,282,284,291,292,299,300,301,302,304,305,307,308,309,312,313,314,315,316,317,318,321,],[81,-47,81,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,81,81,81,81,81,-46,-29,-30,-49,81,81,81,-106,-107,-108,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-109,81,81,81,81,81,81,81,81,-72,81,-86,81,81,81,81,81,81,81,81,81,81,-95,81,81,-73,-74,-80,-87,81,-91,81,-94,81,-93,81,81,-79,-90,81,-89,-92,-102,-88,]),'BINARYNUM':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,99,101,102,107,108,132,133,138,139,140,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,195,204,207,231,232,233,234,240,250,251,253,255,258,261,263,269,273,274,278,279,280,281,282,284,291,292,299,300,301,302,304,305,307,308,309,312,313,314,315,316,317,318,321,],[82,-47,82,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,82,82,82,82,82,-46,-29,-30,-49,82,82,82,-106,-107,-108,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-109,82,82,82,82,82,82,82,82,-72,82,-86,82,82,82,82,82,82,82,82,82,82,-95,82,82,-73,-74,-80,-87,82,-91,82,-94,82,-93,82,82,-79,-90,82,-89,-92,-102,-88,]),'FLOATNUM':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,99,101,102,107,108,132,133,138,139,140,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,195,204,207,231,232,233,234,240,250,251,253,255,258,261,263,269,273,274,278,279,280,281,282,284,291,292,299,300,301,302,304,305,307,308,309,312,313,314,315,316,317,318,321,],[83,-47,83,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,83,83,83,83,83,-46,-29,-30,-49,83,83,83,-106,-107,-108,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,-109,83,83,83,83,83,83,83,83,-72,83,-86,83,83,83,83,83,83,83,83,83,83,-95,83,83,-73,-74,-80,-87,83,-91,83,-94,83,-93,83,83,-79,-90,83,-89,-92,-102,-88,]),'DOUBLENUM':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,99,101,102,107,108,132,133,138,139,140,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,195,204,207,231,232,233,234,240,250,251,253,255,258,261,263,269,273,274,278,279,280,281,282,284,291,292,299,300,301,302,304,305,307,308,309,312,313,314,315,316,317,318,321,],[84,-47,84,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,84,84,84,84,84,-46,-29,-30,-49,84,84,84,-106,-107,-108,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-109,84,84,84,84,84,84,84,84,-72,84,-86,84,84,84,84,84,84,84,84,84,84,-95,84,84,-73,-74,-80,-87,84,-91,84,-94,84,-93,84,84,-79,-90,84,-89,-92,-102,-88,]),'DECIMALNUM':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,99,101,102,107,108,132,133,138,139,140,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,195,204,207,231,232,233,234,240,250,251,253,255,258,261,263,269,273,274,278,279,280,281,282,284,291,292,299,300,301,302,304,305,307,308,309,312,313,314,315,316,317,318,321,],[85,-47,85,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,85,85,85,85,85,-46,-29,-30,-49,85,85,85,-106,-107,-108,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,-109,85,85,85,85,85,85,85,85,-72,85,-86,85,85,85,85,85,85,85,85,85,85,-95,85,85,-73,-74,-80,-87,85,-91,85,-94,85,-93,85,85,-79,-90,85,-89,-92,-102,-88,]),'CHARLITERAL':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,99,101,102,107,108,132,133,138,139,140,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,195,204,207,231,232,233,234,240,250,251,253,255,258,261,263,269,273,274,278,279,280,281,282,284,291,292,299,300,301,302,304,305,307,308,309,312,313,314,315,316,317,318,321,],[86,-47,86,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,86,86,86,86,86,-46,-29,-30,-49,86,86,86,-106,-107,-108,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-109,86,86,86,86,86,86,86,86,-72,86,-86,86,86,86,86,86,86,86,86,86,86,-95,86,86,-73,-74,-80,-87,86,-91,86,-94,86,-93,86,86,-79,-90,86,-89,-92,-102,-88,]),'STRINGLITERAL':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,99,101,102,107,108,132,133,138,139,140,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,195,204,207,231,232,233,234,240,250,251,253,255,258,261,263,269,273,274,278,279,280,281,282,284,291,292,299,300,301,302,304,305,307,308,309,312,313,314,315,316,317,318,321,],[87,-47,87,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,87,87,87,87,87,-46,-29,-30,-49,87,87,87,-106,-107,-108,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-109,87,87,87,87,87,87,87,87,-72,87,-86,87,87,87,87,87,87,87,87,87,87,-95,87,87,-73,-74,-80,-87,87,-91,87,-94,87,-93,87,87,-79,-90,87,-89,-92,-102,-88,]),'THIS':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,99,101,102,107,108,132,133,138,139,140,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,195,204,207,231,232,233,234,240,250,251,253,255,258,261,263,269,273,274,278,279,280,281,282,284,291,292,299,300,301,302,304,305,307,308,309,312,313,314,315,316,317,318,321,],[90,-47,90,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,90,90,90,90,90,-46,-29,-30,-49,90,90,90,-106,-107,-108,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-109,90,90,90,90,90,90,90,90,-72,90,-86,90,90,90,90,90,90,90,90,90,90,-95,90,90,-73,-74,-80,-87,90,-91,90,-94,90,-93,90,90,-79,-90,90,-89,-92,-102,-88,]),'TYPEOF':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,99,101,102,107,108,132,133,138,139,140,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,195,204,207,231,232,233,234,240,250,251,253,255,258,261,263,269,273,274,278,279,280,281,282,284,291,292,299,300,301,302,304,305,307,308,309,312,313,314,315,316,317,318,321,],[94,-47,94,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,94,94,94,94,94,-46,-29,-30,-49,94,94,94,-106,-107,-108,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-109,94,94,94,94,94,94,94,94,-72,94,-86,94,94,94,94,94,94,94,94,94,94,-95,94,94,-73,-74,-80,-87,94,-91,94,-94,94,-93,94,94,-79,-90,94,-89,-92,-102,-88,]),'SIZEOF':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,99,101,102,107,108,132,133,138,139,140,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,195,204,207,231,232,233,234,240,250,251,253,255,258,261,263,269,273,274,278,279,280,281,282,284,291,292,299,300,301,302,304,305,307,308,309,312,313,314,315,316,317,318,321,],[95,-47,95,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,95,95,95,95,95,-46,-29,-30,-49,95,95,95,-106,-107,-108,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-109,95,95,95,95,95,95,95,95,-72,95,-86,95,95,95,95,95,95,95,95,95,95,-95,95,95,-73,-74,-80,-87,95,-91,95,-94,95,-93,95,95,-79,-90,95,-89,-92,-102,-88,]),'DEFAULT':([23,27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,60,63,69,73,74,99,100,101,102,107,108,132,133,138,139,140,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,191,195,204,207,231,232,233,234,240,250,251,252,253,255,258,261,263,269,272,273,274,278,279,280,281,282,284,291,292,294,295,299,300,301,302,304,305,307,308,309,312,313,314,315,316,317,318,321,],[96,-47,96,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,96,96,96,96,96,-46,-26,-29,-30,-49,96,96,96,-106,-107,-108,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-109,96,96,96,96,96,96,96,96,-72,96,275,-86,96,96,96,96,96,275,296,96,96,96,96,-95,96,96,-73,-74,-77,-78,-80,-87,96,-91,96,-94,96,-93,96,96,-79,-90,96,-89,-92,-102,-88,]),'CASE':([27,28,29,30,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,99,100,101,102,107,138,139,140,191,250,252,253,272,273,281,291,292,294,295,299,300,302,305,308,313,314,316,317,318,321,],[-47,-25,-27,-28,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,-46,-26,-29,-30,-49,-106,-107,-108,-109,-72,274,-86,274,274,-95,-73,-74,-77,-78,-80,-87,-91,-94,-93,-79,-90,-89,-92,-102,-88,]),'ELSE':([27,32,34,35,36,37,38,39,43,44,45,46,47,48,49,50,51,99,107,138,139,140,191,250,253,281,291,292,300,302,305,308,314,316,317,318,321,],[-47,-48,-40,-41,-42,-43,-44,-45,-70,-71,-82,-83,-84,-85,-103,-104,-105,-46,-49,-106,-107,-108,-109,269,-86,-95,-73,-74,-87,-91,-94,-93,-90,-89,-92,-102,-88,]),'LSB':([52,53,55,56,66,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,121,122,123,124,135,143,144,163,192,239,241,243,244,245,246,265,267,286,290,310,],[-127,-135,-133,-134,-124,149,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-127,-133,-134,-135,-124,-66,-67,-126,-128,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'EQUAL':([52,53,55,56,57,58,66,70,72,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,106,110,116,117,118,121,122,123,124,135,143,144,147,148,158,163,192,208,239,241,243,244,245,246,265,267,286,289,290,310,],[-127,-135,-133,-134,-145,-146,-124,-144,146,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,160,146,-144,-145,-146,-127,-133,-134,-135,-124,-66,-67,-68,-69,204,-126,-128,-148,-129,-57,-131,-137,-139,-141,-58,-59,-61,312,-60,-62,]),'STAR':([66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,116,117,118,121,122,123,124,131,135,143,144,147,148,163,192,208,211,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-182,-144,-145,-146,-127,-133,-134,-135,181,-124,-66,-67,-68,-69,-126,-128,-148,-182,181,181,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'SLASH':([66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,116,117,118,121,122,123,124,131,135,143,144,147,148,163,192,208,211,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-182,-144,-145,-146,-127,-133,-134,-135,182,-124,-66,-67,-68,-69,-126,-128,-148,-182,182,182,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'PERCENT':([66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,116,117,118,121,122,123,124,131,135,143,144,147,148,163,192,208,211,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-182,-144,-145,-146,-127,-133,-134,-135,183,-124,-66,-67,-68,-69,-126,-128,-148,-182,183,183,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'PLUS':([66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,116,117,118,121,122,123,124,130,131,135,143,144,147,148,163,192,208,211,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-182,-144,-145,-146,-127,-133,-134,-135,179,-178,-124,-66,-67,-68,-69,-126,-128,-148,-182,179,179,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'MINUS':([66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,116,117,118,121,122,123,124,130,131,135,143,144,147,148,163,192,208,211,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-182,-144,-145,-146,-127,-133,-134,-135,180,-178,-124,-66,-67,-68,-69,-126,-128,-148,-182,180,180,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'LSHIFT':([66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,116,117,118,121,122,123,124,129,130,131,135,143,144,147,148,163,192,208,211,218,219,220,221,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-182,-144,-145,-146,-127,-133,-134,-135,177,-175,-178,-124,-66,-67,-68,-69,-126,-128,-148,-182,177,177,177,177,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'RSHIFT':([66,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,110,116,117,118,121,122,123,124,129,130,131,135,143,144,147,148,163,192,208,211,218,219,220,221,223,224,225,226,227,228,229,239,241,243,244,245,246,265,267,286,290,310,],[-124,-112,-147,-113,-114,-115,-116,-117,-118,-119,-120,-121,-122,-123,-125,-130,-132,-136,-138,-140,-182,-144,-145,-146,-127,-133,-134,-135,178,-175,-178,-124,-66,-67,-68,-69,-126,-128,-148,-182,178,178,178,178,-173,-174,-176,-177,-179,-180,-181,-129,-57,-131,-137,-139,-141,-58,-59,-61,-60,-62,]),'IN':([238,],[263,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,21,]),'func_declaration':([0,2,],[2,2,]),'signature':([0,2,],[3,3,]),'type':([0,2,23,28,40,60,71,97,136,137,150,152,176,237,247,273,],[4,4,41,41,103,109,145,153,41,190,198,200,222,41,153,41,]),'class_type':([0,2,23,28,40,60,71,97,136,137,150,152,176,237,247,273,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'value_type':([0,2,23,28,40,60,71,97,136,137,150,151,152,176,237,247,273,],[7,7,7,7,7,7,7,7,7,7,7,199,7,7,7,7,7,]),'type_name':([0,2,23,28,40,60,71,97,136,137,150,152,176,237,247,273,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'integral_type':([0,2,23,28,40,60,71,97,136,137,150,151,152,176,237,247,273,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'floating_point_type':([0,2,23,28,40,60,71,97,136,137,150,151,152,176,237,247,273,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'block':([3,23,28,63,207,231,258,269,273,278,280,284,301,304,307,309,315,],[22,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'statement_list':([23,28,273,],[26,100,294,]),'statement':([23,28,273,],[28,28,28,]),'declaration_statement':([23,28,273,],[29,29,29,]),'embedded_statement':([23,28,63,207,231,258,269,273,278,280,284,301,304,307,309,315,],[30,30,134,250,253,281,291,30,302,305,308,314,316,317,318,321,]),'const_declaration':([23,28,273,],[31,31,31,]),'var_declaration':([23,28,136,237,273,],[33,33,189,189,33,]),'empty_statement':([23,28,63,207,231,258,269,273,278,280,284,301,304,307,309,315,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'exp_statement':([23,28,63,207,231,258,269,273,278,280,284,301,304,307,309,315,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'selection_statement':([23,28,63,207,231,258,269,273,278,280,284,301,304,307,309,315,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'iteration_statement':([23,28,63,207,231,258,269,273,278,280,284,301,304,307,309,315,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'jump_statement':([23,28,63,207,231,258,269,273,278,280,284,301,304,307,309,315,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'statement_exp':([23,28,63,207,231,234,255,258,261,269,273,278,279,280,282,284,301,304,307,309,315,],[42,42,42,42,42,260,260,42,260,42,42,42,260,42,260,42,42,42,42,42,42,]),'if_statement':([23,28,63,207,231,258,269,273,278,280,284,301,304,307,309,315,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'switch_statement':([23,28,63,207,231,258,269,273,278,280,284,301,304,307,309,315,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'while_statement':([23,28,63,207,231,258,269,273,278,280,284,301,304,307,309,315,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'do_statement':([23,28,63,207,231,258,269,273,278,280,284,301,304,307,309,315,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'for_statement':([23,28,63,207,231,258,269,273,278,280,284,301,304,307,309,315,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'foreach_statement':([23,28,63,207,231,258,269,273,278,280,284,301,304,307,309,315,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'break_statement':([23,28,63,207,231,258,269,273,278,280,284,301,304,307,309,315,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'continue_statement':([23,28,63,207,231,258,269,273,278,280,284,301,304,307,309,315,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'return_statement':([23,28,63,207,231,258,269,273,278,280,284,301,304,307,309,315,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'invocation_exp':([23,28,60,63,69,73,74,108,132,133,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,195,204,207,231,232,233,234,240,251,255,258,261,263,269,273,274,278,279,280,282,284,301,304,307,309,312,315,],[52,52,121,52,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,52,52,121,121,52,121,121,52,52,52,121,52,52,121,52,52,52,52,52,52,52,52,52,121,52,]),'object_creation_exp':([23,28,60,63,69,73,74,108,132,133,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,195,204,207,231,232,233,234,240,251,255,258,261,263,269,273,274,278,279,280,282,284,301,304,307,309,312,315,],[53,53,124,53,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,53,53,124,124,53,124,124,53,53,53,124,53,53,124,53,53,53,53,53,53,53,53,53,124,53,]),'assignment':([23,28,60,63,69,108,132,133,142,146,149,160,164,188,195,204,207,231,232,233,234,240,251,255,258,261,263,269,273,274,278,279,280,282,284,301,304,307,309,312,315,],[54,54,113,54,113,113,113,113,113,113,113,113,113,113,113,113,54,54,113,113,54,113,113,54,54,54,113,54,54,113,54,54,54,54,54,54,54,54,54,113,54,]),'post_increment_exp':([23,28,60,63,69,73,74,108,132,133,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,195,204,207,231,232,233,234,240,251,255,258,261,263,269,273,274,278,279,280,282,284,301,304,307,309,312,315,],[55,55,122,55,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,55,55,122,122,55,122,122,55,55,55,122,55,55,122,55,55,55,55,55,55,55,55,55,122,55,]),'post_decrement_exp':([23,28,60,63,69,73,74,108,132,133,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,195,204,207,231,232,233,234,240,251,255,258,261,263,269,273,274,278,279,280,282,284,301,304,307,309,312,315,],[56,56,123,56,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,56,56,123,123,56,123,123,56,56,56,123,56,56,123,56,56,56,56,56,56,56,56,56,123,56,]),'pre_increment_exp':([23,28,60,63,69,73,74,108,132,133,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,195,204,207,231,232,233,234,240,251,255,258,261,263,269,273,274,278,279,280,282,284,301,304,307,309,312,315,],[57,57,117,57,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,57,57,117,117,57,117,117,57,57,57,117,57,57,117,57,57,57,57,57,57,57,57,57,117,57,]),'pre_decrement_exp':([23,28,60,63,69,73,74,108,132,133,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,195,204,207,231,232,233,234,240,251,255,258,261,263,269,273,274,278,279,280,282,284,301,304,307,309,312,315,],[58,58,118,58,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,58,58,118,118,58,118,118,58,58,58,118,58,58,118,58,58,58,58,58,58,58,58,58,118,58,]),'primary_exp':([23,28,60,63,69,73,74,108,132,133,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,195,204,207,231,232,233,234,240,251,255,258,261,263,269,273,274,278,279,280,282,284,301,304,307,309,312,315,],[70,70,116,70,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,70,70,116,116,70,116,116,70,70,70,116,70,70,116,70,70,70,70,70,70,70,70,70,116,70,]),'unary_exp':([23,28,60,63,69,73,74,108,132,133,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,195,204,207,231,232,233,234,240,251,255,258,261,263,269,273,274,278,279,280,282,284,301,304,307,309,312,315,],[72,72,110,72,110,147,148,110,110,110,110,110,110,110,208,110,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,227,228,229,110,110,110,72,72,110,110,72,110,110,72,72,72,110,72,72,110,72,72,72,72,72,72,72,72,72,110,72,]),'primary_no_array_creation_exp':([23,28,60,63,69,73,74,108,132,133,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,195,204,207,231,232,233,234,240,251,255,258,261,263,269,273,274,278,279,280,282,284,301,304,307,309,312,315,],[75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'cast_exp':([23,28,60,63,69,73,74,108,132,133,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,195,204,207,231,232,233,234,240,251,255,258,261,263,269,273,274,278,279,280,282,284,301,304,307,309,312,315,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'parenthesized_exp':([23,28,60,63,69,73,74,108,132,133,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,195,204,207,231,232,233,234,240,251,255,258,261,263,269,273,274,278,279,280,282,284,301,304,307,309,312,315,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'element_access':([23,28,60,63,69,73,74,108,132,133,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,195,204,207,231,232,233,234,240,251,255,258,261,263,269,273,274,278,279,280,282,284,301,304,307,309,312,315,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'typeof_exp':([23,28,60,63,69,73,74,108,132,133,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,195,204,207,231,232,233,234,240,251,255,258,261,263,269,273,274,278,279,280,282,284,301,304,307,309,312,315,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'sizeof_exp':([23,28,60,63,69,73,74,108,132,133,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,195,204,207,231,232,233,234,240,251,255,258,261,263,269,273,274,278,279,280,282,284,301,304,307,309,312,315,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'default_exp':([23,28,60,63,69,73,74,108,132,133,142,146,149,160,162,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,181,182,183,188,195,204,207,231,232,233,234,240,251,255,258,261,263,269,273,274,278,279,280,282,284,301,304,307,309,312,315,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'var_declarators':([41,159,],[104,205,]),'var_declarator':([41,159,],[105,105,]),'exp':([60,69,108,132,133,142,146,149,160,164,188,195,204,232,233,240,251,263,274,312,],[111,141,161,184,185,194,196,197,206,209,236,194,249,254,236,194,270,285,298,320,]),'non_assignment_exp':([60,69,108,132,133,142,146,149,160,164,188,195,204,232,233,240,251,263,274,312,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'conditional_exp':([60,69,108,132,133,142,146,149,160,164,188,195,204,232,233,240,251,263,274,312,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'conditional_or_exp':([60,69,108,132,133,142,146,149,160,164,188,195,204,232,233,240,251,263,274,312,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'conditional_and_exp':([60,69,108,132,133,142,146,149,160,164,165,188,195,204,232,233,240,251,263,274,312,],[119,119,119,119,119,119,119,119,119,119,210,119,119,119,119,119,119,119,119,119,119,]),'inclusive_or_exp':([60,69,108,132,133,142,146,149,160,164,165,166,188,195,204,232,233,240,251,263,274,312,],[120,120,120,120,120,120,120,120,120,120,120,212,120,120,120,120,120,120,120,120,120,120,]),'exclusive_or_exp':([60,69,108,132,133,142,146,149,160,164,165,166,167,188,195,204,232,233,240,251,263,274,312,],[125,125,125,125,125,125,125,125,125,125,125,125,213,125,125,125,125,125,125,125,125,125,125,]),'and_exp':([60,69,108,132,133,142,146,149,160,164,165,166,167,168,188,195,204,232,233,240,251,263,274,312,],[126,126,126,126,126,126,126,126,126,126,126,126,126,214,126,126,126,126,126,126,126,126,126,126,]),'equality_exp':([60,69,108,132,133,142,146,149,160,164,165,166,167,168,169,188,195,204,232,233,240,251,263,274,312,],[127,127,127,127,127,127,127,127,127,127,127,127,127,127,215,127,127,127,127,127,127,127,127,127,127,]),'relational_exp':([60,69,108,132,133,142,146,149,160,164,165,166,167,168,169,170,171,188,195,204,232,233,240,251,263,274,312,],[128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,216,217,128,128,128,128,128,128,128,128,128,128,]),'shift_exp':([60,69,108,132,133,142,146,149,160,164,165,166,167,168,169,170,171,172,173,174,175,188,195,204,232,233,240,251,263,274,312,],[129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,218,219,220,221,129,129,129,129,129,129,129,129,129,129,]),'additive_exp':([60,69,108,132,133,142,146,149,160,164,165,166,167,168,169,170,171,172,173,174,175,177,178,188,195,204,232,233,240,251,263,274,312,],[130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,223,224,130,130,130,130,130,130,130,130,130,130,]),'multiplicative_exp':([60,69,108,132,133,142,146,149,160,164,165,166,167,168,169,170,171,172,173,174,175,177,178,179,180,188,195,204,232,233,240,251,263,274,312,],[131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,225,226,131,131,131,131,131,131,131,131,131,131,]),'param_list':([97,247,],[154,268,]),'const_declarators':([103,203,],[156,248,]),'const_declarator':([103,203,],[157,157,]),'for_initializer':([136,237,],[187,262,]),'arg_list':([142,195,240,],[193,242,264,]),'for_condition':([188,233,],[235,256,]),'for_iterator':([234,255,261,279,],[257,277,283,303,]),'statement_exp_list':([234,255,261,279,282,],[259,259,259,259,306,]),'object_initializer':([241,267,],[265,290,]),'switch_body':([252,272,],[271,293,]),'switch_section':([252,272,273,],[272,272,295,]),'switch_label':([252,272,273,],[273,273,273,]),'member_initializer_list':([266,311,],[287,319,]),'member_initializer':([266,311,],[288,288,]),'pattern':([274,],[297,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> func_declaration','program',1,'p_program','LanguageParser.py',9),
  ('program -> func_declaration program','program',2,'p_program','LanguageParser.py',10),
  ('type_name -> ID','type_name',1,'p_type_name','LanguageParser.py',17),
  ('type_name -> type_name DOT ID','type_name',3,'p_type_name','LanguageParser.py',18),
  ('type -> class_type','type',1,'p_type','LanguageParser.py',25),
  ('type -> value_type','type',1,'p_type','LanguageParser.py',26),
  ('class_type -> OBJECT','class_type',1,'p_class_type','LanguageParser.py',33),
  ('class_type -> STRING','class_type',1,'p_class_type','LanguageParser.py',34),
  ('class_type -> type_name','class_type',1,'p_class_type','LanguageParser.py',35),
  ('value_type -> integral_type','value_type',1,'p_value_type','LanguageParser.py',44),
  ('value_type -> floating_point_type','value_type',1,'p_value_type','LanguageParser.py',45),
  ('value_type -> BOOL','value_type',1,'p_value_type','LanguageParser.py',46),
  ('value_type -> VOID','value_type',1,'p_value_type','LanguageParser.py',47),
  ('integral_type -> INT','integral_type',1,'p_integral_type_int','LanguageParser.py',58),
  ('integral_type -> LONG','integral_type',1,'p_integral_type_long','LanguageParser.py',62),
  ('integral_type -> CHAR','integral_type',1,'p_integral_type_char','LanguageParser.py',66),
  ('floating_point_type -> FLOAT','floating_point_type',1,'p_integral_type_float','LanguageParser.py',70),
  ('floating_point_type -> DOUBLE','floating_point_type',1,'p_integral_type_double','LanguageParser.py',74),
  ('floating_point_type -> DECIMAL','floating_point_type',1,'p_integral_type_decimal','LanguageParser.py',78),
  ('func_declaration -> signature block','func_declaration',2,'p_func_declaration','LanguageParser.py',82),
  ('signature -> type ID LPAREN param_list RPAREN','signature',5,'p_signature','LanguageParser.py',86),
  ('signature -> type ID LPAREN RPAREN','signature',4,'p_signature','LanguageParser.py',87),
  ('param_list -> type ID','param_list',2,'p_param_list','LanguageParser.py',94),
  ('param_list -> type ID COMMA param_list','param_list',4,'p_param_list','LanguageParser.py',95),
  ('statement_list -> statement','statement_list',1,'p_statement_list','LanguageParser.py',102),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','LanguageParser.py',103),
  ('statement -> declaration_statement','statement',1,'p_statement','LanguageParser.py',110),
  ('statement -> embedded_statement','statement',1,'p_statement','LanguageParser.py',111),
  ('declaration_statement -> const_declaration SEMI','declaration_statement',2,'p_declaration_stmt','LanguageParser.py',118),
  ('declaration_statement -> var_declaration SEMI','declaration_statement',2,'p_declaration_stmt','LanguageParser.py',119),
  ('const_declaration -> CONST type const_declarators','const_declaration',3,'p_const_declaration','LanguageParser.py',126),
  ('const_declarators -> const_declarator','const_declarators',1,'p_const_declarators','LanguageParser.py',130),
  ('const_declarators -> const_declarator COMMA const_declarators','const_declarators',3,'p_const_declarators','LanguageParser.py',131),
  ('const_declarator -> ID EQUAL exp','const_declarator',3,'p_const_declarator','LanguageParser.py',138),
  ('var_declaration -> type var_declarators','var_declaration',2,'p_var_declaration','LanguageParser.py',142),
  ('var_declarators -> var_declarator','var_declarators',1,'p_var_declarators','LanguageParser.py',146),
  ('var_declarators -> var_declarator COMMA var_declarators','var_declarators',3,'p_var_declarators','LanguageParser.py',147),
  ('var_declarator -> ID','var_declarator',1,'p_var_declarator','LanguageParser.py',154),
  ('var_declarator -> ID EQUAL exp','var_declarator',3,'p_var_declarator','LanguageParser.py',155),
  ('embedded_statement -> block','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',162),
  ('embedded_statement -> empty_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',163),
  ('embedded_statement -> exp_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',164),
  ('embedded_statement -> selection_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',165),
  ('embedded_statement -> iteration_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',166),
  ('embedded_statement -> jump_statement','embedded_statement',1,'p_embedded_stmt','LanguageParser.py',167),
  ('block -> LBRACE statement_list RBRACE','block',3,'p_block','LanguageParser.py',182),
  ('block -> LBRACE RBRACE','block',2,'p_block','LanguageParser.py',183),
  ('empty_statement -> SEMI','empty_statement',1,'p_empty_stmt','LanguageParser.py',190),
  ('exp_statement -> statement_exp SEMI','exp_statement',2,'p_exp_statement','LanguageParser.py',194),
  ('statement_exp -> invocation_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',198),
  ('statement_exp -> object_creation_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',199),
  ('statement_exp -> assignment','statement_exp',1,'p_statement_exp','LanguageParser.py',200),
  ('statement_exp -> post_increment_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',201),
  ('statement_exp -> post_decrement_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',202),
  ('statement_exp -> pre_increment_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',203),
  ('statement_exp -> pre_decrement_exp','statement_exp',1,'p_statement_exp','LanguageParser.py',204),
  ('object_creation_exp -> NEW type LPAREN RPAREN','object_creation_exp',4,'p_object_creation','LanguageParser.py',221),
  ('object_creation_exp -> NEW type LPAREN RPAREN object_initializer','object_creation_exp',5,'p_object_creation','LanguageParser.py',222),
  ('object_creation_exp -> NEW type LPAREN arg_list RPAREN','object_creation_exp',5,'p_object_creation','LanguageParser.py',223),
  ('object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer','object_creation_exp',6,'p_object_creation','LanguageParser.py',224),
  ('object_initializer -> LBRACE RBRACE','object_initializer',2,'p_object_initializer','LanguageParser.py',236),
  ('object_initializer -> LBRACE member_initializer_list RBRACE','object_initializer',3,'p_object_initializer','LanguageParser.py',237),
  ('member_initializer_list -> member_initializer','member_initializer_list',1,'p_member_initializer_list','LanguageParser.py',244),
  ('member_initializer_list -> member_initializer COMMA member_initializer_list','member_initializer_list',3,'p_member_initializer_list','LanguageParser.py',245),
  ('member_initializer -> ID EQUAL exp','member_initializer',3,'p_member_initializer','LanguageParser.py',252),
  ('post_increment_exp -> primary_exp PLUSPLUS','post_increment_exp',2,'p_post_increment_exp','LanguageParser.py',256),
  ('post_decrement_exp -> primary_exp MINUSMINUS','post_decrement_exp',2,'p_post_decrement_exp','LanguageParser.py',260),
  ('pre_increment_exp -> PLUSPLUS unary_exp','pre_increment_exp',2,'p_pre_increment_exp','LanguageParser.py',264),
  ('pre_decrement_exp -> MINUSMINUS unary_exp','pre_decrement_exp',2,'p_pre_decrement_exp','LanguageParser.py',268),
  ('selection_statement -> if_statement','selection_statement',1,'p_selection_statement','LanguageParser.py',272),
  ('selection_statement -> switch_statement','selection_statement',1,'p_selection_statement','LanguageParser.py',273),
  ('if_statement -> IF LPAREN exp RPAREN embedded_statement','if_statement',5,'p_if_statement','LanguageParser.py',280),
  ('if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement','if_statement',7,'p_if_statement','LanguageParser.py',281),
  ('switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE','switch_statement',7,'p_switch_statement','LanguageParser.py',288),
  ('switch_body -> switch_section','switch_body',1,'p_switch_body','LanguageParser.py',292),
  ('switch_body -> switch_section switch_body','switch_body',2,'p_switch_body','LanguageParser.py',293),
  ('switch_section -> switch_label statement_list','switch_section',2,'p_switch_section_simple','LanguageParser.py',300),
  ('switch_section -> switch_label switch_section','switch_section',2,'p_switch_section_compound','LanguageParser.py',304),
  ('switch_label -> CASE pattern COLON','switch_label',3,'p_switch_label','LanguageParser.py',308),
  ('switch_label -> DEFAULT COLON','switch_label',2,'p_switch_label','LanguageParser.py',309),
  ('pattern -> exp','pattern',1,'p_pattern','LanguageParser.py',316),
  ('iteration_statement -> while_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',320),
  ('iteration_statement -> do_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',321),
  ('iteration_statement -> for_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',322),
  ('iteration_statement -> foreach_statement','iteration_statement',1,'p_iteration_statement','LanguageParser.py',323),
  ('while_statement -> WHILE LPAREN exp RPAREN embedded_statement','while_statement',5,'p_while_statement','LanguageParser.py',334),
  ('do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI','do_statement',7,'p_do_statement','LanguageParser.py',338),
  ('for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement','for_statement',9,'p_for_statement_full','LanguageParser.py',342),
  ('for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement','for_statement',8,'p_for_statement_12','LanguageParser.py',346),
  ('for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement','for_statement',8,'p_for_statement_13','LanguageParser.py',350),
  ('for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement','for_statement',7,'p_for_statement_1','LanguageParser.py',354),
  ('for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement','for_statement',8,'p_for_statement_23','LanguageParser.py',358),
  ('for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement','for_statement',7,'p_for_statement_2','LanguageParser.py',362),
  ('for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement','for_statement',7,'p_for_statement_3','LanguageParser.py',366),
  ('for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement','for_statement',6,'p_for_statement_empty','LanguageParser.py',370),
  ('for_initializer -> var_declaration','for_initializer',1,'p_for_initializer','LanguageParser.py',374),
  ('for_initializer -> var_declaration COMMA for_initializer','for_initializer',3,'p_for_initializer','LanguageParser.py',375),
  ('for_condition -> exp','for_condition',1,'p_for_condition','LanguageParser.py',382),
  ('for_iterator -> statement_exp_list','for_iterator',1,'p_for_iterator','LanguageParser.py',386),
  ('statement_exp_list -> statement_exp','statement_exp_list',1,'p_statement_exp_list','LanguageParser.py',390),
  ('statement_exp_list -> statement_exp COMMA statement_exp_list','statement_exp_list',3,'p_statement_exp_list','LanguageParser.py',391),
  ('foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement','foreach_statement',8,'p_foreach_statement','LanguageParser.py',398),
  ('jump_statement -> break_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',402),
  ('jump_statement -> continue_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',403),
  ('jump_statement -> return_statement','jump_statement',1,'p_jump_statement','LanguageParser.py',404),
  ('break_statement -> BREAK SEMI','break_statement',2,'p_break_statement','LanguageParser.py',413),
  ('continue_statement -> CONTINUE SEMI','continue_statement',2,'p_continue_statement','LanguageParser.py',417),
  ('return_statement -> RETURN SEMI','return_statement',2,'p_return_statement','LanguageParser.py',421),
  ('return_statement -> RETURN exp SEMI','return_statement',3,'p_return_statement','LanguageParser.py',422),
  ('arg_list -> exp','arg_list',1,'p_arg_list','LanguageParser.py',429),
  ('arg_list -> exp COMMA arg_list','arg_list',3,'p_arg_list','LanguageParser.py',430),
  ('primary_exp -> primary_no_array_creation_exp','primary_exp',1,'p_primary_exp','LanguageParser.py',437),
  ('primary_no_array_creation_exp -> TRUE','primary_no_array_creation_exp',1,'p_boolean_exp','LanguageParser.py',441),
  ('primary_no_array_creation_exp -> FALSE','primary_no_array_creation_exp',1,'p_boolean_exp','LanguageParser.py',442),
  ('primary_no_array_creation_exp -> NULL','primary_no_array_creation_exp',1,'p_null_exp','LanguageParser.py',446),
  ('primary_no_array_creation_exp -> INTNUM','primary_no_array_creation_exp',1,'p_intnum_exp','LanguageParser.py',450),
  ('primary_no_array_creation_exp -> HEXADECIMALNUM','primary_no_array_creation_exp',1,'p_hexnum_exp','LanguageParser.py',454),
  ('primary_no_array_creation_exp -> BINARYNUM','primary_no_array_creation_exp',1,'p_binnum_exp','LanguageParser.py',458),
  ('primary_no_array_creation_exp -> FLOATNUM','primary_no_array_creation_exp',1,'p_floatnum_exp','LanguageParser.py',462),
  ('primary_no_array_creation_exp -> DOUBLENUM','primary_no_array_creation_exp',1,'p_doublenum_exp','LanguageParser.py',466),
  ('primary_no_array_creation_exp -> DECIMALNUM','primary_no_array_creation_exp',1,'p_decimalnum_exp','LanguageParser.py',470),
  ('primary_no_array_creation_exp -> CHARLITERAL','primary_no_array_creation_exp',1,'p_charliteral_exp','LanguageParser.py',474),
  ('primary_no_array_creation_exp -> STRINGLITERAL','primary_no_array_creation_exp',1,'p_stringliteral_exp','LanguageParser.py',478),
  ('primary_no_array_creation_exp -> ID','primary_no_array_creation_exp',1,'p_id_exp','LanguageParser.py',482),
  ('primary_no_array_creation_exp -> parenthesized_exp','primary_no_array_creation_exp',1,'p_primary_parenthesized_exp','LanguageParser.py',487),
  ('parenthesized_exp -> LPAREN exp RPAREN','parenthesized_exp',3,'p_parenthesized_exp','LanguageParser.py',491),
  ('primary_no_array_creation_exp -> invocation_exp','primary_no_array_creation_exp',1,'p_primary_invocation_exp','LanguageParser.py',503),
  ('invocation_exp -> primary_exp LPAREN RPAREN','invocation_exp',3,'p_invocation_exp','LanguageParser.py',507),
  ('invocation_exp -> primary_exp LPAREN arg_list RPAREN','invocation_exp',4,'p_invocation_exp','LanguageParser.py',508),
  ('primary_no_array_creation_exp -> element_access','primary_no_array_creation_exp',1,'p_primary_element_access_exp','LanguageParser.py',515),
  ('element_access -> primary_no_array_creation_exp LSB exp RSB','element_access',4,'p_element_access_exp','LanguageParser.py',519),
  ('primary_no_array_creation_exp -> THIS','primary_no_array_creation_exp',1,'p_this_exp','LanguageParser.py',523),
  ('primary_no_array_creation_exp -> post_increment_exp','primary_no_array_creation_exp',1,'p_primary_post_increment_exp','LanguageParser.py',528),
  ('primary_no_array_creation_exp -> post_decrement_exp','primary_no_array_creation_exp',1,'p_primary_post_decrement_exp','LanguageParser.py',533),
  ('primary_no_array_creation_exp -> object_creation_exp','primary_no_array_creation_exp',1,'p_primary_object_creation_exp','LanguageParser.py',538),
  ('primary_no_array_creation_exp -> typeof_exp','primary_no_array_creation_exp',1,'p_primary_typeof_exp','LanguageParser.py',542),
  ('typeof_exp -> TYPEOF LPAREN type RPAREN','typeof_exp',4,'p_typeof_exp','LanguageParser.py',546),
  ('primary_no_array_creation_exp -> sizeof_exp','primary_no_array_creation_exp',1,'p_primary_sizeof_exp','LanguageParser.py',550),
  ('sizeof_exp -> SIZEOF LPAREN value_type RPAREN','sizeof_exp',4,'p_sizeof_exp','LanguageParser.py',554),
  ('primary_no_array_creation_exp -> default_exp','primary_no_array_creation_exp',1,'p_primary_default_exp','LanguageParser.py',558),
  ('default_exp -> DEFAULT LPAREN type RPAREN','default_exp',4,'p_default_exp','LanguageParser.py',562),
  ('exp_list -> exp','exp_list',1,'p_exp_list','LanguageParser.py',566),
  ('exp_list -> exp_list COMMA exp','exp_list',3,'p_exp_list','LanguageParser.py',567),
  ('unary_exp -> primary_exp','unary_exp',1,'p_unary_primary_exp','LanguageParser.py',574),
  ('unary_exp -> pre_increment_exp','unary_exp',1,'p_unary_pre_increment_exp','LanguageParser.py',578),
  ('unary_exp -> pre_decrement_exp','unary_exp',1,'p_unary_pre_decrement_exp','LanguageParser.py',582),
  ('unary_exp -> cast_exp','unary_exp',1,'p_unary_p_cast_exp','LanguageParser.py',586),
  ('cast_exp -> LPAREN type RPAREN unary_exp','cast_exp',4,'p_cast_exp','LanguageParser.py',590),
  ('exp -> non_assignment_exp','exp',1,'p_exp_non_assignment_exp','LanguageParser.py',594),
  ('exp -> assignment','exp',1,'p_exp_assignment_exp','LanguageParser.py',598),
  ('non_assignment_exp -> conditional_exp','non_assignment_exp',1,'p_non_assignment_conditional_exp','LanguageParser.py',602),
  ('conditional_exp -> conditional_or_exp HOOK exp COLON exp','conditional_exp',5,'p_conditional_exp','LanguageParser.py',606),
  ('conditional_exp -> conditional_or_exp','conditional_exp',1,'p_conditional_exp','LanguageParser.py',607),
  ('conditional_or_exp -> conditional_or_exp PIPEPIPE conditional_and_exp','conditional_or_exp',3,'p_conditional_or_exp','LanguageParser.py',614),
  ('conditional_or_exp -> conditional_and_exp','conditional_or_exp',1,'p_conditional_or_exp','LanguageParser.py',615),
  ('conditional_and_exp -> conditional_and_exp AMPERAMPER inclusive_or_exp','conditional_and_exp',3,'p_conditional_and_exp','LanguageParser.py',622),
  ('conditional_and_exp -> inclusive_or_exp','conditional_and_exp',1,'p_conditional_and_exp','LanguageParser.py',623),
  ('inclusive_or_exp -> inclusive_or_exp PIPE exclusive_or_exp','inclusive_or_exp',3,'p_inclusive_or_exp','LanguageParser.py',630),
  ('inclusive_or_exp -> exclusive_or_exp','inclusive_or_exp',1,'p_inclusive_or_exp','LanguageParser.py',631),
  ('exclusive_or_exp -> exclusive_or_exp CIRCUMFLEX and_exp','exclusive_or_exp',3,'p_exclusive_or_exp','LanguageParser.py',638),
  ('exclusive_or_exp -> and_exp','exclusive_or_exp',1,'p_exclusive_or_exp','LanguageParser.py',639),
  ('and_exp -> and_exp AMPER equality_exp','and_exp',3,'p_and_exp','LanguageParser.py',646),
  ('and_exp -> equality_exp','and_exp',1,'p_and_exp','LanguageParser.py',647),
  ('equality_exp -> equality_exp EQEQUAL relational_exp','equality_exp',3,'p_equality_exp','LanguageParser.py',654),
  ('equality_exp -> equality_exp NOTEQUAL relational_exp','equality_exp',3,'p_equality_exp','LanguageParser.py',655),
  ('equality_exp -> relational_exp','equality_exp',1,'p_equality_exp','LanguageParser.py',656),
  ('relational_exp -> relational_exp LT shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',665),
  ('relational_exp -> relational_exp GT shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',666),
  ('relational_exp -> relational_exp LEQ shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',667),
  ('relational_exp -> relational_exp GEQ shift_exp','relational_exp',3,'p_relational_exp','LanguageParser.py',668),
  ('relational_exp -> relational_exp IS type','relational_exp',3,'p_relational_exp','LanguageParser.py',669),
  ('relational_exp -> shift_exp','relational_exp',1,'p_relational_exp','LanguageParser.py',670),
  ('shift_exp -> shift_exp LSHIFT additive_exp','shift_exp',3,'p_shift_exp','LanguageParser.py',685),
  ('shift_exp -> shift_exp RSHIFT additive_exp','shift_exp',3,'p_shift_exp','LanguageParser.py',686),
  ('shift_exp -> additive_exp','shift_exp',1,'p_shift_exp','LanguageParser.py',687),
  ('additive_exp -> additive_exp PLUS multiplicative_exp','additive_exp',3,'p_additive_exp','LanguageParser.py',696),
  ('additive_exp -> additive_exp MINUS multiplicative_exp','additive_exp',3,'p_additive_exp','LanguageParser.py',697),
  ('additive_exp -> multiplicative_exp','additive_exp',1,'p_additive_exp','LanguageParser.py',698),
  ('multiplicative_exp -> multiplicative_exp STAR unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',707),
  ('multiplicative_exp -> multiplicative_exp SLASH unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',708),
  ('multiplicative_exp -> multiplicative_exp PERCENT unary_exp','multiplicative_exp',3,'p_multiplicative_exp','LanguageParser.py',709),
  ('multiplicative_exp -> unary_exp','multiplicative_exp',1,'p_multiplicative_exp','LanguageParser.py',710),
  ('assignment -> unary_exp EQUAL exp','assignment',3,'p_assignment_simple','LanguageParser.py',721),
]
