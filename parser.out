Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPER
    AMPERAMPER
    AMPEREQUAL
    BANG
    CATCH
    CIRCUMEQUAL
    CIRCUMFLEX
    CLASS
    ENUM
    EQEQUAL
    FINALLY
    GEQ
    GT
    HOOKHOOK
    HOOKHOOKEQUAL
    INTERFACE
    IS
    LEQ
    LSHIFT
    LSHIFTEQUAL
    LT
    MINUS
    MINUSEQUAL
    NAMESPACE
    NOTEQUAL
    OUT
    OVERRIDE
    PARAMS
    PERCENT
    PERCENTEQUAL
    PIPE
    PIPEEQUAL
    PIPEPIPE
    PLUS
    PLUSEQUAL
    PRIVATE
    PROTECTED
    PUBLIC
    READONLY
    REF
    RSHIFT
    RSHIFTEQUAL
    SHORT
    SIZEOF
    SLASH
    SLASHEQUAL
    STAR
    STAREQUAL
    STATIC
    STRUCT
    THROW
    TILDE
    TRY
    TYPEOF
    UINT
    ULONG
    USHORT
    VOID

Grammar

Rule 0     S' -> type_name
Rule 1     type_name -> ID
Rule 2     type_name -> type_name DOT ID
Rule 3     type -> class_type
Rule 4     type -> interface_type
Rule 5     type -> value_type
Rule 6     class_type -> type_name
Rule 7     class_type -> OBJECT
Rule 8     class_type -> STRING
Rule 9     interface_type -> type_name
Rule 10    value_type -> integral_type
Rule 11    value_type -> floating_point_type
Rule 12    value_type -> BOOL
Rule 13    integral_type -> INT
Rule 14    integral_type -> LONG
Rule 15    integral_type -> CHAR
Rule 16    floating_point_type -> FLOAT
Rule 17    floating_point_type -> DOUBLE
Rule 18    floating_point_type -> DECIMAL
Rule 19    program -> func_declaration
Rule 20    program -> func_declaration program
Rule 21    func_declaration -> signature block
Rule 22    signature -> type ID LPAREN param_list RPAREN
Rule 23    signature -> type ID LPAREN RPAREN
Rule 24    param_list -> type ID
Rule 25    param_list -> type ID COMMA param_list
Rule 26    statement_list -> statement
Rule 27    statement_list -> statement statement_list
Rule 28    statement -> declaration_statement
Rule 29    statement -> embedded_statement
Rule 30    declaration_statement -> const_declaration SEMI
Rule 31    declaration_statement -> var_declaration SEMI
Rule 32    const_declaration -> CONST type const_declarators
Rule 33    const_declarators -> const_declarator
Rule 34    const_declarators -> const_declarator COMMA const_declarators
Rule 35    const_declarator -> ID EQUAL exp
Rule 36    var_declaration -> type var_declarators
Rule 37    var_declarators -> var_declarator
Rule 38    var_declarators -> var_declarator COMMA var_declarators
Rule 39    var_declarator -> ID
Rule 40    var_declarator -> ID EQUAL exp
Rule 41    embedded_statement -> block
Rule 42    embedded_statement -> empty_statement
Rule 43    embedded_statement -> exp_statement
Rule 44    embedded_statement -> selection_statement
Rule 45    embedded_statement -> iteration_statement
Rule 46    embedded_statement -> jump_statement
Rule 47    block -> LBRACE statement_list RBRACE
Rule 48    block -> LBRACE RBRACE
Rule 49    empty_statement -> SEMI
Rule 50    exp_statement -> statement_exp SEMI
Rule 51    object_creation_exp -> NEW type LPAREN RPAREN
Rule 52    object_creation_exp -> NEW type LPAREN RPAREN object_initializer
Rule 53    object_creation_exp -> NEW type LPAREN arg_list RPAREN
Rule 54    object_creation_exp -> NEW type LPAREN arg_list RPAREN object_initializer
Rule 55    object_initializer -> LBRACE RBRACE
Rule 56    object_initializer -> LBRACE member_initializer_list RBRACE
Rule 57    member_initializer_list -> member_initializer
Rule 58    member_initializer_list -> member_initializer COMMA member_initializer_list
Rule 59    member_initializer -> ID EQUAL exp
Rule 60    post_increment_exp -> primary_exp PLUSPLUS
Rule 61    post_decrement_exp -> primary_exp MINUSMINUS
Rule 62    pre_increment_exp -> PLUSPLUS unary_exp
Rule 63    pre_decrement_exp -> MINUSMINUS unary_exp
Rule 64    selection_statement -> if_statement
Rule 65    selection_statement -> switch_statement
Rule 66    if_statement -> IF LPAREN exp RPAREN embedded_statement
Rule 67    if_statement -> IF LPAREN exp RPAREN embedded_statement ELSE embedded_statement
Rule 68    switch_statement -> SWITCH LPAREN exp RPAREN LBRACE switch_body RBRACE
Rule 69    switch_body -> switch_section
Rule 70    switch_body -> switch_section switch_body
Rule 71    switch_section -> switch_label statement_list
Rule 72    switch_section -> switch_label switch_section
Rule 73    switch_label -> CASE pattern COLON
Rule 74    switch_label -> DEFAULT COLON
Rule 75    pattern -> exp
Rule 76    iteration_statement -> while_statement
Rule 77    iteration_statement -> do_statement
Rule 78    iteration_statement -> for_statement
Rule 79    iteration_statement -> foreach_statement
Rule 80    while_statement -> WHILE LPAREN exp RPAREN embedded_statement
Rule 81    do_statement -> DO embedded_statement WHILE LPAREN exp RPAREN SEMI
Rule 82    for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI for_iterator RPAREN embedded_statement
Rule 83    for_statement -> FOR LPAREN for_initializer SEMI for_condition SEMI RPAREN embedded_statement
Rule 84    for_statement -> FOR LPAREN for_initializer SEMI SEMI for_iterator RPAREN embedded_statement
Rule 85    for_statement -> FOR LPAREN for_initializer SEMI SEMI RPAREN embedded_statement
Rule 86    for_statement -> FOR LPAREN SEMI for_condition SEMI for_iterator RPAREN embedded_statement
Rule 87    for_statement -> FOR LPAREN SEMI for_condition SEMI RPAREN embedded_statement
Rule 88    for_statement -> FOR LPAREN SEMI SEMI for_iterator RPAREN embedded_statement
Rule 89    for_statement -> FOR LPAREN SEMI SEMI RPAREN embedded_statement
Rule 90    for_initializer -> var_declaration
Rule 91    for_initializer -> var_declaration COMMA for_initializer
Rule 92    for_condition -> exp
Rule 93    for_iterator -> statement_exp_list
Rule 94    statement_exp_list -> statement_exp
Rule 95    statement_exp_list -> statement_exp COMMA statement_exp_list
Rule 96    foreach_statement -> FOREACH LPAREN type ID IN exp RPAREN embedded_statement
Rule 97    jump_statement -> break_statement
Rule 98    jump_statement -> continue_statement
Rule 99    jump_statement -> return_statement
Rule 100   break_statement -> BREAK SEMI
Rule 101   continue_statement -> CONTINUE SEMI
Rule 102   return_statement -> RETURN SEMI
Rule 103   return_statement -> RETURN exp SEMI
Rule 104   arg_list -> exp
Rule 105   arg_list -> exp COMMA arg_list
Rule 106   primary_exp -> primary_no_array_creation_exp
Rule 107   primary_no_array_creation_exp -> TRUE
Rule 108   primary_no_array_creation_exp -> FALSE
Rule 109   primary_no_array_creation_exp -> NULL
Rule 110   primary_no_array_creation_exp -> INTNUM
Rule 111   primary_no_array_creation_exp -> HEXADECIMALNUM
Rule 112   primary_no_array_creation_exp -> BINARYNUM
Rule 113   primary_no_array_creation_exp -> FLOATNUM
Rule 114   primary_no_array_creation_exp -> DOUBLENUM
Rule 115   primary_no_array_creation_exp -> DECIMALNUM
Rule 116   primary_no_array_creation_exp -> CHARLITERAL
Rule 117   primary_no_array_creation_exp -> STRINGLITERAL
Rule 118   primary_no_array_creation_exp -> ID
Rule 119   primary_no_array_creation_exp -> LPAREN exp RPAREN
Rule 120   primary_no_array_creation_exp -> primary_exp DOT ID
Rule 121   primary_no_array_creation_exp -> primary_exp LPAREN RPAREN
Rule 122   primary_no_array_creation_exp -> primary_exp LPAREN arg_list RPAREN
Rule 123   primary_no_array_creation_exp -> primary_no_array_creation_exp LSB exp RSB
Rule 124   primary_no_array_creation_exp -> THIS
Rule 125   primary_no_array_creation_exp -> post_increment_exp
Rule 126   primary_no_array_creation_exp -> post_decrement_exp

Terminals, with rules where they appear

AMPER                : 
AMPERAMPER           : 
AMPEREQUAL           : 
BANG                 : 
BINARYNUM            : 112
BOOL                 : 12
BREAK                : 100
CASE                 : 73
CATCH                : 
CHAR                 : 15
CHARLITERAL          : 116
CIRCUMEQUAL          : 
CIRCUMFLEX           : 
CLASS                : 
COLON                : 73 74
COMMA                : 25 34 38 58 91 95 105
CONST                : 32
CONTINUE             : 101
DECIMAL              : 18
DECIMALNUM           : 115
DEFAULT              : 74
DO                   : 81
DOT                  : 2 120
DOUBLE               : 17
DOUBLENUM            : 114
ELSE                 : 67
ENUM                 : 
EQEQUAL              : 
EQUAL                : 35 40 59
FALSE                : 108
FINALLY              : 
FLOAT                : 16
FLOATNUM             : 113
FOR                  : 82 83 84 85 86 87 88 89
FOREACH              : 96
GEQ                  : 
GT                   : 
HEXADECIMALNUM       : 111
HOOKHOOK             : 
HOOKHOOKEQUAL        : 
ID                   : 1 2 22 23 24 25 35 39 40 59 96 118 120
IF                   : 66 67
IN                   : 96
INT                  : 13
INTERFACE            : 
INTNUM               : 110
IS                   : 
LBRACE               : 47 48 55 56 68
LEQ                  : 
LONG                 : 14
LPAREN               : 22 23 51 52 53 54 66 67 68 80 81 82 83 84 85 86 87 88 89 96 119 121 122
LSB                  : 123
LSHIFT               : 
LSHIFTEQUAL          : 
LT                   : 
MINUS                : 
MINUSEQUAL           : 
MINUSMINUS           : 61 63
NAMESPACE            : 
NEW                  : 51 52 53 54
NOTEQUAL             : 
NULL                 : 109
OBJECT               : 7
OUT                  : 
OVERRIDE             : 
PARAMS               : 
PERCENT              : 
PERCENTEQUAL         : 
PIPE                 : 
PIPEEQUAL            : 
PIPEPIPE             : 
PLUS                 : 
PLUSEQUAL            : 
PLUSPLUS             : 60 62
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
RBRACE               : 47 48 55 56 68
READONLY             : 
REF                  : 
RETURN               : 102 103
RPAREN               : 22 23 51 52 53 54 66 67 68 80 81 82 83 84 85 86 87 88 89 96 119 121 122
RSB                  : 123
RSHIFT               : 
RSHIFTEQUAL          : 
SEMI                 : 30 31 49 50 81 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 100 101 102 103
SHORT                : 
SIZEOF               : 
SLASH                : 
SLASHEQUAL           : 
STAR                 : 
STAREQUAL            : 
STATIC               : 
STRING               : 8
STRINGLITERAL        : 117
STRUCT               : 
SWITCH               : 68
THIS                 : 124
THROW                : 
TILDE                : 
TRUE                 : 107
TRY                  : 
TYPEOF               : 
UINT                 : 
ULONG                : 
USHORT               : 
VOID                 : 
WHILE                : 80 81
error                : 

Nonterminals, with rules where they appear

arg_list             : 53 54 105 122
block                : 21 41
break_statement      : 97
class_type           : 3
const_declaration    : 30
const_declarator     : 33 34
const_declarators    : 32 34
continue_statement   : 98
declaration_statement : 28
do_statement         : 77
embedded_statement   : 29 66 67 67 80 81 82 83 84 85 86 87 88 89 96
empty_statement      : 42
exp                  : 35 40 59 66 67 68 75 80 81 92 96 103 104 105 119 123
exp_statement        : 43
floating_point_type  : 11
for_condition        : 82 83 86 87
for_initializer      : 82 83 84 85 91
for_iterator         : 82 84 86 88
for_statement        : 78
foreach_statement    : 79
func_declaration     : 19 20
if_statement         : 64
integral_type        : 10
interface_type       : 4
iteration_statement  : 45
jump_statement       : 46
member_initializer   : 57 58
member_initializer_list : 56 58
object_creation_exp  : 
object_initializer   : 52 54
param_list           : 22 25
pattern              : 73
post_decrement_exp   : 126
post_increment_exp   : 125
pre_decrement_exp    : 
pre_increment_exp    : 
primary_exp          : 60 61 120 121 122
primary_no_array_creation_exp : 106 123
program              : 20
return_statement     : 99
selection_statement  : 44
signature            : 21
statement            : 26 27
statement_exp        : 50 94 95
statement_exp_list   : 93 95
statement_list       : 27 47 71
switch_body          : 68 70
switch_label         : 71 72
switch_section       : 69 70 72
switch_statement     : 65
type                 : 22 23 24 25 32 36 51 52 53 54 96
type_name            : 2 6 9 0
unary_exp            : 62 63
value_type           : 5
var_declaration      : 31 90 91
var_declarator       : 37 38
var_declarators      : 36 38
while_statement      : 76

